
decl E_int: ubit<32>[NI][NJ];
decl A_int: ubit<32>[NI][NK];
decl B_int: ubit<32>[NK][NJ];
decl F_int: ubit<32>[NJ][NL];
decl C_int: ubit<32>[NJ][NM];
decl D_int: ubit<32>[NM][NL];
decl G_int: ubit<32>[NI][NL];

for (let i: NI_bw = 0..NI) {
  for (let j: NJ_bw = 0..NJ) {
    E_int[i][j] := (0 as ubit<32>);
    ---
    for (let k: NK_bw = 0..NK) {
      let v: ubit<32> = A_int[i][k] * B_int[k][j]
    } combine {
      E_int[i][j] += v;
    }
  }
}

for (let i: NJ_bw = 0..NJ) {
  for (let j: NL_bw = 0..NL) {
    F_int[i][j] := (0 as ubit<32>);
    ---
    for (let k: NM_bw = 0..NM) {
      let v: ubit<32> = C_int[i][k] * D_int[k][j]
    } combine {
      F_int[i][j] += v;
    }
  }
}

---

for (let i: NI_bw = 0..NI) {
  for (let j: NL_bw = 0..NL) {
    G_int[i][j] := (0 as ubit<32>);
    ---
    for (let k: NJ_bw = 0..NJ) {
      let v: ubit<32> = E_int[i][k] * F_int[k][j]
    } combine {
      G_int[i][j] += v;
    }
  }
}
