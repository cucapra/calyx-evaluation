// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _kernel_HH_
#define _kernel_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "kernel_mul_32s_32s_32_3_1.h"
#include "kernel_control_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_CONTROL_ADDR_WIDTH = 4,
         unsigned int C_S_AXI_CONTROL_DATA_WIDTH = 32>
struct kernel : public sc_module {
    // Port declarations 69
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_lv<32> > alpha_V_Addr_A;
    sc_out< sc_logic > alpha_V_EN_A;
    sc_out< sc_lv<4> > alpha_V_WEN_A;
    sc_out< sc_lv<32> > alpha_V_Din_A;
    sc_in< sc_lv<32> > alpha_V_Dout_A;
    sc_out< sc_logic > alpha_V_Clk_A;
    sc_out< sc_logic > alpha_V_Rst_A;
    sc_out< sc_lv<32> > beta_V_Addr_A;
    sc_out< sc_logic > beta_V_EN_A;
    sc_out< sc_lv<4> > beta_V_WEN_A;
    sc_out< sc_lv<32> > beta_V_Din_A;
    sc_in< sc_lv<32> > beta_V_Dout_A;
    sc_out< sc_logic > beta_V_Clk_A;
    sc_out< sc_logic > beta_V_Rst_A;
    sc_out< sc_lv<32> > tmp_V_Addr_A;
    sc_out< sc_logic > tmp_V_EN_A;
    sc_out< sc_lv<4> > tmp_V_WEN_A;
    sc_out< sc_lv<32> > tmp_V_Din_A;
    sc_in< sc_lv<32> > tmp_V_Dout_A;
    sc_out< sc_logic > tmp_V_Clk_A;
    sc_out< sc_logic > tmp_V_Rst_A;
    sc_out< sc_lv<32> > A_V_Addr_A;
    sc_out< sc_logic > A_V_EN_A;
    sc_out< sc_lv<4> > A_V_WEN_A;
    sc_out< sc_lv<32> > A_V_Din_A;
    sc_in< sc_lv<32> > A_V_Dout_A;
    sc_out< sc_logic > A_V_Clk_A;
    sc_out< sc_logic > A_V_Rst_A;
    sc_out< sc_lv<32> > B_V_Addr_A;
    sc_out< sc_logic > B_V_EN_A;
    sc_out< sc_lv<4> > B_V_WEN_A;
    sc_out< sc_lv<32> > B_V_Din_A;
    sc_in< sc_lv<32> > B_V_Dout_A;
    sc_out< sc_logic > B_V_Clk_A;
    sc_out< sc_logic > B_V_Rst_A;
    sc_out< sc_lv<32> > C_V_Addr_A;
    sc_out< sc_logic > C_V_EN_A;
    sc_out< sc_lv<4> > C_V_WEN_A;
    sc_out< sc_lv<32> > C_V_Din_A;
    sc_in< sc_lv<32> > C_V_Dout_A;
    sc_out< sc_logic > C_V_Clk_A;
    sc_out< sc_logic > C_V_Rst_A;
    sc_out< sc_lv<32> > D_V_Addr_A;
    sc_out< sc_logic > D_V_EN_A;
    sc_out< sc_lv<4> > D_V_WEN_A;
    sc_out< sc_lv<32> > D_V_Din_A;
    sc_in< sc_lv<32> > D_V_Dout_A;
    sc_out< sc_logic > D_V_Clk_A;
    sc_out< sc_logic > D_V_Rst_A;
    sc_in< sc_logic > s_axi_control_AWVALID;
    sc_out< sc_logic > s_axi_control_AWREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_ADDR_WIDTH> > s_axi_control_AWADDR;
    sc_in< sc_logic > s_axi_control_WVALID;
    sc_out< sc_logic > s_axi_control_WREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_DATA_WIDTH> > s_axi_control_WDATA;
    sc_in< sc_uint<C_S_AXI_CONTROL_DATA_WIDTH/8> > s_axi_control_WSTRB;
    sc_in< sc_logic > s_axi_control_ARVALID;
    sc_out< sc_logic > s_axi_control_ARREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_ADDR_WIDTH> > s_axi_control_ARADDR;
    sc_out< sc_logic > s_axi_control_RVALID;
    sc_in< sc_logic > s_axi_control_RREADY;
    sc_out< sc_uint<C_S_AXI_CONTROL_DATA_WIDTH> > s_axi_control_RDATA;
    sc_out< sc_lv<2> > s_axi_control_RRESP;
    sc_out< sc_logic > s_axi_control_BVALID;
    sc_in< sc_logic > s_axi_control_BREADY;
    sc_out< sc_lv<2> > s_axi_control_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    kernel(sc_module_name name);
    SC_HAS_PROCESS(kernel);

    ~kernel();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    kernel_control_s_axi<C_S_AXI_CONTROL_ADDR_WIDTH,C_S_AXI_CONTROL_DATA_WIDTH>* kernel_control_s_axi_U;
    kernel_mul_32s_32s_32_3_1<1,3,32,32,32>* kernel_mul_32s_32s_32_3_1_U1;
    kernel_mul_32s_32s_32_3_1<1,3,32,32,32>* kernel_mul_32s_32s_32_3_1_U2;
    kernel_mul_32s_32s_32_3_1<1,3,32,32,32>* kernel_mul_32s_32s_32_3_1_U3;
    kernel_mul_32s_32s_32_3_1<1,3,32,32,32>* kernel_mul_32s_32s_32_3_1_U4;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<25> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<4> > i_fu_254_p2;
    sc_signal< sc_lv<4> > i_reg_483;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<8> > zext_ln16_fu_268_p1;
    sc_signal< sc_lv<8> > zext_ln16_reg_488;
    sc_signal< sc_lv<1> > icmp_ln13_fu_248_p2;
    sc_signal< sc_lv<4> > j_fu_278_p2;
    sc_signal< sc_lv<4> > j_reg_497;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<8> > zext_ln321_fu_284_p1;
    sc_signal< sc_lv<8> > zext_ln321_reg_502;
    sc_signal< sc_lv<1> > icmp_ln16_fu_272_p2;
    sc_signal< sc_lv<6> > tmp_V_addr_reg_507;
    sc_signal< sc_lv<4> > k_fu_304_p2;
    sc_signal< sc_lv<4> > k_reg_515;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln21_fu_298_p2;
    sc_signal< sc_lv<32> > A_V_load_reg_530;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > B_V_load_reg_535;
    sc_signal< sc_lv<32> > alpha_V_load_reg_540;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > grp_fu_346_p2;
    sc_signal< sc_lv<32> > mul_ln209_1_reg_545;
    sc_signal< sc_lv<32> > grp_fu_350_p2;
    sc_signal< sc_lv<32> > v_V_reg_550;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<32> > add_ln700_fu_354_p2;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<4> > i1_fu_365_p2;
    sc_signal< sc_lv<4> > i1_reg_563;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<8> > zext_ln34_fu_379_p1;
    sc_signal< sc_lv<8> > zext_ln34_reg_568;
    sc_signal< sc_lv<1> > icmp_ln31_fu_359_p2;
    sc_signal< sc_lv<4> > j1_fu_389_p2;
    sc_signal< sc_lv<4> > j1_reg_577;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<8> > zext_ln37_fu_395_p1;
    sc_signal< sc_lv<8> > zext_ln37_reg_582;
    sc_signal< sc_lv<1> > icmp_ln34_fu_383_p2;
    sc_signal< sc_lv<6> > D_V_addr_reg_587;
    sc_signal< sc_lv<32> > d_tmp_V_reg_592;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<32> > beta_V_load_reg_597;
    sc_signal< sc_lv<32> > grp_fu_409_p2;
    sc_signal< sc_lv<32> > mul_ln209_reg_602;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_lv<4> > k1_fu_419_p2;
    sc_signal< sc_lv<4> > k1_reg_610;
    sc_signal< sc_logic > ap_CS_fsm_state20;
    sc_signal< sc_lv<1> > icmp_ln41_fu_413_p2;
    sc_signal< sc_lv<32> > tmp_V_load_1_reg_625;
    sc_signal< sc_logic > ap_CS_fsm_state21;
    sc_signal< sc_lv<32> > C_V_load_reg_630;
    sc_signal< sc_lv<32> > grp_fu_461_p2;
    sc_signal< sc_lv<32> > v1_V_reg_635;
    sc_signal< sc_logic > ap_CS_fsm_state24;
    sc_signal< sc_lv<32> > add_ln700_1_fu_465_p2;
    sc_signal< sc_logic > ap_CS_fsm_state25;
    sc_signal< sc_lv<4> > i_0_reg_158;
    sc_signal< sc_lv<4> > j_0_reg_169;
    sc_signal< sc_lv<32> > tmp_V_load_reg_180;
    sc_signal< sc_lv<4> > k_0_reg_193;
    sc_signal< sc_lv<4> > i1_0_reg_204;
    sc_signal< sc_lv<4> > j1_0_reg_215;
    sc_signal< sc_lv<32> > D_V_load_reg_226;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_lv<4> > k1_0_reg_237;
    sc_signal< sc_lv<64> > zext_ln321_1_fu_293_p1;
    sc_signal< sc_lv<64> > zext_ln215_1_fu_319_p1;
    sc_signal< sc_lv<64> > zext_ln215_3_fu_341_p1;
    sc_signal< sc_lv<64> > zext_ln37_1_fu_404_p1;
    sc_signal< sc_lv<64> > zext_ln215_5_fu_434_p1;
    sc_signal< sc_lv<64> > zext_ln215_7_fu_456_p1;
    sc_signal< sc_lv<32> > tmp_V_Addr_A_orig;
    sc_signal< sc_lv<32> > A_V_Addr_A_orig;
    sc_signal< sc_lv<32> > B_V_Addr_A_orig;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > alpha_V_Addr_A_orig;
    sc_signal< sc_lv<32> > D_V_Addr_A_orig;
    sc_signal< sc_lv<32> > beta_V_Addr_A_orig;
    sc_signal< sc_lv<32> > C_V_Addr_A_orig;
    sc_signal< sc_lv<7> > tmp_4_fu_260_p3;
    sc_signal< sc_lv<8> > add_ln321_fu_288_p2;
    sc_signal< sc_lv<8> > zext_ln215_fu_310_p1;
    sc_signal< sc_lv<8> > add_ln215_fu_314_p2;
    sc_signal< sc_lv<7> > tmp_6_fu_324_p3;
    sc_signal< sc_lv<8> > zext_ln215_2_fu_332_p1;
    sc_signal< sc_lv<8> > add_ln215_1_fu_336_p2;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<7> > tmp_5_fu_371_p3;
    sc_signal< sc_lv<8> > add_ln37_fu_399_p2;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<8> > zext_ln215_4_fu_425_p1;
    sc_signal< sc_lv<8> > add_ln215_2_fu_429_p2;
    sc_signal< sc_lv<7> > tmp_7_fu_439_p3;
    sc_signal< sc_lv<8> > zext_ln215_6_fu_447_p1;
    sc_signal< sc_lv<8> > add_ln215_3_fu_451_p2;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_lv<25> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<25> ap_ST_fsm_state1;
    static const sc_lv<25> ap_ST_fsm_state2;
    static const sc_lv<25> ap_ST_fsm_state3;
    static const sc_lv<25> ap_ST_fsm_state4;
    static const sc_lv<25> ap_ST_fsm_state5;
    static const sc_lv<25> ap_ST_fsm_state6;
    static const sc_lv<25> ap_ST_fsm_state7;
    static const sc_lv<25> ap_ST_fsm_state8;
    static const sc_lv<25> ap_ST_fsm_state9;
    static const sc_lv<25> ap_ST_fsm_state10;
    static const sc_lv<25> ap_ST_fsm_state11;
    static const sc_lv<25> ap_ST_fsm_state12;
    static const sc_lv<25> ap_ST_fsm_state13;
    static const sc_lv<25> ap_ST_fsm_state14;
    static const sc_lv<25> ap_ST_fsm_state15;
    static const sc_lv<25> ap_ST_fsm_state16;
    static const sc_lv<25> ap_ST_fsm_state17;
    static const sc_lv<25> ap_ST_fsm_state18;
    static const sc_lv<25> ap_ST_fsm_state19;
    static const sc_lv<25> ap_ST_fsm_state20;
    static const sc_lv<25> ap_ST_fsm_state21;
    static const sc_lv<25> ap_ST_fsm_state22;
    static const sc_lv<25> ap_ST_fsm_state23;
    static const sc_lv<25> ap_ST_fsm_state24;
    static const sc_lv<25> ap_ST_fsm_state25;
    static const sc_lv<32> ap_const_lv32_0;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_15;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_A_V_Addr_A();
    void thread_A_V_Addr_A_orig();
    void thread_A_V_Clk_A();
    void thread_A_V_Din_A();
    void thread_A_V_EN_A();
    void thread_A_V_Rst_A();
    void thread_A_V_WEN_A();
    void thread_B_V_Addr_A();
    void thread_B_V_Addr_A_orig();
    void thread_B_V_Clk_A();
    void thread_B_V_Din_A();
    void thread_B_V_EN_A();
    void thread_B_V_Rst_A();
    void thread_B_V_WEN_A();
    void thread_C_V_Addr_A();
    void thread_C_V_Addr_A_orig();
    void thread_C_V_Clk_A();
    void thread_C_V_Din_A();
    void thread_C_V_EN_A();
    void thread_C_V_Rst_A();
    void thread_C_V_WEN_A();
    void thread_D_V_Addr_A();
    void thread_D_V_Addr_A_orig();
    void thread_D_V_Clk_A();
    void thread_D_V_Din_A();
    void thread_D_V_EN_A();
    void thread_D_V_Rst_A();
    void thread_D_V_WEN_A();
    void thread_add_ln215_1_fu_336_p2();
    void thread_add_ln215_2_fu_429_p2();
    void thread_add_ln215_3_fu_451_p2();
    void thread_add_ln215_fu_314_p2();
    void thread_add_ln321_fu_288_p2();
    void thread_add_ln37_fu_399_p2();
    void thread_add_ln700_1_fu_465_p2();
    void thread_add_ln700_fu_354_p2();
    void thread_alpha_V_Addr_A();
    void thread_alpha_V_Addr_A_orig();
    void thread_alpha_V_Clk_A();
    void thread_alpha_V_Din_A();
    void thread_alpha_V_EN_A();
    void thread_alpha_V_Rst_A();
    void thread_alpha_V_WEN_A();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state21();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state24();
    void thread_ap_CS_fsm_state25();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_beta_V_Addr_A();
    void thread_beta_V_Addr_A_orig();
    void thread_beta_V_Clk_A();
    void thread_beta_V_Din_A();
    void thread_beta_V_EN_A();
    void thread_beta_V_Rst_A();
    void thread_beta_V_WEN_A();
    void thread_i1_fu_365_p2();
    void thread_i_fu_254_p2();
    void thread_icmp_ln13_fu_248_p2();
    void thread_icmp_ln16_fu_272_p2();
    void thread_icmp_ln21_fu_298_p2();
    void thread_icmp_ln31_fu_359_p2();
    void thread_icmp_ln34_fu_383_p2();
    void thread_icmp_ln41_fu_413_p2();
    void thread_j1_fu_389_p2();
    void thread_j_fu_278_p2();
    void thread_k1_fu_419_p2();
    void thread_k_fu_304_p2();
    void thread_tmp_4_fu_260_p3();
    void thread_tmp_5_fu_371_p3();
    void thread_tmp_6_fu_324_p3();
    void thread_tmp_7_fu_439_p3();
    void thread_tmp_V_Addr_A();
    void thread_tmp_V_Addr_A_orig();
    void thread_tmp_V_Clk_A();
    void thread_tmp_V_Din_A();
    void thread_tmp_V_EN_A();
    void thread_tmp_V_Rst_A();
    void thread_tmp_V_WEN_A();
    void thread_zext_ln16_fu_268_p1();
    void thread_zext_ln215_1_fu_319_p1();
    void thread_zext_ln215_2_fu_332_p1();
    void thread_zext_ln215_3_fu_341_p1();
    void thread_zext_ln215_4_fu_425_p1();
    void thread_zext_ln215_5_fu_434_p1();
    void thread_zext_ln215_6_fu_447_p1();
    void thread_zext_ln215_7_fu_456_p1();
    void thread_zext_ln215_fu_310_p1();
    void thread_zext_ln321_1_fu_293_p1();
    void thread_zext_ln321_fu_284_p1();
    void thread_zext_ln34_fu_379_p1();
    void thread_zext_ln37_1_fu_404_p1();
    void thread_zext_ln37_fu_395_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
