#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("alpha_V_Addr_A", 32, hls_out, 0, "bram", "MemPortADDR2", 1),
	Port_Property("alpha_V_EN_A", 1, hls_out, 0, "bram", "MemPortCE2", 1),
	Port_Property("alpha_V_WEN_A", 4, hls_out, 0, "bram", "MemPortWE2", 1),
	Port_Property("alpha_V_Din_A", 32, hls_out, 0, "bram", "MemPortDIN2", 1),
	Port_Property("alpha_V_Dout_A", 32, hls_in, 0, "bram", "MemPortDOUT2", 1),
	Port_Property("alpha_V_Clk_A", 1, hls_out, 0, "bram", "mem_clk", 1),
	Port_Property("alpha_V_Rst_A", 1, hls_out, 0, "bram", "mem_rst", 1),
	Port_Property("beta_V_Addr_A", 32, hls_out, 1, "bram", "MemPortADDR2", 1),
	Port_Property("beta_V_EN_A", 1, hls_out, 1, "bram", "MemPortCE2", 1),
	Port_Property("beta_V_WEN_A", 4, hls_out, 1, "bram", "MemPortWE2", 1),
	Port_Property("beta_V_Din_A", 32, hls_out, 1, "bram", "MemPortDIN2", 1),
	Port_Property("beta_V_Dout_A", 32, hls_in, 1, "bram", "MemPortDOUT2", 1),
	Port_Property("beta_V_Clk_A", 1, hls_out, 1, "bram", "mem_clk", 1),
	Port_Property("beta_V_Rst_A", 1, hls_out, 1, "bram", "mem_rst", 1),
	Port_Property("tmp_V_Addr_A", 32, hls_out, 2, "bram", "MemPortADDR2", 1),
	Port_Property("tmp_V_EN_A", 1, hls_out, 2, "bram", "MemPortCE2", 1),
	Port_Property("tmp_V_WEN_A", 4, hls_out, 2, "bram", "MemPortWE2", 1),
	Port_Property("tmp_V_Din_A", 32, hls_out, 2, "bram", "MemPortDIN2", 1),
	Port_Property("tmp_V_Dout_A", 32, hls_in, 2, "bram", "MemPortDOUT2", 1),
	Port_Property("tmp_V_Clk_A", 1, hls_out, 2, "bram", "mem_clk", 1),
	Port_Property("tmp_V_Rst_A", 1, hls_out, 2, "bram", "mem_rst", 1),
	Port_Property("A_V_Addr_A", 32, hls_out, 3, "bram", "MemPortADDR2", 1),
	Port_Property("A_V_EN_A", 1, hls_out, 3, "bram", "MemPortCE2", 1),
	Port_Property("A_V_WEN_A", 4, hls_out, 3, "bram", "MemPortWE2", 1),
	Port_Property("A_V_Din_A", 32, hls_out, 3, "bram", "MemPortDIN2", 1),
	Port_Property("A_V_Dout_A", 32, hls_in, 3, "bram", "MemPortDOUT2", 1),
	Port_Property("A_V_Clk_A", 1, hls_out, 3, "bram", "mem_clk", 1),
	Port_Property("A_V_Rst_A", 1, hls_out, 3, "bram", "mem_rst", 1),
	Port_Property("B_V_Addr_A", 32, hls_out, 4, "bram", "MemPortADDR2", 1),
	Port_Property("B_V_EN_A", 1, hls_out, 4, "bram", "MemPortCE2", 1),
	Port_Property("B_V_WEN_A", 4, hls_out, 4, "bram", "MemPortWE2", 1),
	Port_Property("B_V_Din_A", 32, hls_out, 4, "bram", "MemPortDIN2", 1),
	Port_Property("B_V_Dout_A", 32, hls_in, 4, "bram", "MemPortDOUT2", 1),
	Port_Property("B_V_Clk_A", 1, hls_out, 4, "bram", "mem_clk", 1),
	Port_Property("B_V_Rst_A", 1, hls_out, 4, "bram", "mem_rst", 1),
	Port_Property("C_V_Addr_A", 32, hls_out, 5, "bram", "MemPortADDR2", 1),
	Port_Property("C_V_EN_A", 1, hls_out, 5, "bram", "MemPortCE2", 1),
	Port_Property("C_V_WEN_A", 4, hls_out, 5, "bram", "MemPortWE2", 1),
	Port_Property("C_V_Din_A", 32, hls_out, 5, "bram", "MemPortDIN2", 1),
	Port_Property("C_V_Dout_A", 32, hls_in, 5, "bram", "MemPortDOUT2", 1),
	Port_Property("C_V_Clk_A", 1, hls_out, 5, "bram", "mem_clk", 1),
	Port_Property("C_V_Rst_A", 1, hls_out, 5, "bram", "mem_rst", 1),
	Port_Property("D_V_Addr_A", 32, hls_out, 6, "bram", "MemPortADDR2", 1),
	Port_Property("D_V_EN_A", 1, hls_out, 6, "bram", "MemPortCE2", 1),
	Port_Property("D_V_WEN_A", 4, hls_out, 6, "bram", "MemPortWE2", 1),
	Port_Property("D_V_Din_A", 32, hls_out, 6, "bram", "MemPortDIN2", 1),
	Port_Property("D_V_Dout_A", 32, hls_in, 6, "bram", "MemPortDOUT2", 1),
	Port_Property("D_V_Clk_A", 1, hls_out, 6, "bram", "mem_clk", 1),
	Port_Property("D_V_Rst_A", 1, hls_out, 6, "bram", "mem_rst", 1),
	Port_Property("s_axi_control_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_AWADDR", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_ARADDR", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_BRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("interrupt", 1, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "kernel";
