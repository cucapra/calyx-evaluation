

================================================================
== Vivado HLS Report for 'kernel'
================================================================
* Date:           Thu Jul 30 13:37:29 2020

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        benchmark.prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   7.00|     5.745|        0.88|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+------+------+------+---------+
    |   Latency   |   Interval  | Pipeline|
    |  min |  max |  min |  max |   Type  |
    +------+------+------+------+---------+
    |  8290|  8290|  8290|  8290|   none  |
    +------+------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------+------+------+----------+-----------+-----------+------+----------+
        |                 |   Latency   | Iteration|  Initiation Interval  | Trip |          |
        |    Loop Name    |  min |  max |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------------+------+------+----------+-----------+-----------+------+----------+
        |- Loop 1         |  4752|  4752|       594|          -|          -|     8|    no    |
        | + Loop 1.1      |   592|   592|        74|          -|          -|     8|    no    |
        |  ++ Loop 1.1.1  |    72|    72|         9|          -|          -|     8|    no    |
        |- Loop 2         |  3536|  3536|       442|          -|          -|     8|    no    |
        | + Loop 2.1      |   440|   440|        55|          -|          -|     8|    no    |
        |  ++ Loop 2.1.1  |    48|    48|         6|          -|          -|     8|    no    |
        +-----------------+------+------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 25
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 13 
3 --> 4 2 
4 --> 5 3 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 4 
13 --> 14 
14 --> 15 13 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 14 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 20 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([1 x i32]* %alpha_V), !map !42"   --->   Operation 26 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([1 x i32]* %beta_V), !map !48"   --->   Operation 27 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([64 x i32]* %tmp_V), !map !52"   --->   Operation 28 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([64 x i32]* %A_V), !map !58"   --->   Operation 29 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([64 x i32]* %B_V), !map !62"   --->   Operation 30 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([64 x i32]* %C_V), !map !66"   --->   Operation 31 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([64 x i32]* %D_V), !map !70"   --->   Operation 32 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%beta_V_addr = getelementptr [1 x i32]* %beta_V, i64 0, i64 0" [./linear-algebra-2mm.cpp:4]   --->   Operation 33 'getelementptr' 'beta_V_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%alpha_V_addr = getelementptr [1 x i32]* %alpha_V, i64 0, i64 0" [./linear-algebra-2mm.cpp:4]   --->   Operation 34 'getelementptr' 'alpha_V_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([7 x i8]* @kernel_str) nounwind"   --->   Operation 35 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface([1 x i32]* %alpha_V, [5 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [./linear-algebra-2mm.cpp:5]   --->   Operation 36 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface([1 x i32]* %beta_V, [5 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [./linear-algebra-2mm.cpp:6]   --->   Operation 37 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface([64 x i32]* %tmp_V, [5 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)" [./linear-algebra-2mm.cpp:7]   --->   Operation 38 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface([64 x i32]* %A_V, [5 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)" [./linear-algebra-2mm.cpp:8]   --->   Operation 39 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface([64 x i32]* %B_V, [5 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)" [./linear-algebra-2mm.cpp:9]   --->   Operation 40 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface([64 x i32]* %C_V, [5 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)" [./linear-algebra-2mm.cpp:10]   --->   Operation 41 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface([64 x i32]* %D_V, [5 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)" [./linear-algebra-2mm.cpp:11]   --->   Operation 42 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [8 x i8]* @p_str3, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [./linear-algebra-2mm.cpp:12]   --->   Operation 43 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (1.76ns)   --->   "br label %1" [./linear-algebra-2mm.cpp:13]   --->   Operation 44 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 1.76>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%i_0 = phi i4 [ 0, %0 ], [ %i, %hls_label_0_end ]"   --->   Operation 45 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (1.30ns)   --->   "%icmp_ln13 = icmp eq i4 %i_0, -8" [./linear-algebra-2mm.cpp:13]   --->   Operation 46 'icmp' 'icmp_ln13' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)"   --->   Operation 47 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (1.73ns)   --->   "%i = add i4 %i_0, 1" [./linear-algebra-2mm.cpp:13]   --->   Operation 48 'add' 'i' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "br i1 %icmp_ln13, label %.preheader.preheader, label %hls_label_0_begin" [./linear-algebra-2mm.cpp:13]   --->   Operation 49 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str4)" [./linear-algebra-2mm.cpp:13]   --->   Operation 50 'specregionbegin' 'tmp' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%tmp_4 = call i7 @_ssdm_op_BitConcatenate.i7.i4.i3(i4 %i_0, i3 0)" [./linear-algebra-2mm.cpp:19]   --->   Operation 51 'bitconcatenate' 'tmp_4' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%zext_ln16 = zext i7 %tmp_4 to i8" [./linear-algebra-2mm.cpp:16]   --->   Operation 52 'zext' 'zext_ln16' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (1.76ns)   --->   "br label %2" [./linear-algebra-2mm.cpp:16]   --->   Operation 53 'br' <Predicate = (!icmp_ln13)> <Delay = 1.76>
ST_2 : Operation 54 [1/1] (1.76ns)   --->   "br label %.preheader" [./linear-algebra-2mm.cpp:31]   --->   Operation 54 'br' <Predicate = (icmp_ln13)> <Delay = 1.76>

State 3 <SV = 2> <Delay = 1.87>
ST_3 : Operation 55 [1/1] (0.00ns)   --->   "%j_0 = phi i4 [ 0, %hls_label_0_begin ], [ %j, %hls_label_1_end ]"   --->   Operation 55 'phi' 'j_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 56 [1/1] (1.30ns)   --->   "%icmp_ln16 = icmp eq i4 %j_0, -8" [./linear-algebra-2mm.cpp:16]   --->   Operation 56 'icmp' 'icmp_ln16' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 57 [1/1] (0.00ns)   --->   "%empty_2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)"   --->   Operation 57 'speclooptripcount' 'empty_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 58 [1/1] (1.73ns)   --->   "%j = add i4 %j_0, 1" [./linear-algebra-2mm.cpp:16]   --->   Operation 58 'add' 'j' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 59 [1/1] (0.00ns)   --->   "br i1 %icmp_ln16, label %hls_label_0_end, label %hls_label_1_begin" [./linear-algebra-2mm.cpp:16]   --->   Operation 59 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "%tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str5)" [./linear-algebra-2mm.cpp:16]   --->   Operation 60 'specregionbegin' 'tmp_2' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_3 : Operation 61 [1/1] (0.00ns)   --->   "%zext_ln321 = zext i4 %j_0 to i8" [./linear-algebra-2mm.cpp:19]   --->   Operation 61 'zext' 'zext_ln321' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_3 : Operation 62 [1/1] (1.87ns)   --->   "%add_ln321 = add i8 %zext_ln16, %zext_ln321" [./linear-algebra-2mm.cpp:19]   --->   Operation 62 'add' 'add_ln321' <Predicate = (!icmp_ln16)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 63 [1/1] (0.00ns)   --->   "%zext_ln321_1 = zext i8 %add_ln321 to i64" [./linear-algebra-2mm.cpp:19]   --->   Operation 63 'zext' 'zext_ln321_1' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_3 : Operation 64 [1/1] (0.00ns)   --->   "%tmp_V_addr = getelementptr [64 x i32]* %tmp_V, i64 0, i64 %zext_ln321_1" [./linear-algebra-2mm.cpp:19]   --->   Operation 64 'getelementptr' 'tmp_V_addr' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_3 : Operation 65 [1/1] (1.76ns)   --->   "br label %3" [./linear-algebra-2mm.cpp:21]   --->   Operation 65 'br' <Predicate = (!icmp_ln16)> <Delay = 1.76>
ST_3 : Operation 66 [1/1] (0.00ns)   --->   "%empty_5 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str4, i32 %tmp)" [./linear-algebra-2mm.cpp:29]   --->   Operation 66 'specregionend' 'empty_5' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_3 : Operation 67 [1/1] (0.00ns)   --->   "br label %1" [./linear-algebra-2mm.cpp:13]   --->   Operation 67 'br' <Predicate = (icmp_ln16)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 5.12>
ST_4 : Operation 68 [1/1] (0.00ns)   --->   "%tmp_V_load = phi i32 [ 0, %hls_label_1_begin ], [ %add_ln700, %4 ]" [./linear-algebra-2mm.cpp:26]   --->   Operation 68 'phi' 'tmp_V_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 69 [1/1] (0.00ns)   --->   "%k_0 = phi i4 [ 0, %hls_label_1_begin ], [ %k, %4 ]"   --->   Operation 69 'phi' 'k_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 70 [1/1] (3.25ns)   --->   "store i32 %tmp_V_load, i32* %tmp_V_addr, align 4" [./linear-algebra-2mm.cpp:26]   --->   Operation 70 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_4 : Operation 71 [1/1] (1.30ns)   --->   "%icmp_ln21 = icmp eq i4 %k_0, -8" [./linear-algebra-2mm.cpp:21]   --->   Operation 71 'icmp' 'icmp_ln21' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 72 [1/1] (0.00ns)   --->   "%empty_3 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)"   --->   Operation 72 'speclooptripcount' 'empty_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 73 [1/1] (1.73ns)   --->   "%k = add i4 %k_0, 1" [./linear-algebra-2mm.cpp:21]   --->   Operation 73 'add' 'k' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 74 [1/1] (0.00ns)   --->   "br i1 %icmp_ln21, label %hls_label_1_end, label %4" [./linear-algebra-2mm.cpp:21]   --->   Operation 74 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 75 [1/1] (0.00ns)   --->   "%zext_ln215 = zext i4 %k_0 to i8" [./linear-algebra-2mm.cpp:24]   --->   Operation 75 'zext' 'zext_ln215' <Predicate = (!icmp_ln21)> <Delay = 0.00>
ST_4 : Operation 76 [1/1] (1.87ns)   --->   "%add_ln215 = add i8 %zext_ln215, %zext_ln16" [./linear-algebra-2mm.cpp:24]   --->   Operation 76 'add' 'add_ln215' <Predicate = (!icmp_ln21)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 77 [1/1] (0.00ns)   --->   "%zext_ln215_1 = zext i8 %add_ln215 to i64" [./linear-algebra-2mm.cpp:24]   --->   Operation 77 'zext' 'zext_ln215_1' <Predicate = (!icmp_ln21)> <Delay = 0.00>
ST_4 : Operation 78 [1/1] (0.00ns)   --->   "%A_V_addr = getelementptr [64 x i32]* %A_V, i64 0, i64 %zext_ln215_1" [./linear-algebra-2mm.cpp:24]   --->   Operation 78 'getelementptr' 'A_V_addr' <Predicate = (!icmp_ln21)> <Delay = 0.00>
ST_4 : Operation 79 [1/1] (0.00ns)   --->   "%tmp_6 = call i7 @_ssdm_op_BitConcatenate.i7.i4.i3(i4 %k_0, i3 0)" [./linear-algebra-2mm.cpp:24]   --->   Operation 79 'bitconcatenate' 'tmp_6' <Predicate = (!icmp_ln21)> <Delay = 0.00>
ST_4 : Operation 80 [1/1] (0.00ns)   --->   "%zext_ln215_2 = zext i7 %tmp_6 to i8" [./linear-algebra-2mm.cpp:24]   --->   Operation 80 'zext' 'zext_ln215_2' <Predicate = (!icmp_ln21)> <Delay = 0.00>
ST_4 : Operation 81 [1/1] (1.87ns)   --->   "%add_ln215_1 = add i8 %zext_ln321, %zext_ln215_2" [./linear-algebra-2mm.cpp:24]   --->   Operation 81 'add' 'add_ln215_1' <Predicate = (!icmp_ln21)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 82 [1/1] (0.00ns)   --->   "%zext_ln215_3 = zext i8 %add_ln215_1 to i64" [./linear-algebra-2mm.cpp:24]   --->   Operation 82 'zext' 'zext_ln215_3' <Predicate = (!icmp_ln21)> <Delay = 0.00>
ST_4 : Operation 83 [1/1] (0.00ns)   --->   "%B_V_addr = getelementptr [64 x i32]* %B_V, i64 0, i64 %zext_ln215_3" [./linear-algebra-2mm.cpp:24]   --->   Operation 83 'getelementptr' 'B_V_addr' <Predicate = (!icmp_ln21)> <Delay = 0.00>
ST_4 : Operation 84 [2/2] (3.25ns)   --->   "%A_V_load = load i32* %A_V_addr, align 4" [./linear-algebra-2mm.cpp:24]   --->   Operation 84 'load' 'A_V_load' <Predicate = (!icmp_ln21)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_4 : Operation 85 [2/2] (3.25ns)   --->   "%B_V_load = load i32* %B_V_addr, align 4" [./linear-algebra-2mm.cpp:24]   --->   Operation 85 'load' 'B_V_load' <Predicate = (!icmp_ln21)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_4 : Operation 86 [1/1] (0.00ns)   --->   "%empty_4 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str5, i32 %tmp_2)" [./linear-algebra-2mm.cpp:28]   --->   Operation 86 'specregionend' 'empty_4' <Predicate = (icmp_ln21)> <Delay = 0.00>
ST_4 : Operation 87 [1/1] (0.00ns)   --->   "br label %2" [./linear-algebra-2mm.cpp:16]   --->   Operation 87 'br' <Predicate = (icmp_ln21)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 3.25>
ST_5 : Operation 88 [1/2] (3.25ns)   --->   "%A_V_load = load i32* %A_V_addr, align 4" [./linear-algebra-2mm.cpp:24]   --->   Operation 88 'load' 'A_V_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_5 : Operation 89 [1/2] (3.25ns)   --->   "%B_V_load = load i32* %B_V_addr, align 4" [./linear-algebra-2mm.cpp:24]   --->   Operation 89 'load' 'B_V_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>

State 6 <SV = 5> <Delay = 5.74>
ST_6 : Operation 90 [3/3] (5.74ns)   --->   "%mul_ln209_1 = mul i32 %A_V_load, %B_V_load" [./linear-algebra-2mm.cpp:24]   --->   Operation 90 'mul' 'mul_ln209_1' <Predicate = true> <Delay = 5.74> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 5.74> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 5.74>
ST_7 : Operation 91 [2/2] (2.32ns)   --->   "%alpha_V_load = load i32* %alpha_V_addr, align 4" [./linear-algebra-2mm.cpp:24]   --->   Operation 91 'load' 'alpha_V_load' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_7 : Operation 92 [2/3] (5.74ns)   --->   "%mul_ln209_1 = mul i32 %A_V_load, %B_V_load" [./linear-algebra-2mm.cpp:24]   --->   Operation 92 'mul' 'mul_ln209_1' <Predicate = true> <Delay = 5.74> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 5.74> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 5.74>
ST_8 : Operation 93 [1/2] (2.32ns)   --->   "%alpha_V_load = load i32* %alpha_V_addr, align 4" [./linear-algebra-2mm.cpp:24]   --->   Operation 93 'load' 'alpha_V_load' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_8 : Operation 94 [1/3] (5.74ns)   --->   "%mul_ln209_1 = mul i32 %A_V_load, %B_V_load" [./linear-algebra-2mm.cpp:24]   --->   Operation 94 'mul' 'mul_ln209_1' <Predicate = true> <Delay = 5.74> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 5.74> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 5.74>
ST_9 : Operation 95 [3/3] (5.74ns)   --->   "%v_V = mul i32 %mul_ln209_1, %alpha_V_load" [./linear-algebra-2mm.cpp:24]   --->   Operation 95 'mul' 'v_V' <Predicate = true> <Delay = 5.74> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 5.74> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 5.74>
ST_10 : Operation 96 [2/3] (5.74ns)   --->   "%v_V = mul i32 %mul_ln209_1, %alpha_V_load" [./linear-algebra-2mm.cpp:24]   --->   Operation 96 'mul' 'v_V' <Predicate = true> <Delay = 5.74> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 5.74> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 5.74>
ST_11 : Operation 97 [1/3] (5.74ns)   --->   "%v_V = mul i32 %mul_ln209_1, %alpha_V_load" [./linear-algebra-2mm.cpp:24]   --->   Operation 97 'mul' 'v_V' <Predicate = true> <Delay = 5.74> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 5.74> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 2.55>
ST_12 : Operation 98 [1/1] (2.55ns)   --->   "%add_ln700 = add i32 %tmp_V_load, %v_V" [./linear-algebra-2mm.cpp:26]   --->   Operation 98 'add' 'add_ln700' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 99 [1/1] (0.00ns)   --->   "br label %3" [./linear-algebra-2mm.cpp:21]   --->   Operation 99 'br' <Predicate = true> <Delay = 0.00>

State 13 <SV = 2> <Delay = 1.76>
ST_13 : Operation 100 [1/1] (0.00ns)   --->   "%i1_0 = phi i4 [ %i1, %hls_label_3_end ], [ 0, %.preheader.preheader ]"   --->   Operation 100 'phi' 'i1_0' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 101 [1/1] (1.30ns)   --->   "%icmp_ln31 = icmp eq i4 %i1_0, -8" [./linear-algebra-2mm.cpp:31]   --->   Operation 101 'icmp' 'icmp_ln31' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 102 [1/1] (0.00ns)   --->   "%empty_6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)"   --->   Operation 102 'speclooptripcount' 'empty_6' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 103 [1/1] (1.73ns)   --->   "%i1 = add i4 %i1_0, 1" [./linear-algebra-2mm.cpp:31]   --->   Operation 103 'add' 'i1' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 104 [1/1] (0.00ns)   --->   "br i1 %icmp_ln31, label %8, label %hls_label_3_begin" [./linear-algebra-2mm.cpp:31]   --->   Operation 104 'br' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 105 [1/1] (0.00ns)   --->   "%tmp_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str7)" [./linear-algebra-2mm.cpp:31]   --->   Operation 105 'specregionbegin' 'tmp_1' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_13 : Operation 106 [1/1] (0.00ns)   --->   "%tmp_5 = call i7 @_ssdm_op_BitConcatenate.i7.i4.i3(i4 %i1_0, i3 0)" [./linear-algebra-2mm.cpp:44]   --->   Operation 106 'bitconcatenate' 'tmp_5' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_13 : Operation 107 [1/1] (0.00ns)   --->   "%zext_ln34 = zext i7 %tmp_5 to i8" [./linear-algebra-2mm.cpp:34]   --->   Operation 107 'zext' 'zext_ln34' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_13 : Operation 108 [1/1] (1.76ns)   --->   "br label %5" [./linear-algebra-2mm.cpp:34]   --->   Operation 108 'br' <Predicate = (!icmp_ln31)> <Delay = 1.76>
ST_13 : Operation 109 [1/1] (0.00ns)   --->   "ret void" [./linear-algebra-2mm.cpp:50]   --->   Operation 109 'ret' <Predicate = (icmp_ln31)> <Delay = 0.00>

State 14 <SV = 3> <Delay = 5.12>
ST_14 : Operation 110 [1/1] (0.00ns)   --->   "%j1_0 = phi i4 [ 0, %hls_label_3_begin ], [ %j1, %hls_label_4_end ]"   --->   Operation 110 'phi' 'j1_0' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 111 [1/1] (1.30ns)   --->   "%icmp_ln34 = icmp eq i4 %j1_0, -8" [./linear-algebra-2mm.cpp:34]   --->   Operation 111 'icmp' 'icmp_ln34' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 112 [1/1] (0.00ns)   --->   "%empty_7 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)"   --->   Operation 112 'speclooptripcount' 'empty_7' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 113 [1/1] (1.73ns)   --->   "%j1 = add i4 %j1_0, 1" [./linear-algebra-2mm.cpp:34]   --->   Operation 113 'add' 'j1' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 114 [1/1] (0.00ns)   --->   "br i1 %icmp_ln34, label %hls_label_3_end, label %hls_label_4_begin" [./linear-algebra-2mm.cpp:34]   --->   Operation 114 'br' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 115 [1/1] (0.00ns)   --->   "%zext_ln37 = zext i4 %j1_0 to i8" [./linear-algebra-2mm.cpp:37]   --->   Operation 115 'zext' 'zext_ln37' <Predicate = (!icmp_ln34)> <Delay = 0.00>
ST_14 : Operation 116 [1/1] (1.87ns)   --->   "%add_ln37 = add i8 %zext_ln34, %zext_ln37" [./linear-algebra-2mm.cpp:37]   --->   Operation 116 'add' 'add_ln37' <Predicate = (!icmp_ln34)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 117 [1/1] (0.00ns)   --->   "%zext_ln37_1 = zext i8 %add_ln37 to i64" [./linear-algebra-2mm.cpp:37]   --->   Operation 117 'zext' 'zext_ln37_1' <Predicate = (!icmp_ln34)> <Delay = 0.00>
ST_14 : Operation 118 [1/1] (0.00ns)   --->   "%D_V_addr = getelementptr [64 x i32]* %D_V, i64 0, i64 %zext_ln37_1" [./linear-algebra-2mm.cpp:37]   --->   Operation 118 'getelementptr' 'D_V_addr' <Predicate = (!icmp_ln34)> <Delay = 0.00>
ST_14 : Operation 119 [2/2] (3.25ns)   --->   "%d_tmp_V = load i32* %D_V_addr, align 4" [./linear-algebra-2mm.cpp:37]   --->   Operation 119 'load' 'd_tmp_V' <Predicate = (!icmp_ln34)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_14 : Operation 120 [2/2] (2.32ns)   --->   "%beta_V_load = load i32* %beta_V_addr, align 4" [./linear-algebra-2mm.cpp:39]   --->   Operation 120 'load' 'beta_V_load' <Predicate = (!icmp_ln34)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_14 : Operation 121 [1/1] (0.00ns)   --->   "%empty_10 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str7, i32 %tmp_1)" [./linear-algebra-2mm.cpp:49]   --->   Operation 121 'specregionend' 'empty_10' <Predicate = (icmp_ln34)> <Delay = 0.00>
ST_14 : Operation 122 [1/1] (0.00ns)   --->   "br label %.preheader" [./linear-algebra-2mm.cpp:31]   --->   Operation 122 'br' <Predicate = (icmp_ln34)> <Delay = 0.00>

State 15 <SV = 4> <Delay = 3.25>
ST_15 : Operation 123 [1/2] (3.25ns)   --->   "%d_tmp_V = load i32* %D_V_addr, align 4" [./linear-algebra-2mm.cpp:37]   --->   Operation 123 'load' 'd_tmp_V' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_15 : Operation 124 [1/2] (2.32ns)   --->   "%beta_V_load = load i32* %beta_V_addr, align 4" [./linear-algebra-2mm.cpp:39]   --->   Operation 124 'load' 'beta_V_load' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>

State 16 <SV = 5> <Delay = 5.74>
ST_16 : Operation 125 [3/3] (5.74ns)   --->   "%mul_ln209 = mul i32 %beta_V_load, %d_tmp_V" [./linear-algebra-2mm.cpp:39]   --->   Operation 125 'mul' 'mul_ln209' <Predicate = true> <Delay = 5.74> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 5.74> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 6> <Delay = 5.74>
ST_17 : Operation 126 [2/3] (5.74ns)   --->   "%mul_ln209 = mul i32 %beta_V_load, %d_tmp_V" [./linear-algebra-2mm.cpp:39]   --->   Operation 126 'mul' 'mul_ln209' <Predicate = true> <Delay = 5.74> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 5.74> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 7> <Delay = 5.74>
ST_18 : Operation 127 [1/3] (5.74ns)   --->   "%mul_ln209 = mul i32 %beta_V_load, %d_tmp_V" [./linear-algebra-2mm.cpp:39]   --->   Operation 127 'mul' 'mul_ln209' <Predicate = true> <Delay = 5.74> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 5.74> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 8> <Delay = 1.76>
ST_19 : Operation 128 [1/1] (0.00ns)   --->   "%tmp_3 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str8)" [./linear-algebra-2mm.cpp:34]   --->   Operation 128 'specregionbegin' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 129 [1/1] (1.76ns)   --->   "br label %6" [./linear-algebra-2mm.cpp:41]   --->   Operation 129 'br' <Predicate = true> <Delay = 1.76>

State 20 <SV = 9> <Delay = 5.12>
ST_20 : Operation 130 [1/1] (0.00ns)   --->   "%D_V_load = phi i32 [ %mul_ln209, %hls_label_4_begin ], [ %add_ln700_1, %7 ]" [./linear-algebra-2mm.cpp:39]   --->   Operation 130 'phi' 'D_V_load' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 131 [1/1] (0.00ns)   --->   "%k1_0 = phi i4 [ 0, %hls_label_4_begin ], [ %k1, %7 ]"   --->   Operation 131 'phi' 'k1_0' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 132 [1/1] (3.25ns)   --->   "store i32 %D_V_load, i32* %D_V_addr, align 4" [./linear-algebra-2mm.cpp:46]   --->   Operation 132 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_20 : Operation 133 [1/1] (1.30ns)   --->   "%icmp_ln41 = icmp eq i4 %k1_0, -8" [./linear-algebra-2mm.cpp:41]   --->   Operation 133 'icmp' 'icmp_ln41' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 134 [1/1] (0.00ns)   --->   "%empty_8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)"   --->   Operation 134 'speclooptripcount' 'empty_8' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 135 [1/1] (1.73ns)   --->   "%k1 = add i4 %k1_0, 1" [./linear-algebra-2mm.cpp:41]   --->   Operation 135 'add' 'k1' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 136 [1/1] (0.00ns)   --->   "br i1 %icmp_ln41, label %hls_label_4_end, label %7" [./linear-algebra-2mm.cpp:41]   --->   Operation 136 'br' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 137 [1/1] (0.00ns)   --->   "%zext_ln215_4 = zext i4 %k1_0 to i8" [./linear-algebra-2mm.cpp:44]   --->   Operation 137 'zext' 'zext_ln215_4' <Predicate = (!icmp_ln41)> <Delay = 0.00>
ST_20 : Operation 138 [1/1] (1.87ns)   --->   "%add_ln215_2 = add i8 %zext_ln215_4, %zext_ln34" [./linear-algebra-2mm.cpp:44]   --->   Operation 138 'add' 'add_ln215_2' <Predicate = (!icmp_ln41)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 139 [1/1] (0.00ns)   --->   "%zext_ln215_5 = zext i8 %add_ln215_2 to i64" [./linear-algebra-2mm.cpp:44]   --->   Operation 139 'zext' 'zext_ln215_5' <Predicate = (!icmp_ln41)> <Delay = 0.00>
ST_20 : Operation 140 [1/1] (0.00ns)   --->   "%tmp_V_addr_1 = getelementptr [64 x i32]* %tmp_V, i64 0, i64 %zext_ln215_5" [./linear-algebra-2mm.cpp:44]   --->   Operation 140 'getelementptr' 'tmp_V_addr_1' <Predicate = (!icmp_ln41)> <Delay = 0.00>
ST_20 : Operation 141 [1/1] (0.00ns)   --->   "%tmp_7 = call i7 @_ssdm_op_BitConcatenate.i7.i4.i3(i4 %k1_0, i3 0)" [./linear-algebra-2mm.cpp:44]   --->   Operation 141 'bitconcatenate' 'tmp_7' <Predicate = (!icmp_ln41)> <Delay = 0.00>
ST_20 : Operation 142 [1/1] (0.00ns)   --->   "%zext_ln215_6 = zext i7 %tmp_7 to i8" [./linear-algebra-2mm.cpp:44]   --->   Operation 142 'zext' 'zext_ln215_6' <Predicate = (!icmp_ln41)> <Delay = 0.00>
ST_20 : Operation 143 [1/1] (1.87ns)   --->   "%add_ln215_3 = add i8 %zext_ln37, %zext_ln215_6" [./linear-algebra-2mm.cpp:44]   --->   Operation 143 'add' 'add_ln215_3' <Predicate = (!icmp_ln41)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 144 [1/1] (0.00ns)   --->   "%zext_ln215_7 = zext i8 %add_ln215_3 to i64" [./linear-algebra-2mm.cpp:44]   --->   Operation 144 'zext' 'zext_ln215_7' <Predicate = (!icmp_ln41)> <Delay = 0.00>
ST_20 : Operation 145 [1/1] (0.00ns)   --->   "%C_V_addr = getelementptr [64 x i32]* %C_V, i64 0, i64 %zext_ln215_7" [./linear-algebra-2mm.cpp:44]   --->   Operation 145 'getelementptr' 'C_V_addr' <Predicate = (!icmp_ln41)> <Delay = 0.00>
ST_20 : Operation 146 [2/2] (3.25ns)   --->   "%tmp_V_load_1 = load i32* %tmp_V_addr_1, align 4" [./linear-algebra-2mm.cpp:44]   --->   Operation 146 'load' 'tmp_V_load_1' <Predicate = (!icmp_ln41)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_20 : Operation 147 [2/2] (3.25ns)   --->   "%C_V_load = load i32* %C_V_addr, align 4" [./linear-algebra-2mm.cpp:44]   --->   Operation 147 'load' 'C_V_load' <Predicate = (!icmp_ln41)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_20 : Operation 148 [1/1] (0.00ns)   --->   "%empty_9 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str8, i32 %tmp_3)" [./linear-algebra-2mm.cpp:48]   --->   Operation 148 'specregionend' 'empty_9' <Predicate = (icmp_ln41)> <Delay = 0.00>
ST_20 : Operation 149 [1/1] (0.00ns)   --->   "br label %5" [./linear-algebra-2mm.cpp:34]   --->   Operation 149 'br' <Predicate = (icmp_ln41)> <Delay = 0.00>

State 21 <SV = 10> <Delay = 3.25>
ST_21 : Operation 150 [1/2] (3.25ns)   --->   "%tmp_V_load_1 = load i32* %tmp_V_addr_1, align 4" [./linear-algebra-2mm.cpp:44]   --->   Operation 150 'load' 'tmp_V_load_1' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_21 : Operation 151 [1/2] (3.25ns)   --->   "%C_V_load = load i32* %C_V_addr, align 4" [./linear-algebra-2mm.cpp:44]   --->   Operation 151 'load' 'C_V_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>

State 22 <SV = 11> <Delay = 5.74>
ST_22 : Operation 152 [3/3] (5.74ns)   --->   "%v1_V = mul i32 %tmp_V_load_1, %C_V_load" [./linear-algebra-2mm.cpp:44]   --->   Operation 152 'mul' 'v1_V' <Predicate = true> <Delay = 5.74> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 5.74> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 23 <SV = 12> <Delay = 5.74>
ST_23 : Operation 153 [2/3] (5.74ns)   --->   "%v1_V = mul i32 %tmp_V_load_1, %C_V_load" [./linear-algebra-2mm.cpp:44]   --->   Operation 153 'mul' 'v1_V' <Predicate = true> <Delay = 5.74> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 5.74> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 13> <Delay = 5.74>
ST_24 : Operation 154 [1/3] (5.74ns)   --->   "%v1_V = mul i32 %tmp_V_load_1, %C_V_load" [./linear-algebra-2mm.cpp:44]   --->   Operation 154 'mul' 'v1_V' <Predicate = true> <Delay = 5.74> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 5.74> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 25 <SV = 14> <Delay = 2.55>
ST_25 : Operation 155 [1/1] (2.55ns)   --->   "%add_ln700_1 = add i32 %D_V_load, %v1_V" [./linear-algebra-2mm.cpp:46]   --->   Operation 155 'add' 'add_ln700_1' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 156 [1/1] (0.00ns)   --->   "br label %6" [./linear-algebra-2mm.cpp:41]   --->   Operation 156 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 7ns, clock uncertainty: 0.875ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', ./linear-algebra-2mm.cpp:13) [28]  (1.77 ns)

 <State 2>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('j') with incoming values : ('j', ./linear-algebra-2mm.cpp:16) [39]  (1.77 ns)

 <State 3>: 1.87ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', ./linear-algebra-2mm.cpp:16) [39]  (0 ns)
	'add' operation ('add_ln321', ./linear-algebra-2mm.cpp:19) [47]  (1.87 ns)

 <State 4>: 5.12ns
The critical path consists of the following:
	'phi' operation ('k') with incoming values : ('k', ./linear-algebra-2mm.cpp:21) [53]  (0 ns)
	'add' operation ('add_ln215', ./linear-algebra-2mm.cpp:24) [61]  (1.87 ns)
	'getelementptr' operation ('A_V_addr', ./linear-algebra-2mm.cpp:24) [63]  (0 ns)
	'load' operation ('A_V_load', ./linear-algebra-2mm.cpp:24) on array 'A_V' [70]  (3.25 ns)

 <State 5>: 3.25ns
The critical path consists of the following:
	'load' operation ('A_V_load', ./linear-algebra-2mm.cpp:24) on array 'A_V' [70]  (3.25 ns)

 <State 6>: 5.75ns
The critical path consists of the following:
	'mul' operation ('mul_ln209_1', ./linear-algebra-2mm.cpp:24) [72]  (5.75 ns)

 <State 7>: 5.75ns
The critical path consists of the following:
	'mul' operation ('mul_ln209_1', ./linear-algebra-2mm.cpp:24) [72]  (5.75 ns)

 <State 8>: 5.75ns
The critical path consists of the following:
	'mul' operation ('mul_ln209_1', ./linear-algebra-2mm.cpp:24) [72]  (5.75 ns)

 <State 9>: 5.75ns
The critical path consists of the following:
	'mul' operation ('v.V', ./linear-algebra-2mm.cpp:24) [73]  (5.75 ns)

 <State 10>: 5.75ns
The critical path consists of the following:
	'mul' operation ('v.V', ./linear-algebra-2mm.cpp:24) [73]  (5.75 ns)

 <State 11>: 5.75ns
The critical path consists of the following:
	'mul' operation ('v.V', ./linear-algebra-2mm.cpp:24) [73]  (5.75 ns)

 <State 12>: 2.55ns
The critical path consists of the following:
	'add' operation ('add_ln700', ./linear-algebra-2mm.cpp:26) [74]  (2.55 ns)

 <State 13>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('j1') with incoming values : ('j1', ./linear-algebra-2mm.cpp:34) [96]  (1.77 ns)

 <State 14>: 5.12ns
The critical path consists of the following:
	'phi' operation ('j1') with incoming values : ('j1', ./linear-algebra-2mm.cpp:34) [96]  (0 ns)
	'add' operation ('add_ln37', ./linear-algebra-2mm.cpp:37) [104]  (1.87 ns)
	'getelementptr' operation ('D_V_addr', ./linear-algebra-2mm.cpp:37) [106]  (0 ns)
	'load' operation ('d_tmp.V', ./linear-algebra-2mm.cpp:37) on array 'D_V' [107]  (3.25 ns)

 <State 15>: 3.25ns
The critical path consists of the following:
	'load' operation ('d_tmp.V', ./linear-algebra-2mm.cpp:37) on array 'D_V' [107]  (3.25 ns)

 <State 16>: 5.75ns
The critical path consists of the following:
	'mul' operation ('mul_ln209', ./linear-algebra-2mm.cpp:39) [109]  (5.75 ns)

 <State 17>: 5.75ns
The critical path consists of the following:
	'mul' operation ('mul_ln209', ./linear-algebra-2mm.cpp:39) [109]  (5.75 ns)

 <State 18>: 5.75ns
The critical path consists of the following:
	'mul' operation ('mul_ln209', ./linear-algebra-2mm.cpp:39) [109]  (5.75 ns)

 <State 19>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('D_V_load', ./linear-algebra-2mm.cpp:39) with incoming values : ('mul_ln209', ./linear-algebra-2mm.cpp:39) ('add_ln700_1', ./linear-algebra-2mm.cpp:46) [112]  (1.77 ns)

 <State 20>: 5.12ns
The critical path consists of the following:
	'phi' operation ('k1') with incoming values : ('k1', ./linear-algebra-2mm.cpp:41) [113]  (0 ns)
	'add' operation ('add_ln215_2', ./linear-algebra-2mm.cpp:44) [121]  (1.87 ns)
	'getelementptr' operation ('tmp_V_addr_1', ./linear-algebra-2mm.cpp:44) [123]  (0 ns)
	'load' operation ('tmp_V_load_1', ./linear-algebra-2mm.cpp:44) on array 'tmp_V' [129]  (3.25 ns)

 <State 21>: 3.25ns
The critical path consists of the following:
	'load' operation ('tmp_V_load_1', ./linear-algebra-2mm.cpp:44) on array 'tmp_V' [129]  (3.25 ns)

 <State 22>: 5.75ns
The critical path consists of the following:
	'mul' operation ('v1.V', ./linear-algebra-2mm.cpp:44) [131]  (5.75 ns)

 <State 23>: 5.75ns
The critical path consists of the following:
	'mul' operation ('v1.V', ./linear-algebra-2mm.cpp:44) [131]  (5.75 ns)

 <State 24>: 5.75ns
The critical path consists of the following:
	'mul' operation ('v1.V', ./linear-algebra-2mm.cpp:44) [131]  (5.75 ns)

 <State 25>: 2.55ns
The critical path consists of the following:
	'add' operation ('add_ln700_1', ./linear-algebra-2mm.cpp:46) [132]  (2.55 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
