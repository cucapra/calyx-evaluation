// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "kernel.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic kernel::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic kernel::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<25> kernel::ap_ST_fsm_state1 = "1";
const sc_lv<25> kernel::ap_ST_fsm_state2 = "10";
const sc_lv<25> kernel::ap_ST_fsm_state3 = "100";
const sc_lv<25> kernel::ap_ST_fsm_state4 = "1000";
const sc_lv<25> kernel::ap_ST_fsm_state5 = "10000";
const sc_lv<25> kernel::ap_ST_fsm_state6 = "100000";
const sc_lv<25> kernel::ap_ST_fsm_state7 = "1000000";
const sc_lv<25> kernel::ap_ST_fsm_state8 = "10000000";
const sc_lv<25> kernel::ap_ST_fsm_state9 = "100000000";
const sc_lv<25> kernel::ap_ST_fsm_state10 = "1000000000";
const sc_lv<25> kernel::ap_ST_fsm_state11 = "10000000000";
const sc_lv<25> kernel::ap_ST_fsm_state12 = "100000000000";
const sc_lv<25> kernel::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<25> kernel::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<25> kernel::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<25> kernel::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<25> kernel::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<25> kernel::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<25> kernel::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<25> kernel::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<25> kernel::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<25> kernel::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<25> kernel::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<25> kernel::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<25> kernel::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<32> kernel::ap_const_lv32_0 = "00000000000000000000000000000000";
const int kernel::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> kernel::ap_const_lv32_1 = "1";
const sc_lv<1> kernel::ap_const_lv1_0 = "0";
const sc_lv<32> kernel::ap_const_lv32_2 = "10";
const sc_lv<32> kernel::ap_const_lv32_3 = "11";
const sc_lv<32> kernel::ap_const_lv32_4 = "100";
const sc_lv<32> kernel::ap_const_lv32_7 = "111";
const sc_lv<32> kernel::ap_const_lv32_8 = "1000";
const sc_lv<32> kernel::ap_const_lv32_9 = "1001";
const sc_lv<32> kernel::ap_const_lv32_A = "1010";
const sc_lv<32> kernel::ap_const_lv32_B = "1011";
const sc_lv<32> kernel::ap_const_lv32_C = "1100";
const sc_lv<32> kernel::ap_const_lv32_F = "1111";
const sc_lv<32> kernel::ap_const_lv32_10 = "10000";
const sc_lv<32> kernel::ap_const_lv32_11 = "10001";
const sc_lv<32> kernel::ap_const_lv32_12 = "10010";
const sc_lv<32> kernel::ap_const_lv32_13 = "10011";
const sc_lv<32> kernel::ap_const_lv32_14 = "10100";
const sc_lv<32> kernel::ap_const_lv32_17 = "10111";
const sc_lv<32> kernel::ap_const_lv32_18 = "11000";
const sc_lv<4> kernel::ap_const_lv4_0 = "0000";
const sc_lv<1> kernel::ap_const_lv1_1 = "1";
const sc_lv<4> kernel::ap_const_lv4_F = "1111";
const sc_lv<4> kernel::ap_const_lv4_8 = "1000";
const sc_lv<4> kernel::ap_const_lv4_1 = "1";
const sc_lv<3> kernel::ap_const_lv3_0 = "000";
const sc_lv<32> kernel::ap_const_lv32_5 = "101";
const sc_lv<32> kernel::ap_const_lv32_D = "1101";
const sc_lv<32> kernel::ap_const_lv32_15 = "10101";
const bool kernel::ap_const_boolean_1 = true;

kernel::kernel(sc_module_name name) : sc_module(name), mVcdFile(0) {
    kernel_control_s_axi_U = new kernel_control_s_axi<C_S_AXI_CONTROL_ADDR_WIDTH,C_S_AXI_CONTROL_DATA_WIDTH>("kernel_control_s_axi_U");
    kernel_control_s_axi_U->AWVALID(s_axi_control_AWVALID);
    kernel_control_s_axi_U->AWREADY(s_axi_control_AWREADY);
    kernel_control_s_axi_U->AWADDR(s_axi_control_AWADDR);
    kernel_control_s_axi_U->WVALID(s_axi_control_WVALID);
    kernel_control_s_axi_U->WREADY(s_axi_control_WREADY);
    kernel_control_s_axi_U->WDATA(s_axi_control_WDATA);
    kernel_control_s_axi_U->WSTRB(s_axi_control_WSTRB);
    kernel_control_s_axi_U->ARVALID(s_axi_control_ARVALID);
    kernel_control_s_axi_U->ARREADY(s_axi_control_ARREADY);
    kernel_control_s_axi_U->ARADDR(s_axi_control_ARADDR);
    kernel_control_s_axi_U->RVALID(s_axi_control_RVALID);
    kernel_control_s_axi_U->RREADY(s_axi_control_RREADY);
    kernel_control_s_axi_U->RDATA(s_axi_control_RDATA);
    kernel_control_s_axi_U->RRESP(s_axi_control_RRESP);
    kernel_control_s_axi_U->BVALID(s_axi_control_BVALID);
    kernel_control_s_axi_U->BREADY(s_axi_control_BREADY);
    kernel_control_s_axi_U->BRESP(s_axi_control_BRESP);
    kernel_control_s_axi_U->ACLK(ap_clk);
    kernel_control_s_axi_U->ARESET(ap_rst_n_inv);
    kernel_control_s_axi_U->ACLK_EN(ap_var_for_const0);
    kernel_control_s_axi_U->ap_start(ap_start);
    kernel_control_s_axi_U->interrupt(interrupt);
    kernel_control_s_axi_U->ap_ready(ap_ready);
    kernel_control_s_axi_U->ap_done(ap_done);
    kernel_control_s_axi_U->ap_idle(ap_idle);
    kernel_mul_32s_32s_32_3_1_U1 = new kernel_mul_32s_32s_32_3_1<1,3,32,32,32>("kernel_mul_32s_32s_32_3_1_U1");
    kernel_mul_32s_32s_32_3_1_U1->clk(ap_clk);
    kernel_mul_32s_32s_32_3_1_U1->reset(ap_rst_n_inv);
    kernel_mul_32s_32s_32_3_1_U1->din0(A_V_load_reg_677);
    kernel_mul_32s_32s_32_3_1_U1->din1(B_V_load_reg_682);
    kernel_mul_32s_32s_32_3_1_U1->ce(ap_var_for_const0);
    kernel_mul_32s_32s_32_3_1_U1->dout(grp_fu_404_p2);
    kernel_mul_32s_32s_32_3_1_U2 = new kernel_mul_32s_32s_32_3_1<1,3,32,32,32>("kernel_mul_32s_32s_32_3_1_U2");
    kernel_mul_32s_32s_32_3_1_U2->clk(ap_clk);
    kernel_mul_32s_32s_32_3_1_U2->reset(ap_rst_n_inv);
    kernel_mul_32s_32s_32_3_1_U2->din0(C_V_load_reg_747);
    kernel_mul_32s_32s_32_3_1_U2->din1(D_V_load_reg_752);
    kernel_mul_32s_32s_32_3_1_U2->ce(ap_var_for_const0);
    kernel_mul_32s_32s_32_3_1_U2->dout(grp_fu_511_p2);
    kernel_mul_32s_32s_32_3_1_U3 = new kernel_mul_32s_32s_32_3_1<1,3,32,32,32>("kernel_mul_32s_32s_32_3_1_U3");
    kernel_mul_32s_32s_32_3_1_U3->clk(ap_clk);
    kernel_mul_32s_32s_32_3_1_U3->reset(ap_rst_n_inv);
    kernel_mul_32s_32s_32_3_1_U3->din0(E_V_load_1_reg_817);
    kernel_mul_32s_32s_32_3_1_U3->din1(F_V_load_1_reg_822);
    kernel_mul_32s_32s_32_3_1_U3->ce(ap_var_for_const0);
    kernel_mul_32s_32s_32_3_1_U3->dout(grp_fu_618_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_A_V_Addr_A);
    sensitive << ( A_V_Addr_A_orig );

    SC_METHOD(thread_A_V_Addr_A_orig);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln215_1_fu_377_p1 );

    SC_METHOD(thread_A_V_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_A_V_Din_A);

    SC_METHOD(thread_A_V_EN_A);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_A_V_Rst_A);
    sensitive << ( ap_rst_n_inv );

    SC_METHOD(thread_A_V_WEN_A);

    SC_METHOD(thread_B_V_Addr_A);
    sensitive << ( B_V_Addr_A_orig );

    SC_METHOD(thread_B_V_Addr_A_orig);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln215_3_fu_399_p1 );

    SC_METHOD(thread_B_V_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_B_V_Din_A);

    SC_METHOD(thread_B_V_EN_A);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_B_V_Rst_A);
    sensitive << ( ap_rst_n_inv );

    SC_METHOD(thread_B_V_WEN_A);

    SC_METHOD(thread_C_V_Addr_A);
    sensitive << ( C_V_Addr_A_orig );

    SC_METHOD(thread_C_V_Addr_A_orig);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( zext_ln215_5_fu_484_p1 );

    SC_METHOD(thread_C_V_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_C_V_Din_A);

    SC_METHOD(thread_C_V_EN_A);
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_C_V_Rst_A);
    sensitive << ( ap_rst_n_inv );

    SC_METHOD(thread_C_V_WEN_A);

    SC_METHOD(thread_D_V_Addr_A);
    sensitive << ( D_V_Addr_A_orig );

    SC_METHOD(thread_D_V_Addr_A_orig);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( zext_ln215_7_fu_506_p1 );

    SC_METHOD(thread_D_V_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_D_V_Din_A);

    SC_METHOD(thread_D_V_EN_A);
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_D_V_Rst_A);
    sensitive << ( ap_rst_n_inv );

    SC_METHOD(thread_D_V_WEN_A);

    SC_METHOD(thread_E_V_Addr_A);
    sensitive << ( E_V_Addr_A_orig );

    SC_METHOD(thread_E_V_Addr_A_orig);
    sensitive << ( E_V_addr_reg_654 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( zext_ln215_9_fu_591_p1 );

    SC_METHOD(thread_E_V_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_E_V_Din_A);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( E_V_load_reg_190 );

    SC_METHOD(thread_E_V_EN_A);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_E_V_Rst_A);
    sensitive << ( ap_rst_n_inv );

    SC_METHOD(thread_E_V_WEN_A);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_F_V_Addr_A);
    sensitive << ( F_V_Addr_A_orig );

    SC_METHOD(thread_F_V_Addr_A_orig);
    sensitive << ( F_V_addr_reg_724 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( zext_ln215_11_fu_613_p1 );

    SC_METHOD(thread_F_V_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_F_V_Din_A);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( F_V_load_reg_236 );

    SC_METHOD(thread_F_V_EN_A);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_F_V_Rst_A);
    sensitive << ( ap_rst_n_inv );

    SC_METHOD(thread_F_V_WEN_A);
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_G_V_Addr_A);
    sensitive << ( G_V_Addr_A_orig );

    SC_METHOD(thread_G_V_Addr_A_orig);
    sensitive << ( G_V_addr_reg_794 );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_G_V_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_G_V_Din_A);
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( G_V_load_reg_282 );

    SC_METHOD(thread_G_V_EN_A);
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_G_V_Rst_A);
    sensitive << ( ap_rst_n_inv );

    SC_METHOD(thread_G_V_WEN_A);
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_add_ln215_1_fu_394_p2);
    sensitive << ( zext_ln321_reg_649 );
    sensitive << ( zext_ln215_2_fu_390_p1 );

    SC_METHOD(thread_add_ln215_2_fu_479_p2);
    sensitive << ( zext_ln33_reg_705 );
    sensitive << ( zext_ln215_4_fu_475_p1 );

    SC_METHOD(thread_add_ln215_3_fu_501_p2);
    sensitive << ( zext_ln321_2_reg_719 );
    sensitive << ( zext_ln215_6_fu_497_p1 );

    SC_METHOD(thread_add_ln215_4_fu_586_p2);
    sensitive << ( zext_ln51_reg_775 );
    sensitive << ( zext_ln215_8_fu_582_p1 );

    SC_METHOD(thread_add_ln215_5_fu_608_p2);
    sensitive << ( zext_ln321_4_reg_789 );
    sensitive << ( zext_ln215_10_fu_604_p1 );

    SC_METHOD(thread_add_ln215_fu_372_p2);
    sensitive << ( zext_ln16_reg_635 );
    sensitive << ( zext_ln215_fu_368_p1 );

    SC_METHOD(thread_add_ln321_1_fu_453_p2);
    sensitive << ( zext_ln33_reg_705 );
    sensitive << ( zext_ln321_2_fu_449_p1 );

    SC_METHOD(thread_add_ln321_2_fu_560_p2);
    sensitive << ( zext_ln51_reg_775 );
    sensitive << ( zext_ln321_4_fu_556_p1 );

    SC_METHOD(thread_add_ln321_fu_346_p2);
    sensitive << ( zext_ln16_reg_635 );
    sensitive << ( zext_ln321_fu_342_p1 );

    SC_METHOD(thread_add_ln700_1_fu_515_p2);
    sensitive << ( v_V_1_reg_757 );
    sensitive << ( F_V_load_reg_236 );

    SC_METHOD(thread_add_ln700_2_fu_622_p2);
    sensitive << ( v_V_2_reg_827 );
    sensitive << ( G_V_load_reg_282 );

    SC_METHOD(thread_add_ln700_fu_408_p2);
    sensitive << ( v_V_reg_687 );
    sensitive << ( E_V_load_reg_190 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( icmp_ln48_fu_520_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( icmp_ln48_fu_520_p2 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_i_1_fu_419_p2);
    sensitive << ( i1_0_reg_214 );

    SC_METHOD(thread_i_2_fu_526_p2);
    sensitive << ( i5_0_reg_260 );

    SC_METHOD(thread_i_fu_312_p2);
    sensitive << ( i_0_reg_168 );

    SC_METHOD(thread_icmp_ln13_fu_306_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_168 );

    SC_METHOD(thread_icmp_ln16_fu_330_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_0_reg_179 );

    SC_METHOD(thread_icmp_ln21_fu_356_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( k_0_reg_203 );

    SC_METHOD(thread_icmp_ln30_fu_413_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( i1_0_reg_214 );

    SC_METHOD(thread_icmp_ln33_fu_437_p2);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( j2_0_reg_225 );

    SC_METHOD(thread_icmp_ln38_fu_463_p2);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( k3_0_reg_249 );

    SC_METHOD(thread_icmp_ln48_fu_520_p2);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( i5_0_reg_260 );

    SC_METHOD(thread_icmp_ln51_fu_544_p2);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( j6_0_reg_271 );

    SC_METHOD(thread_icmp_ln56_fu_570_p2);
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( k7_0_reg_295 );

    SC_METHOD(thread_j_1_fu_443_p2);
    sensitive << ( j2_0_reg_225 );

    SC_METHOD(thread_j_2_fu_550_p2);
    sensitive << ( j6_0_reg_271 );

    SC_METHOD(thread_j_fu_336_p2);
    sensitive << ( j_0_reg_179 );

    SC_METHOD(thread_k_1_fu_469_p2);
    sensitive << ( k3_0_reg_249 );

    SC_METHOD(thread_k_2_fu_576_p2);
    sensitive << ( k7_0_reg_295 );

    SC_METHOD(thread_k_fu_362_p2);
    sensitive << ( k_0_reg_203 );

    SC_METHOD(thread_tmp_10_fu_596_p3);
    sensitive << ( k7_0_reg_295 );

    SC_METHOD(thread_tmp_6_fu_318_p3);
    sensitive << ( i_0_reg_168 );

    SC_METHOD(thread_tmp_7_fu_425_p3);
    sensitive << ( i1_0_reg_214 );

    SC_METHOD(thread_tmp_8_fu_532_p3);
    sensitive << ( i5_0_reg_260 );

    SC_METHOD(thread_tmp_9_fu_382_p3);
    sensitive << ( k_0_reg_203 );

    SC_METHOD(thread_tmp_s_fu_489_p3);
    sensitive << ( k3_0_reg_249 );

    SC_METHOD(thread_zext_ln16_fu_326_p1);
    sensitive << ( tmp_6_fu_318_p3 );

    SC_METHOD(thread_zext_ln215_10_fu_604_p1);
    sensitive << ( tmp_10_fu_596_p3 );

    SC_METHOD(thread_zext_ln215_11_fu_613_p1);
    sensitive << ( add_ln215_5_fu_608_p2 );

    SC_METHOD(thread_zext_ln215_1_fu_377_p1);
    sensitive << ( add_ln215_fu_372_p2 );

    SC_METHOD(thread_zext_ln215_2_fu_390_p1);
    sensitive << ( tmp_9_fu_382_p3 );

    SC_METHOD(thread_zext_ln215_3_fu_399_p1);
    sensitive << ( add_ln215_1_fu_394_p2 );

    SC_METHOD(thread_zext_ln215_4_fu_475_p1);
    sensitive << ( k3_0_reg_249 );

    SC_METHOD(thread_zext_ln215_5_fu_484_p1);
    sensitive << ( add_ln215_2_fu_479_p2 );

    SC_METHOD(thread_zext_ln215_6_fu_497_p1);
    sensitive << ( tmp_s_fu_489_p3 );

    SC_METHOD(thread_zext_ln215_7_fu_506_p1);
    sensitive << ( add_ln215_3_fu_501_p2 );

    SC_METHOD(thread_zext_ln215_8_fu_582_p1);
    sensitive << ( k7_0_reg_295 );

    SC_METHOD(thread_zext_ln215_9_fu_591_p1);
    sensitive << ( add_ln215_4_fu_586_p2 );

    SC_METHOD(thread_zext_ln215_fu_368_p1);
    sensitive << ( k_0_reg_203 );

    SC_METHOD(thread_zext_ln321_1_fu_351_p1);
    sensitive << ( add_ln321_fu_346_p2 );

    SC_METHOD(thread_zext_ln321_2_fu_449_p1);
    sensitive << ( j2_0_reg_225 );

    SC_METHOD(thread_zext_ln321_3_fu_458_p1);
    sensitive << ( add_ln321_1_fu_453_p2 );

    SC_METHOD(thread_zext_ln321_4_fu_556_p1);
    sensitive << ( j6_0_reg_271 );

    SC_METHOD(thread_zext_ln321_5_fu_565_p1);
    sensitive << ( add_ln321_2_fu_560_p2 );

    SC_METHOD(thread_zext_ln321_fu_342_p1);
    sensitive << ( j_0_reg_179 );

    SC_METHOD(thread_zext_ln33_fu_433_p1);
    sensitive << ( tmp_7_fu_425_p3 );

    SC_METHOD(thread_zext_ln51_fu_540_p1);
    sensitive << ( tmp_8_fu_532_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln13_fu_306_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln16_fu_330_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln21_fu_356_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln30_fu_413_p2 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( icmp_ln33_fu_437_p2 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( icmp_ln38_fu_463_p2 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( icmp_ln48_fu_520_p2 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( icmp_ln51_fu_544_p2 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( icmp_ln56_fu_570_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "0000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "kernel_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, E_V_Addr_A, "(port)E_V_Addr_A");
    sc_trace(mVcdFile, E_V_EN_A, "(port)E_V_EN_A");
    sc_trace(mVcdFile, E_V_WEN_A, "(port)E_V_WEN_A");
    sc_trace(mVcdFile, E_V_Din_A, "(port)E_V_Din_A");
    sc_trace(mVcdFile, E_V_Dout_A, "(port)E_V_Dout_A");
    sc_trace(mVcdFile, E_V_Clk_A, "(port)E_V_Clk_A");
    sc_trace(mVcdFile, E_V_Rst_A, "(port)E_V_Rst_A");
    sc_trace(mVcdFile, A_V_Addr_A, "(port)A_V_Addr_A");
    sc_trace(mVcdFile, A_V_EN_A, "(port)A_V_EN_A");
    sc_trace(mVcdFile, A_V_WEN_A, "(port)A_V_WEN_A");
    sc_trace(mVcdFile, A_V_Din_A, "(port)A_V_Din_A");
    sc_trace(mVcdFile, A_V_Dout_A, "(port)A_V_Dout_A");
    sc_trace(mVcdFile, A_V_Clk_A, "(port)A_V_Clk_A");
    sc_trace(mVcdFile, A_V_Rst_A, "(port)A_V_Rst_A");
    sc_trace(mVcdFile, B_V_Addr_A, "(port)B_V_Addr_A");
    sc_trace(mVcdFile, B_V_EN_A, "(port)B_V_EN_A");
    sc_trace(mVcdFile, B_V_WEN_A, "(port)B_V_WEN_A");
    sc_trace(mVcdFile, B_V_Din_A, "(port)B_V_Din_A");
    sc_trace(mVcdFile, B_V_Dout_A, "(port)B_V_Dout_A");
    sc_trace(mVcdFile, B_V_Clk_A, "(port)B_V_Clk_A");
    sc_trace(mVcdFile, B_V_Rst_A, "(port)B_V_Rst_A");
    sc_trace(mVcdFile, F_V_Addr_A, "(port)F_V_Addr_A");
    sc_trace(mVcdFile, F_V_EN_A, "(port)F_V_EN_A");
    sc_trace(mVcdFile, F_V_WEN_A, "(port)F_V_WEN_A");
    sc_trace(mVcdFile, F_V_Din_A, "(port)F_V_Din_A");
    sc_trace(mVcdFile, F_V_Dout_A, "(port)F_V_Dout_A");
    sc_trace(mVcdFile, F_V_Clk_A, "(port)F_V_Clk_A");
    sc_trace(mVcdFile, F_V_Rst_A, "(port)F_V_Rst_A");
    sc_trace(mVcdFile, C_V_Addr_A, "(port)C_V_Addr_A");
    sc_trace(mVcdFile, C_V_EN_A, "(port)C_V_EN_A");
    sc_trace(mVcdFile, C_V_WEN_A, "(port)C_V_WEN_A");
    sc_trace(mVcdFile, C_V_Din_A, "(port)C_V_Din_A");
    sc_trace(mVcdFile, C_V_Dout_A, "(port)C_V_Dout_A");
    sc_trace(mVcdFile, C_V_Clk_A, "(port)C_V_Clk_A");
    sc_trace(mVcdFile, C_V_Rst_A, "(port)C_V_Rst_A");
    sc_trace(mVcdFile, D_V_Addr_A, "(port)D_V_Addr_A");
    sc_trace(mVcdFile, D_V_EN_A, "(port)D_V_EN_A");
    sc_trace(mVcdFile, D_V_WEN_A, "(port)D_V_WEN_A");
    sc_trace(mVcdFile, D_V_Din_A, "(port)D_V_Din_A");
    sc_trace(mVcdFile, D_V_Dout_A, "(port)D_V_Dout_A");
    sc_trace(mVcdFile, D_V_Clk_A, "(port)D_V_Clk_A");
    sc_trace(mVcdFile, D_V_Rst_A, "(port)D_V_Rst_A");
    sc_trace(mVcdFile, G_V_Addr_A, "(port)G_V_Addr_A");
    sc_trace(mVcdFile, G_V_EN_A, "(port)G_V_EN_A");
    sc_trace(mVcdFile, G_V_WEN_A, "(port)G_V_WEN_A");
    sc_trace(mVcdFile, G_V_Din_A, "(port)G_V_Din_A");
    sc_trace(mVcdFile, G_V_Dout_A, "(port)G_V_Dout_A");
    sc_trace(mVcdFile, G_V_Clk_A, "(port)G_V_Clk_A");
    sc_trace(mVcdFile, G_V_Rst_A, "(port)G_V_Rst_A");
    sc_trace(mVcdFile, s_axi_control_AWVALID, "(port)s_axi_control_AWVALID");
    sc_trace(mVcdFile, s_axi_control_AWREADY, "(port)s_axi_control_AWREADY");
    sc_trace(mVcdFile, s_axi_control_AWADDR, "(port)s_axi_control_AWADDR");
    sc_trace(mVcdFile, s_axi_control_WVALID, "(port)s_axi_control_WVALID");
    sc_trace(mVcdFile, s_axi_control_WREADY, "(port)s_axi_control_WREADY");
    sc_trace(mVcdFile, s_axi_control_WDATA, "(port)s_axi_control_WDATA");
    sc_trace(mVcdFile, s_axi_control_WSTRB, "(port)s_axi_control_WSTRB");
    sc_trace(mVcdFile, s_axi_control_ARVALID, "(port)s_axi_control_ARVALID");
    sc_trace(mVcdFile, s_axi_control_ARREADY, "(port)s_axi_control_ARREADY");
    sc_trace(mVcdFile, s_axi_control_ARADDR, "(port)s_axi_control_ARADDR");
    sc_trace(mVcdFile, s_axi_control_RVALID, "(port)s_axi_control_RVALID");
    sc_trace(mVcdFile, s_axi_control_RREADY, "(port)s_axi_control_RREADY");
    sc_trace(mVcdFile, s_axi_control_RDATA, "(port)s_axi_control_RDATA");
    sc_trace(mVcdFile, s_axi_control_RRESP, "(port)s_axi_control_RRESP");
    sc_trace(mVcdFile, s_axi_control_BVALID, "(port)s_axi_control_BVALID");
    sc_trace(mVcdFile, s_axi_control_BREADY, "(port)s_axi_control_BREADY");
    sc_trace(mVcdFile, s_axi_control_BRESP, "(port)s_axi_control_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, i_fu_312_p2, "i_fu_312_p2");
    sc_trace(mVcdFile, i_reg_630, "i_reg_630");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, zext_ln16_fu_326_p1, "zext_ln16_fu_326_p1");
    sc_trace(mVcdFile, zext_ln16_reg_635, "zext_ln16_reg_635");
    sc_trace(mVcdFile, icmp_ln13_fu_306_p2, "icmp_ln13_fu_306_p2");
    sc_trace(mVcdFile, j_fu_336_p2, "j_fu_336_p2");
    sc_trace(mVcdFile, j_reg_644, "j_reg_644");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, zext_ln321_fu_342_p1, "zext_ln321_fu_342_p1");
    sc_trace(mVcdFile, zext_ln321_reg_649, "zext_ln321_reg_649");
    sc_trace(mVcdFile, icmp_ln16_fu_330_p2, "icmp_ln16_fu_330_p2");
    sc_trace(mVcdFile, E_V_addr_reg_654, "E_V_addr_reg_654");
    sc_trace(mVcdFile, k_fu_362_p2, "k_fu_362_p2");
    sc_trace(mVcdFile, k_reg_662, "k_reg_662");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, icmp_ln21_fu_356_p2, "icmp_ln21_fu_356_p2");
    sc_trace(mVcdFile, A_V_load_reg_677, "A_V_load_reg_677");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, B_V_load_reg_682, "B_V_load_reg_682");
    sc_trace(mVcdFile, grp_fu_404_p2, "grp_fu_404_p2");
    sc_trace(mVcdFile, v_V_reg_687, "v_V_reg_687");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, add_ln700_fu_408_p2, "add_ln700_fu_408_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, i_1_fu_419_p2, "i_1_fu_419_p2");
    sc_trace(mVcdFile, i_1_reg_700, "i_1_reg_700");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, zext_ln33_fu_433_p1, "zext_ln33_fu_433_p1");
    sc_trace(mVcdFile, zext_ln33_reg_705, "zext_ln33_reg_705");
    sc_trace(mVcdFile, icmp_ln30_fu_413_p2, "icmp_ln30_fu_413_p2");
    sc_trace(mVcdFile, j_1_fu_443_p2, "j_1_fu_443_p2");
    sc_trace(mVcdFile, j_1_reg_714, "j_1_reg_714");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, zext_ln321_2_fu_449_p1, "zext_ln321_2_fu_449_p1");
    sc_trace(mVcdFile, zext_ln321_2_reg_719, "zext_ln321_2_reg_719");
    sc_trace(mVcdFile, icmp_ln33_fu_437_p2, "icmp_ln33_fu_437_p2");
    sc_trace(mVcdFile, F_V_addr_reg_724, "F_V_addr_reg_724");
    sc_trace(mVcdFile, k_1_fu_469_p2, "k_1_fu_469_p2");
    sc_trace(mVcdFile, k_1_reg_732, "k_1_reg_732");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, icmp_ln38_fu_463_p2, "icmp_ln38_fu_463_p2");
    sc_trace(mVcdFile, C_V_load_reg_747, "C_V_load_reg_747");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, D_V_load_reg_752, "D_V_load_reg_752");
    sc_trace(mVcdFile, grp_fu_511_p2, "grp_fu_511_p2");
    sc_trace(mVcdFile, v_V_1_reg_757, "v_V_1_reg_757");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, add_ln700_1_fu_515_p2, "add_ln700_1_fu_515_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, i_2_fu_526_p2, "i_2_fu_526_p2");
    sc_trace(mVcdFile, i_2_reg_770, "i_2_reg_770");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, zext_ln51_fu_540_p1, "zext_ln51_fu_540_p1");
    sc_trace(mVcdFile, zext_ln51_reg_775, "zext_ln51_reg_775");
    sc_trace(mVcdFile, icmp_ln48_fu_520_p2, "icmp_ln48_fu_520_p2");
    sc_trace(mVcdFile, j_2_fu_550_p2, "j_2_fu_550_p2");
    sc_trace(mVcdFile, j_2_reg_784, "j_2_reg_784");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, zext_ln321_4_fu_556_p1, "zext_ln321_4_fu_556_p1");
    sc_trace(mVcdFile, zext_ln321_4_reg_789, "zext_ln321_4_reg_789");
    sc_trace(mVcdFile, icmp_ln51_fu_544_p2, "icmp_ln51_fu_544_p2");
    sc_trace(mVcdFile, G_V_addr_reg_794, "G_V_addr_reg_794");
    sc_trace(mVcdFile, k_2_fu_576_p2, "k_2_fu_576_p2");
    sc_trace(mVcdFile, k_2_reg_802, "k_2_reg_802");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, icmp_ln56_fu_570_p2, "icmp_ln56_fu_570_p2");
    sc_trace(mVcdFile, E_V_load_1_reg_817, "E_V_load_1_reg_817");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, F_V_load_1_reg_822, "F_V_load_1_reg_822");
    sc_trace(mVcdFile, grp_fu_618_p2, "grp_fu_618_p2");
    sc_trace(mVcdFile, v_V_2_reg_827, "v_V_2_reg_827");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, add_ln700_2_fu_622_p2, "add_ln700_2_fu_622_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, i_0_reg_168, "i_0_reg_168");
    sc_trace(mVcdFile, j_0_reg_179, "j_0_reg_179");
    sc_trace(mVcdFile, E_V_load_reg_190, "E_V_load_reg_190");
    sc_trace(mVcdFile, k_0_reg_203, "k_0_reg_203");
    sc_trace(mVcdFile, i1_0_reg_214, "i1_0_reg_214");
    sc_trace(mVcdFile, j2_0_reg_225, "j2_0_reg_225");
    sc_trace(mVcdFile, F_V_load_reg_236, "F_V_load_reg_236");
    sc_trace(mVcdFile, k3_0_reg_249, "k3_0_reg_249");
    sc_trace(mVcdFile, i5_0_reg_260, "i5_0_reg_260");
    sc_trace(mVcdFile, j6_0_reg_271, "j6_0_reg_271");
    sc_trace(mVcdFile, G_V_load_reg_282, "G_V_load_reg_282");
    sc_trace(mVcdFile, k7_0_reg_295, "k7_0_reg_295");
    sc_trace(mVcdFile, zext_ln321_1_fu_351_p1, "zext_ln321_1_fu_351_p1");
    sc_trace(mVcdFile, zext_ln215_1_fu_377_p1, "zext_ln215_1_fu_377_p1");
    sc_trace(mVcdFile, zext_ln215_3_fu_399_p1, "zext_ln215_3_fu_399_p1");
    sc_trace(mVcdFile, zext_ln321_3_fu_458_p1, "zext_ln321_3_fu_458_p1");
    sc_trace(mVcdFile, zext_ln215_5_fu_484_p1, "zext_ln215_5_fu_484_p1");
    sc_trace(mVcdFile, zext_ln215_7_fu_506_p1, "zext_ln215_7_fu_506_p1");
    sc_trace(mVcdFile, zext_ln321_5_fu_565_p1, "zext_ln321_5_fu_565_p1");
    sc_trace(mVcdFile, zext_ln215_9_fu_591_p1, "zext_ln215_9_fu_591_p1");
    sc_trace(mVcdFile, zext_ln215_11_fu_613_p1, "zext_ln215_11_fu_613_p1");
    sc_trace(mVcdFile, E_V_Addr_A_orig, "E_V_Addr_A_orig");
    sc_trace(mVcdFile, A_V_Addr_A_orig, "A_V_Addr_A_orig");
    sc_trace(mVcdFile, B_V_Addr_A_orig, "B_V_Addr_A_orig");
    sc_trace(mVcdFile, F_V_Addr_A_orig, "F_V_Addr_A_orig");
    sc_trace(mVcdFile, C_V_Addr_A_orig, "C_V_Addr_A_orig");
    sc_trace(mVcdFile, D_V_Addr_A_orig, "D_V_Addr_A_orig");
    sc_trace(mVcdFile, G_V_Addr_A_orig, "G_V_Addr_A_orig");
    sc_trace(mVcdFile, tmp_6_fu_318_p3, "tmp_6_fu_318_p3");
    sc_trace(mVcdFile, add_ln321_fu_346_p2, "add_ln321_fu_346_p2");
    sc_trace(mVcdFile, zext_ln215_fu_368_p1, "zext_ln215_fu_368_p1");
    sc_trace(mVcdFile, add_ln215_fu_372_p2, "add_ln215_fu_372_p2");
    sc_trace(mVcdFile, tmp_9_fu_382_p3, "tmp_9_fu_382_p3");
    sc_trace(mVcdFile, zext_ln215_2_fu_390_p1, "zext_ln215_2_fu_390_p1");
    sc_trace(mVcdFile, add_ln215_1_fu_394_p2, "add_ln215_1_fu_394_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_7_fu_425_p3, "tmp_7_fu_425_p3");
    sc_trace(mVcdFile, add_ln321_1_fu_453_p2, "add_ln321_1_fu_453_p2");
    sc_trace(mVcdFile, zext_ln215_4_fu_475_p1, "zext_ln215_4_fu_475_p1");
    sc_trace(mVcdFile, add_ln215_2_fu_479_p2, "add_ln215_2_fu_479_p2");
    sc_trace(mVcdFile, tmp_s_fu_489_p3, "tmp_s_fu_489_p3");
    sc_trace(mVcdFile, zext_ln215_6_fu_497_p1, "zext_ln215_6_fu_497_p1");
    sc_trace(mVcdFile, add_ln215_3_fu_501_p2, "add_ln215_3_fu_501_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, tmp_8_fu_532_p3, "tmp_8_fu_532_p3");
    sc_trace(mVcdFile, add_ln321_2_fu_560_p2, "add_ln321_2_fu_560_p2");
    sc_trace(mVcdFile, zext_ln215_8_fu_582_p1, "zext_ln215_8_fu_582_p1");
    sc_trace(mVcdFile, add_ln215_4_fu_586_p2, "add_ln215_4_fu_586_p2");
    sc_trace(mVcdFile, tmp_10_fu_596_p3, "tmp_10_fu_596_p3");
    sc_trace(mVcdFile, zext_ln215_10_fu_604_p1, "zext_ln215_10_fu_604_p1");
    sc_trace(mVcdFile, add_ln215_5_fu_608_p2, "add_ln215_5_fu_608_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("kernel.hdltvin.dat");
    mHdltvoutHandle.open("kernel.hdltvout.dat");
}

kernel::~kernel() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete kernel_control_s_axi_U;
    delete kernel_mul_32s_32s_32_3_1_U1;
    delete kernel_mul_32s_32s_32_3_1_U2;
    delete kernel_mul_32s_32s_32_3_1_U3;
}

void kernel::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void kernel::thread_ap_clk_no_reset_() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        E_V_load_reg_190 = add_ln700_fu_408_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln16_fu_330_p2.read()))) {
        E_V_load_reg_190 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        F_V_load_reg_236 = add_ln700_1_fu_515_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln33_fu_437_p2.read()))) {
        F_V_load_reg_236 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        G_V_load_reg_282 = add_ln700_2_fu_622_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln51_fu_544_p2.read()))) {
        G_V_load_reg_282 = ap_const_lv32_0;
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln13_fu_306_p2.read(), ap_const_lv1_1))) {
        i1_0_reg_214 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
                esl_seteq<1,1,1>(icmp_ln33_fu_437_p2.read(), ap_const_lv1_1))) {
        i1_0_reg_214 = i_1_reg_700.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(icmp_ln30_fu_413_p2.read(), ap_const_lv1_1))) {
        i5_0_reg_260 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
                esl_seteq<1,1,1>(icmp_ln51_fu_544_p2.read(), ap_const_lv1_1))) {
        i5_0_reg_260 = i_2_reg_770.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln16_fu_330_p2.read(), ap_const_lv1_1))) {
        i_0_reg_168 = i_reg_630.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_168 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
         esl_seteq<1,1,1>(icmp_ln38_fu_463_p2.read(), ap_const_lv1_1))) {
        j2_0_reg_225 = j_1_reg_714.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln30_fu_413_p2.read()))) {
        j2_0_reg_225 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
         esl_seteq<1,1,1>(icmp_ln56_fu_570_p2.read(), ap_const_lv1_1))) {
        j6_0_reg_271 = j_2_reg_784.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln48_fu_520_p2.read()))) {
        j6_0_reg_271 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln21_fu_356_p2.read(), ap_const_lv1_1))) {
        j_0_reg_179 = j_reg_644.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln13_fu_306_p2.read(), ap_const_lv1_0))) {
        j_0_reg_179 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        k3_0_reg_249 = k_1_reg_732.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln33_fu_437_p2.read()))) {
        k3_0_reg_249 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        k7_0_reg_295 = k_2_reg_802.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln51_fu_544_p2.read()))) {
        k7_0_reg_295 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        k_0_reg_203 = k_reg_662.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln16_fu_330_p2.read()))) {
        k_0_reg_203 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        A_V_load_reg_677 = A_V_Dout_A.read();
        B_V_load_reg_682 = B_V_Dout_A.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        C_V_load_reg_747 = C_V_Dout_A.read();
        D_V_load_reg_752 = D_V_Dout_A.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln16_fu_330_p2.read()))) {
        E_V_addr_reg_654 =  (sc_lv<6>) (zext_ln321_1_fu_351_p1.read());
        zext_ln321_reg_649 = zext_ln321_fu_342_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        E_V_load_1_reg_817 = E_V_Dout_A.read();
        F_V_load_1_reg_822 = F_V_Dout_A.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln33_fu_437_p2.read()))) {
        F_V_addr_reg_724 =  (sc_lv<6>) (zext_ln321_3_fu_458_p1.read());
        zext_ln321_2_reg_719 = zext_ln321_2_fu_449_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln51_fu_544_p2.read()))) {
        G_V_addr_reg_794 =  (sc_lv<6>) (zext_ln321_5_fu_565_p1.read());
        zext_ln321_4_reg_789 = zext_ln321_4_fu_556_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        i_1_reg_700 = i_1_fu_419_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        i_2_reg_770 = i_2_fu_526_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_630 = i_fu_312_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        j_1_reg_714 = j_1_fu_443_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        j_2_reg_784 = j_2_fu_550_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_reg_644 = j_fu_336_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        k_1_reg_732 = k_1_fu_469_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        k_2_reg_802 = k_2_fu_576_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        k_reg_662 = k_fu_362_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        v_V_1_reg_757 = grp_fu_511_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        v_V_2_reg_827 = grp_fu_618_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        v_V_reg_687 = grp_fu_404_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln13_fu_306_p2.read(), ap_const_lv1_0))) {
        zext_ln16_reg_635 = zext_ln16_fu_326_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln30_fu_413_p2.read()))) {
        zext_ln33_reg_705 = zext_ln33_fu_433_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln48_fu_520_p2.read()))) {
        zext_ln51_reg_775 = zext_ln51_fu_540_p1.read();
    }
}

void kernel::thread_A_V_Addr_A() {
    A_V_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): A_V_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void kernel::thread_A_V_Addr_A_orig() {
    A_V_Addr_A_orig =  (sc_lv<32>) (zext_ln215_1_fu_377_p1.read());
}

void kernel::thread_A_V_Clk_A() {
    A_V_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void kernel::thread_A_V_Din_A() {
    A_V_Din_A = ap_const_lv32_0;
}

void kernel::thread_A_V_EN_A() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        A_V_EN_A = ap_const_logic_1;
    } else {
        A_V_EN_A = ap_const_logic_0;
    }
}

void kernel::thread_A_V_Rst_A() {
    A_V_Rst_A = ap_rst_n_inv.read();
}

void kernel::thread_A_V_WEN_A() {
    A_V_WEN_A = ap_const_lv4_0;
}

void kernel::thread_B_V_Addr_A() {
    B_V_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): B_V_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void kernel::thread_B_V_Addr_A_orig() {
    B_V_Addr_A_orig =  (sc_lv<32>) (zext_ln215_3_fu_399_p1.read());
}

void kernel::thread_B_V_Clk_A() {
    B_V_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void kernel::thread_B_V_Din_A() {
    B_V_Din_A = ap_const_lv32_0;
}

void kernel::thread_B_V_EN_A() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        B_V_EN_A = ap_const_logic_1;
    } else {
        B_V_EN_A = ap_const_logic_0;
    }
}

void kernel::thread_B_V_Rst_A() {
    B_V_Rst_A = ap_rst_n_inv.read();
}

void kernel::thread_B_V_WEN_A() {
    B_V_WEN_A = ap_const_lv4_0;
}

void kernel::thread_C_V_Addr_A() {
    C_V_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): C_V_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void kernel::thread_C_V_Addr_A_orig() {
    C_V_Addr_A_orig =  (sc_lv<32>) (zext_ln215_5_fu_484_p1.read());
}

void kernel::thread_C_V_Clk_A() {
    C_V_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void kernel::thread_C_V_Din_A() {
    C_V_Din_A = ap_const_lv32_0;
}

void kernel::thread_C_V_EN_A() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        C_V_EN_A = ap_const_logic_1;
    } else {
        C_V_EN_A = ap_const_logic_0;
    }
}

void kernel::thread_C_V_Rst_A() {
    C_V_Rst_A = ap_rst_n_inv.read();
}

void kernel::thread_C_V_WEN_A() {
    C_V_WEN_A = ap_const_lv4_0;
}

void kernel::thread_D_V_Addr_A() {
    D_V_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): D_V_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void kernel::thread_D_V_Addr_A_orig() {
    D_V_Addr_A_orig =  (sc_lv<32>) (zext_ln215_7_fu_506_p1.read());
}

void kernel::thread_D_V_Clk_A() {
    D_V_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void kernel::thread_D_V_Din_A() {
    D_V_Din_A = ap_const_lv32_0;
}

void kernel::thread_D_V_EN_A() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        D_V_EN_A = ap_const_logic_1;
    } else {
        D_V_EN_A = ap_const_logic_0;
    }
}

void kernel::thread_D_V_Rst_A() {
    D_V_Rst_A = ap_rst_n_inv.read();
}

void kernel::thread_D_V_WEN_A() {
    D_V_WEN_A = ap_const_lv4_0;
}

void kernel::thread_E_V_Addr_A() {
    E_V_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): E_V_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void kernel::thread_E_V_Addr_A_orig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        E_V_Addr_A_orig =  (sc_lv<32>) (zext_ln215_9_fu_591_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        E_V_Addr_A_orig =  (sc_lv<32>) (E_V_addr_reg_654.read());
    } else {
        E_V_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void kernel::thread_E_V_Clk_A() {
    E_V_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void kernel::thread_E_V_Din_A() {
    E_V_Din_A = E_V_load_reg_190.read();
}

void kernel::thread_E_V_EN_A() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
        E_V_EN_A = ap_const_logic_1;
    } else {
        E_V_EN_A = ap_const_logic_0;
    }
}

void kernel::thread_E_V_Rst_A() {
    E_V_Rst_A = ap_rst_n_inv.read();
}

void kernel::thread_E_V_WEN_A() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        E_V_WEN_A = ap_const_lv4_F;
    } else {
        E_V_WEN_A = ap_const_lv4_0;
    }
}

void kernel::thread_F_V_Addr_A() {
    F_V_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): F_V_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void kernel::thread_F_V_Addr_A_orig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        F_V_Addr_A_orig =  (sc_lv<32>) (zext_ln215_11_fu_613_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        F_V_Addr_A_orig =  (sc_lv<32>) (F_V_addr_reg_724.read());
    } else {
        F_V_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void kernel::thread_F_V_Clk_A() {
    F_V_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void kernel::thread_F_V_Din_A() {
    F_V_Din_A = F_V_load_reg_236.read();
}

void kernel::thread_F_V_EN_A() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
        F_V_EN_A = ap_const_logic_1;
    } else {
        F_V_EN_A = ap_const_logic_0;
    }
}

void kernel::thread_F_V_Rst_A() {
    F_V_Rst_A = ap_rst_n_inv.read();
}

void kernel::thread_F_V_WEN_A() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        F_V_WEN_A = ap_const_lv4_F;
    } else {
        F_V_WEN_A = ap_const_lv4_0;
    }
}

void kernel::thread_G_V_Addr_A() {
    G_V_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): G_V_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void kernel::thread_G_V_Addr_A_orig() {
    G_V_Addr_A_orig =  (sc_lv<32>) (G_V_addr_reg_794.read());
}

void kernel::thread_G_V_Clk_A() {
    G_V_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void kernel::thread_G_V_Din_A() {
    G_V_Din_A = G_V_load_reg_282.read();
}

void kernel::thread_G_V_EN_A() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        G_V_EN_A = ap_const_logic_1;
    } else {
        G_V_EN_A = ap_const_logic_0;
    }
}

void kernel::thread_G_V_Rst_A() {
    G_V_Rst_A = ap_rst_n_inv.read();
}

void kernel::thread_G_V_WEN_A() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        G_V_WEN_A = ap_const_lv4_F;
    } else {
        G_V_WEN_A = ap_const_lv4_0;
    }
}

void kernel::thread_add_ln215_1_fu_394_p2() {
    add_ln215_1_fu_394_p2 = (!zext_ln321_reg_649.read().is_01() || !zext_ln215_2_fu_390_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln321_reg_649.read()) + sc_biguint<8>(zext_ln215_2_fu_390_p1.read()));
}

void kernel::thread_add_ln215_2_fu_479_p2() {
    add_ln215_2_fu_479_p2 = (!zext_ln215_4_fu_475_p1.read().is_01() || !zext_ln33_reg_705.read().is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln215_4_fu_475_p1.read()) + sc_biguint<8>(zext_ln33_reg_705.read()));
}

void kernel::thread_add_ln215_3_fu_501_p2() {
    add_ln215_3_fu_501_p2 = (!zext_ln321_2_reg_719.read().is_01() || !zext_ln215_6_fu_497_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln321_2_reg_719.read()) + sc_biguint<8>(zext_ln215_6_fu_497_p1.read()));
}

void kernel::thread_add_ln215_4_fu_586_p2() {
    add_ln215_4_fu_586_p2 = (!zext_ln215_8_fu_582_p1.read().is_01() || !zext_ln51_reg_775.read().is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln215_8_fu_582_p1.read()) + sc_biguint<8>(zext_ln51_reg_775.read()));
}

void kernel::thread_add_ln215_5_fu_608_p2() {
    add_ln215_5_fu_608_p2 = (!zext_ln321_4_reg_789.read().is_01() || !zext_ln215_10_fu_604_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln321_4_reg_789.read()) + sc_biguint<8>(zext_ln215_10_fu_604_p1.read()));
}

void kernel::thread_add_ln215_fu_372_p2() {
    add_ln215_fu_372_p2 = (!zext_ln215_fu_368_p1.read().is_01() || !zext_ln16_reg_635.read().is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln215_fu_368_p1.read()) + sc_biguint<8>(zext_ln16_reg_635.read()));
}

void kernel::thread_add_ln321_1_fu_453_p2() {
    add_ln321_1_fu_453_p2 = (!zext_ln33_reg_705.read().is_01() || !zext_ln321_2_fu_449_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln33_reg_705.read()) + sc_biguint<8>(zext_ln321_2_fu_449_p1.read()));
}

void kernel::thread_add_ln321_2_fu_560_p2() {
    add_ln321_2_fu_560_p2 = (!zext_ln51_reg_775.read().is_01() || !zext_ln321_4_fu_556_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln51_reg_775.read()) + sc_biguint<8>(zext_ln321_4_fu_556_p1.read()));
}

void kernel::thread_add_ln321_fu_346_p2() {
    add_ln321_fu_346_p2 = (!zext_ln16_reg_635.read().is_01() || !zext_ln321_fu_342_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln16_reg_635.read()) + sc_biguint<8>(zext_ln321_fu_342_p1.read()));
}

void kernel::thread_add_ln700_1_fu_515_p2() {
    add_ln700_1_fu_515_p2 = (!F_V_load_reg_236.read().is_01() || !v_V_1_reg_757.read().is_01())? sc_lv<32>(): (sc_biguint<32>(F_V_load_reg_236.read()) + sc_biguint<32>(v_V_1_reg_757.read()));
}

void kernel::thread_add_ln700_2_fu_622_p2() {
    add_ln700_2_fu_622_p2 = (!G_V_load_reg_282.read().is_01() || !v_V_2_reg_827.read().is_01())? sc_lv<32>(): (sc_biguint<32>(G_V_load_reg_282.read()) + sc_biguint<32>(v_V_2_reg_827.read()));
}

void kernel::thread_add_ln700_fu_408_p2() {
    add_ln700_fu_408_p2 = (!E_V_load_reg_190.read().is_01() || !v_V_reg_687.read().is_01())? sc_lv<32>(): (sc_biguint<32>(E_V_load_reg_190.read()) + sc_biguint<32>(v_V_reg_687.read()));
}

void kernel::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void kernel::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void kernel::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void kernel::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void kernel::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void kernel::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void kernel::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void kernel::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void kernel::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void kernel::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void kernel::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void kernel::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void kernel::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void kernel::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void kernel::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void kernel::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void kernel::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void kernel::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void kernel::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void kernel::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void kernel::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void kernel::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void kernel::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
         esl_seteq<1,1,1>(icmp_ln48_fu_520_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void kernel::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void kernel::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
         esl_seteq<1,1,1>(icmp_ln48_fu_520_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void kernel::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void kernel::thread_i_1_fu_419_p2() {
    i_1_fu_419_p2 = (!i1_0_reg_214.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i1_0_reg_214.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void kernel::thread_i_2_fu_526_p2() {
    i_2_fu_526_p2 = (!i5_0_reg_260.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i5_0_reg_260.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void kernel::thread_i_fu_312_p2() {
    i_fu_312_p2 = (!i_0_reg_168.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_0_reg_168.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void kernel::thread_icmp_ln13_fu_306_p2() {
    icmp_ln13_fu_306_p2 = (!i_0_reg_168.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_168.read() == ap_const_lv4_8);
}

void kernel::thread_icmp_ln16_fu_330_p2() {
    icmp_ln16_fu_330_p2 = (!j_0_reg_179.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_179.read() == ap_const_lv4_8);
}

void kernel::thread_icmp_ln21_fu_356_p2() {
    icmp_ln21_fu_356_p2 = (!k_0_reg_203.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(k_0_reg_203.read() == ap_const_lv4_8);
}

void kernel::thread_icmp_ln30_fu_413_p2() {
    icmp_ln30_fu_413_p2 = (!i1_0_reg_214.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i1_0_reg_214.read() == ap_const_lv4_8);
}

void kernel::thread_icmp_ln33_fu_437_p2() {
    icmp_ln33_fu_437_p2 = (!j2_0_reg_225.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(j2_0_reg_225.read() == ap_const_lv4_8);
}

void kernel::thread_icmp_ln38_fu_463_p2() {
    icmp_ln38_fu_463_p2 = (!k3_0_reg_249.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(k3_0_reg_249.read() == ap_const_lv4_8);
}

void kernel::thread_icmp_ln48_fu_520_p2() {
    icmp_ln48_fu_520_p2 = (!i5_0_reg_260.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i5_0_reg_260.read() == ap_const_lv4_8);
}

void kernel::thread_icmp_ln51_fu_544_p2() {
    icmp_ln51_fu_544_p2 = (!j6_0_reg_271.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(j6_0_reg_271.read() == ap_const_lv4_8);
}

void kernel::thread_icmp_ln56_fu_570_p2() {
    icmp_ln56_fu_570_p2 = (!k7_0_reg_295.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(k7_0_reg_295.read() == ap_const_lv4_8);
}

void kernel::thread_j_1_fu_443_p2() {
    j_1_fu_443_p2 = (!j2_0_reg_225.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j2_0_reg_225.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void kernel::thread_j_2_fu_550_p2() {
    j_2_fu_550_p2 = (!j6_0_reg_271.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j6_0_reg_271.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void kernel::thread_j_fu_336_p2() {
    j_fu_336_p2 = (!j_0_reg_179.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_0_reg_179.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void kernel::thread_k_1_fu_469_p2() {
    k_1_fu_469_p2 = (!k3_0_reg_249.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(k3_0_reg_249.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void kernel::thread_k_2_fu_576_p2() {
    k_2_fu_576_p2 = (!k7_0_reg_295.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(k7_0_reg_295.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void kernel::thread_k_fu_362_p2() {
    k_fu_362_p2 = (!k_0_reg_203.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(k_0_reg_203.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void kernel::thread_tmp_10_fu_596_p3() {
    tmp_10_fu_596_p3 = esl_concat<4,3>(k7_0_reg_295.read(), ap_const_lv3_0);
}

void kernel::thread_tmp_6_fu_318_p3() {
    tmp_6_fu_318_p3 = esl_concat<4,3>(i_0_reg_168.read(), ap_const_lv3_0);
}

void kernel::thread_tmp_7_fu_425_p3() {
    tmp_7_fu_425_p3 = esl_concat<4,3>(i1_0_reg_214.read(), ap_const_lv3_0);
}

void kernel::thread_tmp_8_fu_532_p3() {
    tmp_8_fu_532_p3 = esl_concat<4,3>(i5_0_reg_260.read(), ap_const_lv3_0);
}

void kernel::thread_tmp_9_fu_382_p3() {
    tmp_9_fu_382_p3 = esl_concat<4,3>(k_0_reg_203.read(), ap_const_lv3_0);
}

void kernel::thread_tmp_s_fu_489_p3() {
    tmp_s_fu_489_p3 = esl_concat<4,3>(k3_0_reg_249.read(), ap_const_lv3_0);
}

void kernel::thread_zext_ln16_fu_326_p1() {
    zext_ln16_fu_326_p1 = esl_zext<8,7>(tmp_6_fu_318_p3.read());
}

void kernel::thread_zext_ln215_10_fu_604_p1() {
    zext_ln215_10_fu_604_p1 = esl_zext<8,7>(tmp_10_fu_596_p3.read());
}

void kernel::thread_zext_ln215_11_fu_613_p1() {
    zext_ln215_11_fu_613_p1 = esl_zext<64,8>(add_ln215_5_fu_608_p2.read());
}

void kernel::thread_zext_ln215_1_fu_377_p1() {
    zext_ln215_1_fu_377_p1 = esl_zext<64,8>(add_ln215_fu_372_p2.read());
}

void kernel::thread_zext_ln215_2_fu_390_p1() {
    zext_ln215_2_fu_390_p1 = esl_zext<8,7>(tmp_9_fu_382_p3.read());
}

void kernel::thread_zext_ln215_3_fu_399_p1() {
    zext_ln215_3_fu_399_p1 = esl_zext<64,8>(add_ln215_1_fu_394_p2.read());
}

void kernel::thread_zext_ln215_4_fu_475_p1() {
    zext_ln215_4_fu_475_p1 = esl_zext<8,4>(k3_0_reg_249.read());
}

void kernel::thread_zext_ln215_5_fu_484_p1() {
    zext_ln215_5_fu_484_p1 = esl_zext<64,8>(add_ln215_2_fu_479_p2.read());
}

void kernel::thread_zext_ln215_6_fu_497_p1() {
    zext_ln215_6_fu_497_p1 = esl_zext<8,7>(tmp_s_fu_489_p3.read());
}

void kernel::thread_zext_ln215_7_fu_506_p1() {
    zext_ln215_7_fu_506_p1 = esl_zext<64,8>(add_ln215_3_fu_501_p2.read());
}

void kernel::thread_zext_ln215_8_fu_582_p1() {
    zext_ln215_8_fu_582_p1 = esl_zext<8,4>(k7_0_reg_295.read());
}

void kernel::thread_zext_ln215_9_fu_591_p1() {
    zext_ln215_9_fu_591_p1 = esl_zext<64,8>(add_ln215_4_fu_586_p2.read());
}

void kernel::thread_zext_ln215_fu_368_p1() {
    zext_ln215_fu_368_p1 = esl_zext<8,4>(k_0_reg_203.read());
}

void kernel::thread_zext_ln321_1_fu_351_p1() {
    zext_ln321_1_fu_351_p1 = esl_zext<64,8>(add_ln321_fu_346_p2.read());
}

void kernel::thread_zext_ln321_2_fu_449_p1() {
    zext_ln321_2_fu_449_p1 = esl_zext<8,4>(j2_0_reg_225.read());
}

void kernel::thread_zext_ln321_3_fu_458_p1() {
    zext_ln321_3_fu_458_p1 = esl_zext<64,8>(add_ln321_1_fu_453_p2.read());
}

void kernel::thread_zext_ln321_4_fu_556_p1() {
    zext_ln321_4_fu_556_p1 = esl_zext<8,4>(j6_0_reg_271.read());
}

void kernel::thread_zext_ln321_5_fu_565_p1() {
    zext_ln321_5_fu_565_p1 = esl_zext<64,8>(add_ln321_2_fu_560_p2.read());
}

void kernel::thread_zext_ln321_fu_342_p1() {
    zext_ln321_fu_342_p1 = esl_zext<8,4>(j_0_reg_179.read());
}

void kernel::thread_zext_ln33_fu_433_p1() {
    zext_ln33_fu_433_p1 = esl_zext<8,7>(tmp_7_fu_425_p3.read());
}

void kernel::thread_zext_ln51_fu_540_p1() {
    zext_ln51_fu_540_p1 = esl_zext<8,7>(tmp_8_fu_532_p3.read());
}

void kernel::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln13_fu_306_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln16_fu_330_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln21_fu_356_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(icmp_ln30_fu_413_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state18;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(icmp_ln33_fu_437_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 2048 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(icmp_ln38_fu_463_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 131072 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && esl_seteq<1,1,1>(icmp_ln48_fu_520_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state19;
            }
            break;
        case 262144 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && esl_seteq<1,1,1>(icmp_ln51_fu_544_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state18;
            } else {
                ap_NS_fsm = ap_ST_fsm_state20;
            }
            break;
        case 524288 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && esl_seteq<1,1,1>(icmp_ln56_fu_570_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state19;
            } else {
                ap_NS_fsm = ap_ST_fsm_state21;
            }
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<25>) ("XXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void kernel::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"E_V_Addr_A\" :  \"" << E_V_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"E_V_EN_A\" :  \"" << E_V_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"E_V_WEN_A\" :  \"" << E_V_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"E_V_Din_A\" :  \"" << E_V_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"E_V_Dout_A\" :  \"" << E_V_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"E_V_Clk_A\" :  \"" << E_V_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"E_V_Rst_A\" :  \"" << E_V_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_V_Addr_A\" :  \"" << A_V_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_V_EN_A\" :  \"" << A_V_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_V_WEN_A\" :  \"" << A_V_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_V_Din_A\" :  \"" << A_V_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"A_V_Dout_A\" :  \"" << A_V_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_V_Clk_A\" :  \"" << A_V_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_V_Rst_A\" :  \"" << A_V_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_V_Addr_A\" :  \"" << B_V_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_V_EN_A\" :  \"" << B_V_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_V_WEN_A\" :  \"" << B_V_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_V_Din_A\" :  \"" << B_V_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"B_V_Dout_A\" :  \"" << B_V_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_V_Clk_A\" :  \"" << B_V_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_V_Rst_A\" :  \"" << B_V_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"F_V_Addr_A\" :  \"" << F_V_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"F_V_EN_A\" :  \"" << F_V_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"F_V_WEN_A\" :  \"" << F_V_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"F_V_Din_A\" :  \"" << F_V_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"F_V_Dout_A\" :  \"" << F_V_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"F_V_Clk_A\" :  \"" << F_V_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"F_V_Rst_A\" :  \"" << F_V_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_V_Addr_A\" :  \"" << C_V_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_V_EN_A\" :  \"" << C_V_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_V_WEN_A\" :  \"" << C_V_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_V_Din_A\" :  \"" << C_V_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"C_V_Dout_A\" :  \"" << C_V_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_V_Clk_A\" :  \"" << C_V_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_V_Rst_A\" :  \"" << C_V_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"D_V_Addr_A\" :  \"" << D_V_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"D_V_EN_A\" :  \"" << D_V_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"D_V_WEN_A\" :  \"" << D_V_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"D_V_Din_A\" :  \"" << D_V_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"D_V_Dout_A\" :  \"" << D_V_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"D_V_Clk_A\" :  \"" << D_V_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"D_V_Rst_A\" :  \"" << D_V_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"G_V_Addr_A\" :  \"" << G_V_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"G_V_EN_A\" :  \"" << G_V_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"G_V_WEN_A\" :  \"" << G_V_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"G_V_Din_A\" :  \"" << G_V_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"G_V_Dout_A\" :  \"" << G_V_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"G_V_Clk_A\" :  \"" << G_V_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"G_V_Rst_A\" :  \"" << G_V_Rst_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_AWVALID\" :  \"" << s_axi_control_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_AWREADY\" :  \"" << s_axi_control_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_AWADDR\" :  \"" << s_axi_control_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WVALID\" :  \"" << s_axi_control_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_WREADY\" :  \"" << s_axi_control_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WDATA\" :  \"" << s_axi_control_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WSTRB\" :  \"" << s_axi_control_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_ARVALID\" :  \"" << s_axi_control_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_ARREADY\" :  \"" << s_axi_control_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_ARADDR\" :  \"" << s_axi_control_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RVALID\" :  \"" << s_axi_control_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_RREADY\" :  \"" << s_axi_control_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RDATA\" :  \"" << s_axi_control_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RRESP\" :  \"" << s_axi_control_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_BVALID\" :  \"" << s_axi_control_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_BREADY\" :  \"" << s_axi_control_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_BRESP\" :  \"" << s_axi_control_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

