// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _kernel_HH_
#define _kernel_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "kernel_mul_32s_32s_32_3_1.h"
#include "kernel_control_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_CONTROL_ADDR_WIDTH = 4,
         unsigned int C_S_AXI_CONTROL_DATA_WIDTH = 32>
struct kernel : public sc_module {
    // Port declarations 69
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_lv<32> > E_V_Addr_A;
    sc_out< sc_logic > E_V_EN_A;
    sc_out< sc_lv<4> > E_V_WEN_A;
    sc_out< sc_lv<32> > E_V_Din_A;
    sc_in< sc_lv<32> > E_V_Dout_A;
    sc_out< sc_logic > E_V_Clk_A;
    sc_out< sc_logic > E_V_Rst_A;
    sc_out< sc_lv<32> > A_V_Addr_A;
    sc_out< sc_logic > A_V_EN_A;
    sc_out< sc_lv<4> > A_V_WEN_A;
    sc_out< sc_lv<32> > A_V_Din_A;
    sc_in< sc_lv<32> > A_V_Dout_A;
    sc_out< sc_logic > A_V_Clk_A;
    sc_out< sc_logic > A_V_Rst_A;
    sc_out< sc_lv<32> > B_V_Addr_A;
    sc_out< sc_logic > B_V_EN_A;
    sc_out< sc_lv<4> > B_V_WEN_A;
    sc_out< sc_lv<32> > B_V_Din_A;
    sc_in< sc_lv<32> > B_V_Dout_A;
    sc_out< sc_logic > B_V_Clk_A;
    sc_out< sc_logic > B_V_Rst_A;
    sc_out< sc_lv<32> > F_V_Addr_A;
    sc_out< sc_logic > F_V_EN_A;
    sc_out< sc_lv<4> > F_V_WEN_A;
    sc_out< sc_lv<32> > F_V_Din_A;
    sc_in< sc_lv<32> > F_V_Dout_A;
    sc_out< sc_logic > F_V_Clk_A;
    sc_out< sc_logic > F_V_Rst_A;
    sc_out< sc_lv<32> > C_V_Addr_A;
    sc_out< sc_logic > C_V_EN_A;
    sc_out< sc_lv<4> > C_V_WEN_A;
    sc_out< sc_lv<32> > C_V_Din_A;
    sc_in< sc_lv<32> > C_V_Dout_A;
    sc_out< sc_logic > C_V_Clk_A;
    sc_out< sc_logic > C_V_Rst_A;
    sc_out< sc_lv<32> > D_V_Addr_A;
    sc_out< sc_logic > D_V_EN_A;
    sc_out< sc_lv<4> > D_V_WEN_A;
    sc_out< sc_lv<32> > D_V_Din_A;
    sc_in< sc_lv<32> > D_V_Dout_A;
    sc_out< sc_logic > D_V_Clk_A;
    sc_out< sc_logic > D_V_Rst_A;
    sc_out< sc_lv<32> > G_V_Addr_A;
    sc_out< sc_logic > G_V_EN_A;
    sc_out< sc_lv<4> > G_V_WEN_A;
    sc_out< sc_lv<32> > G_V_Din_A;
    sc_in< sc_lv<32> > G_V_Dout_A;
    sc_out< sc_logic > G_V_Clk_A;
    sc_out< sc_logic > G_V_Rst_A;
    sc_in< sc_logic > s_axi_control_AWVALID;
    sc_out< sc_logic > s_axi_control_AWREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_ADDR_WIDTH> > s_axi_control_AWADDR;
    sc_in< sc_logic > s_axi_control_WVALID;
    sc_out< sc_logic > s_axi_control_WREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_DATA_WIDTH> > s_axi_control_WDATA;
    sc_in< sc_uint<C_S_AXI_CONTROL_DATA_WIDTH/8> > s_axi_control_WSTRB;
    sc_in< sc_logic > s_axi_control_ARVALID;
    sc_out< sc_logic > s_axi_control_ARREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_ADDR_WIDTH> > s_axi_control_ARADDR;
    sc_out< sc_logic > s_axi_control_RVALID;
    sc_in< sc_logic > s_axi_control_RREADY;
    sc_out< sc_uint<C_S_AXI_CONTROL_DATA_WIDTH> > s_axi_control_RDATA;
    sc_out< sc_lv<2> > s_axi_control_RRESP;
    sc_out< sc_logic > s_axi_control_BVALID;
    sc_in< sc_logic > s_axi_control_BREADY;
    sc_out< sc_lv<2> > s_axi_control_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    kernel(sc_module_name name);
    SC_HAS_PROCESS(kernel);

    ~kernel();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    kernel_control_s_axi<C_S_AXI_CONTROL_ADDR_WIDTH,C_S_AXI_CONTROL_DATA_WIDTH>* kernel_control_s_axi_U;
    kernel_mul_32s_32s_32_3_1<1,3,32,32,32>* kernel_mul_32s_32s_32_3_1_U1;
    kernel_mul_32s_32s_32_3_1<1,3,32,32,32>* kernel_mul_32s_32s_32_3_1_U2;
    kernel_mul_32s_32s_32_3_1<1,3,32,32,32>* kernel_mul_32s_32s_32_3_1_U3;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<25> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<4> > i_fu_312_p2;
    sc_signal< sc_lv<4> > i_reg_630;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<8> > zext_ln16_fu_326_p1;
    sc_signal< sc_lv<8> > zext_ln16_reg_635;
    sc_signal< sc_lv<1> > icmp_ln13_fu_306_p2;
    sc_signal< sc_lv<4> > j_fu_336_p2;
    sc_signal< sc_lv<4> > j_reg_644;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<8> > zext_ln321_fu_342_p1;
    sc_signal< sc_lv<8> > zext_ln321_reg_649;
    sc_signal< sc_lv<1> > icmp_ln16_fu_330_p2;
    sc_signal< sc_lv<6> > E_V_addr_reg_654;
    sc_signal< sc_lv<4> > k_fu_362_p2;
    sc_signal< sc_lv<4> > k_reg_662;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln21_fu_356_p2;
    sc_signal< sc_lv<32> > A_V_load_reg_677;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > B_V_load_reg_682;
    sc_signal< sc_lv<32> > grp_fu_404_p2;
    sc_signal< sc_lv<32> > v_V_reg_687;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > add_ln700_fu_408_p2;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<4> > i_1_fu_419_p2;
    sc_signal< sc_lv<4> > i_1_reg_700;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<8> > zext_ln33_fu_433_p1;
    sc_signal< sc_lv<8> > zext_ln33_reg_705;
    sc_signal< sc_lv<1> > icmp_ln30_fu_413_p2;
    sc_signal< sc_lv<4> > j_1_fu_443_p2;
    sc_signal< sc_lv<4> > j_1_reg_714;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<8> > zext_ln321_2_fu_449_p1;
    sc_signal< sc_lv<8> > zext_ln321_2_reg_719;
    sc_signal< sc_lv<1> > icmp_ln33_fu_437_p2;
    sc_signal< sc_lv<6> > F_V_addr_reg_724;
    sc_signal< sc_lv<4> > k_1_fu_469_p2;
    sc_signal< sc_lv<4> > k_1_reg_732;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<1> > icmp_ln38_fu_463_p2;
    sc_signal< sc_lv<32> > C_V_load_reg_747;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<32> > D_V_load_reg_752;
    sc_signal< sc_lv<32> > grp_fu_511_p2;
    sc_signal< sc_lv<32> > v_V_1_reg_757;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<32> > add_ln700_1_fu_515_p2;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<4> > i_2_fu_526_p2;
    sc_signal< sc_lv<4> > i_2_reg_770;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_lv<8> > zext_ln51_fu_540_p1;
    sc_signal< sc_lv<8> > zext_ln51_reg_775;
    sc_signal< sc_lv<1> > icmp_ln48_fu_520_p2;
    sc_signal< sc_lv<4> > j_2_fu_550_p2;
    sc_signal< sc_lv<4> > j_2_reg_784;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_lv<8> > zext_ln321_4_fu_556_p1;
    sc_signal< sc_lv<8> > zext_ln321_4_reg_789;
    sc_signal< sc_lv<1> > icmp_ln51_fu_544_p2;
    sc_signal< sc_lv<6> > G_V_addr_reg_794;
    sc_signal< sc_lv<4> > k_2_fu_576_p2;
    sc_signal< sc_lv<4> > k_2_reg_802;
    sc_signal< sc_logic > ap_CS_fsm_state20;
    sc_signal< sc_lv<1> > icmp_ln56_fu_570_p2;
    sc_signal< sc_lv<32> > E_V_load_1_reg_817;
    sc_signal< sc_logic > ap_CS_fsm_state21;
    sc_signal< sc_lv<32> > F_V_load_1_reg_822;
    sc_signal< sc_lv<32> > grp_fu_618_p2;
    sc_signal< sc_lv<32> > v_V_2_reg_827;
    sc_signal< sc_logic > ap_CS_fsm_state24;
    sc_signal< sc_lv<32> > add_ln700_2_fu_622_p2;
    sc_signal< sc_logic > ap_CS_fsm_state25;
    sc_signal< sc_lv<4> > i_0_reg_168;
    sc_signal< sc_lv<4> > j_0_reg_179;
    sc_signal< sc_lv<32> > E_V_load_reg_190;
    sc_signal< sc_lv<4> > k_0_reg_203;
    sc_signal< sc_lv<4> > i1_0_reg_214;
    sc_signal< sc_lv<4> > j2_0_reg_225;
    sc_signal< sc_lv<32> > F_V_load_reg_236;
    sc_signal< sc_lv<4> > k3_0_reg_249;
    sc_signal< sc_lv<4> > i5_0_reg_260;
    sc_signal< sc_lv<4> > j6_0_reg_271;
    sc_signal< sc_lv<32> > G_V_load_reg_282;
    sc_signal< sc_lv<4> > k7_0_reg_295;
    sc_signal< sc_lv<64> > zext_ln321_1_fu_351_p1;
    sc_signal< sc_lv<64> > zext_ln215_1_fu_377_p1;
    sc_signal< sc_lv<64> > zext_ln215_3_fu_399_p1;
    sc_signal< sc_lv<64> > zext_ln321_3_fu_458_p1;
    sc_signal< sc_lv<64> > zext_ln215_5_fu_484_p1;
    sc_signal< sc_lv<64> > zext_ln215_7_fu_506_p1;
    sc_signal< sc_lv<64> > zext_ln321_5_fu_565_p1;
    sc_signal< sc_lv<64> > zext_ln215_9_fu_591_p1;
    sc_signal< sc_lv<64> > zext_ln215_11_fu_613_p1;
    sc_signal< sc_lv<32> > E_V_Addr_A_orig;
    sc_signal< sc_lv<32> > A_V_Addr_A_orig;
    sc_signal< sc_lv<32> > B_V_Addr_A_orig;
    sc_signal< sc_lv<32> > F_V_Addr_A_orig;
    sc_signal< sc_lv<32> > C_V_Addr_A_orig;
    sc_signal< sc_lv<32> > D_V_Addr_A_orig;
    sc_signal< sc_lv<32> > G_V_Addr_A_orig;
    sc_signal< sc_lv<7> > tmp_6_fu_318_p3;
    sc_signal< sc_lv<8> > add_ln321_fu_346_p2;
    sc_signal< sc_lv<8> > zext_ln215_fu_368_p1;
    sc_signal< sc_lv<8> > add_ln215_fu_372_p2;
    sc_signal< sc_lv<7> > tmp_9_fu_382_p3;
    sc_signal< sc_lv<8> > zext_ln215_2_fu_390_p1;
    sc_signal< sc_lv<8> > add_ln215_1_fu_394_p2;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<7> > tmp_7_fu_425_p3;
    sc_signal< sc_lv<8> > add_ln321_1_fu_453_p2;
    sc_signal< sc_lv<8> > zext_ln215_4_fu_475_p1;
    sc_signal< sc_lv<8> > add_ln215_2_fu_479_p2;
    sc_signal< sc_lv<7> > tmp_s_fu_489_p3;
    sc_signal< sc_lv<8> > zext_ln215_6_fu_497_p1;
    sc_signal< sc_lv<8> > add_ln215_3_fu_501_p2;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<7> > tmp_8_fu_532_p3;
    sc_signal< sc_lv<8> > add_ln321_2_fu_560_p2;
    sc_signal< sc_lv<8> > zext_ln215_8_fu_582_p1;
    sc_signal< sc_lv<8> > add_ln215_4_fu_586_p2;
    sc_signal< sc_lv<7> > tmp_10_fu_596_p3;
    sc_signal< sc_lv<8> > zext_ln215_10_fu_604_p1;
    sc_signal< sc_lv<8> > add_ln215_5_fu_608_p2;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_lv<25> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<25> ap_ST_fsm_state1;
    static const sc_lv<25> ap_ST_fsm_state2;
    static const sc_lv<25> ap_ST_fsm_state3;
    static const sc_lv<25> ap_ST_fsm_state4;
    static const sc_lv<25> ap_ST_fsm_state5;
    static const sc_lv<25> ap_ST_fsm_state6;
    static const sc_lv<25> ap_ST_fsm_state7;
    static const sc_lv<25> ap_ST_fsm_state8;
    static const sc_lv<25> ap_ST_fsm_state9;
    static const sc_lv<25> ap_ST_fsm_state10;
    static const sc_lv<25> ap_ST_fsm_state11;
    static const sc_lv<25> ap_ST_fsm_state12;
    static const sc_lv<25> ap_ST_fsm_state13;
    static const sc_lv<25> ap_ST_fsm_state14;
    static const sc_lv<25> ap_ST_fsm_state15;
    static const sc_lv<25> ap_ST_fsm_state16;
    static const sc_lv<25> ap_ST_fsm_state17;
    static const sc_lv<25> ap_ST_fsm_state18;
    static const sc_lv<25> ap_ST_fsm_state19;
    static const sc_lv<25> ap_ST_fsm_state20;
    static const sc_lv<25> ap_ST_fsm_state21;
    static const sc_lv<25> ap_ST_fsm_state22;
    static const sc_lv<25> ap_ST_fsm_state23;
    static const sc_lv<25> ap_ST_fsm_state24;
    static const sc_lv<25> ap_ST_fsm_state25;
    static const sc_lv<32> ap_const_lv32_0;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_15;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_A_V_Addr_A();
    void thread_A_V_Addr_A_orig();
    void thread_A_V_Clk_A();
    void thread_A_V_Din_A();
    void thread_A_V_EN_A();
    void thread_A_V_Rst_A();
    void thread_A_V_WEN_A();
    void thread_B_V_Addr_A();
    void thread_B_V_Addr_A_orig();
    void thread_B_V_Clk_A();
    void thread_B_V_Din_A();
    void thread_B_V_EN_A();
    void thread_B_V_Rst_A();
    void thread_B_V_WEN_A();
    void thread_C_V_Addr_A();
    void thread_C_V_Addr_A_orig();
    void thread_C_V_Clk_A();
    void thread_C_V_Din_A();
    void thread_C_V_EN_A();
    void thread_C_V_Rst_A();
    void thread_C_V_WEN_A();
    void thread_D_V_Addr_A();
    void thread_D_V_Addr_A_orig();
    void thread_D_V_Clk_A();
    void thread_D_V_Din_A();
    void thread_D_V_EN_A();
    void thread_D_V_Rst_A();
    void thread_D_V_WEN_A();
    void thread_E_V_Addr_A();
    void thread_E_V_Addr_A_orig();
    void thread_E_V_Clk_A();
    void thread_E_V_Din_A();
    void thread_E_V_EN_A();
    void thread_E_V_Rst_A();
    void thread_E_V_WEN_A();
    void thread_F_V_Addr_A();
    void thread_F_V_Addr_A_orig();
    void thread_F_V_Clk_A();
    void thread_F_V_Din_A();
    void thread_F_V_EN_A();
    void thread_F_V_Rst_A();
    void thread_F_V_WEN_A();
    void thread_G_V_Addr_A();
    void thread_G_V_Addr_A_orig();
    void thread_G_V_Clk_A();
    void thread_G_V_Din_A();
    void thread_G_V_EN_A();
    void thread_G_V_Rst_A();
    void thread_G_V_WEN_A();
    void thread_add_ln215_1_fu_394_p2();
    void thread_add_ln215_2_fu_479_p2();
    void thread_add_ln215_3_fu_501_p2();
    void thread_add_ln215_4_fu_586_p2();
    void thread_add_ln215_5_fu_608_p2();
    void thread_add_ln215_fu_372_p2();
    void thread_add_ln321_1_fu_453_p2();
    void thread_add_ln321_2_fu_560_p2();
    void thread_add_ln321_fu_346_p2();
    void thread_add_ln700_1_fu_515_p2();
    void thread_add_ln700_2_fu_622_p2();
    void thread_add_ln700_fu_408_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state21();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state24();
    void thread_ap_CS_fsm_state25();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_i_1_fu_419_p2();
    void thread_i_2_fu_526_p2();
    void thread_i_fu_312_p2();
    void thread_icmp_ln13_fu_306_p2();
    void thread_icmp_ln16_fu_330_p2();
    void thread_icmp_ln21_fu_356_p2();
    void thread_icmp_ln30_fu_413_p2();
    void thread_icmp_ln33_fu_437_p2();
    void thread_icmp_ln38_fu_463_p2();
    void thread_icmp_ln48_fu_520_p2();
    void thread_icmp_ln51_fu_544_p2();
    void thread_icmp_ln56_fu_570_p2();
    void thread_j_1_fu_443_p2();
    void thread_j_2_fu_550_p2();
    void thread_j_fu_336_p2();
    void thread_k_1_fu_469_p2();
    void thread_k_2_fu_576_p2();
    void thread_k_fu_362_p2();
    void thread_tmp_10_fu_596_p3();
    void thread_tmp_6_fu_318_p3();
    void thread_tmp_7_fu_425_p3();
    void thread_tmp_8_fu_532_p3();
    void thread_tmp_9_fu_382_p3();
    void thread_tmp_s_fu_489_p3();
    void thread_zext_ln16_fu_326_p1();
    void thread_zext_ln215_10_fu_604_p1();
    void thread_zext_ln215_11_fu_613_p1();
    void thread_zext_ln215_1_fu_377_p1();
    void thread_zext_ln215_2_fu_390_p1();
    void thread_zext_ln215_3_fu_399_p1();
    void thread_zext_ln215_4_fu_475_p1();
    void thread_zext_ln215_5_fu_484_p1();
    void thread_zext_ln215_6_fu_497_p1();
    void thread_zext_ln215_7_fu_506_p1();
    void thread_zext_ln215_8_fu_582_p1();
    void thread_zext_ln215_9_fu_591_p1();
    void thread_zext_ln215_fu_368_p1();
    void thread_zext_ln321_1_fu_351_p1();
    void thread_zext_ln321_2_fu_449_p1();
    void thread_zext_ln321_3_fu_458_p1();
    void thread_zext_ln321_4_fu_556_p1();
    void thread_zext_ln321_5_fu_565_p1();
    void thread_zext_ln321_fu_342_p1();
    void thread_zext_ln33_fu_433_p1();
    void thread_zext_ln51_fu_540_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
