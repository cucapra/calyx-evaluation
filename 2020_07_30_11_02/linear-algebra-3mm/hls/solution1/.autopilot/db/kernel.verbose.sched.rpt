

================================================================
== Vivado HLS Report for 'kernel'
================================================================
* Date:           Thu Jul 30 13:37:48 2020

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        benchmark.prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   7.00|     5.745|        0.88|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+------+------+------+---------+
    |   Latency   |   Interval  | Pipeline|
    |  min |  max |  min |  max |   Type  |
    +------+------+------+------+---------+
    |  9651|  9651|  9651|  9651|   none  |
    +------+------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------+------+------+----------+-----------+-----------+------+----------+
        |                 |   Latency   | Iteration|  Initiation Interval  | Trip |          |
        |    Loop Name    |  min |  max |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------------+------+------+----------+-----------+-----------+------+----------+
        |- Loop 1         |  3216|  3216|       402|          -|          -|     8|    no    |
        | + Loop 1.1      |   400|   400|        50|          -|          -|     8|    no    |
        |  ++ Loop 1.1.1  |    48|    48|         6|          -|          -|     8|    no    |
        |- Loop 2         |  3216|  3216|       402|          -|          -|     8|    no    |
        | + Loop 2.1      |   400|   400|        50|          -|          -|     8|    no    |
        |  ++ Loop 2.1.1  |    48|    48|         6|          -|          -|     8|    no    |
        |- Loop 3         |  3216|  3216|       402|          -|          -|     8|    no    |
        | + Loop 3.1      |   400|   400|        50|          -|          -|     8|    no    |
        |  ++ Loop 3.1.1  |    48|    48|         6|          -|          -|     8|    no    |
        +-----------------+------+------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 25
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 10 
3 --> 4 2 
4 --> 5 3 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 4 
10 --> 11 18 
11 --> 12 10 
12 --> 13 11 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 12 
18 --> 19 
19 --> 20 18 
20 --> 21 19 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 20 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([64 x i32]* %E_V), !map !36"   --->   Operation 26 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([64 x i32]* %A_V), !map !42"   --->   Operation 27 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([64 x i32]* %B_V), !map !46"   --->   Operation 28 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([64 x i32]* %F_V), !map !50"   --->   Operation 29 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([64 x i32]* %C_V), !map !54"   --->   Operation 30 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([64 x i32]* %D_V), !map !58"   --->   Operation 31 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([64 x i32]* %G_V), !map !62"   --->   Operation 32 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([7 x i8]* @kernel_str) nounwind"   --->   Operation 33 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface([64 x i32]* %E_V, [5 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)" [./linear-algebra-3mm.cpp:5]   --->   Operation 34 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface([64 x i32]* %A_V, [5 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)" [./linear-algebra-3mm.cpp:6]   --->   Operation 35 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface([64 x i32]* %B_V, [5 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)" [./linear-algebra-3mm.cpp:7]   --->   Operation 36 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface([64 x i32]* %F_V, [5 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)" [./linear-algebra-3mm.cpp:8]   --->   Operation 37 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface([64 x i32]* %C_V, [5 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)" [./linear-algebra-3mm.cpp:9]   --->   Operation 38 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface([64 x i32]* %D_V, [5 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)" [./linear-algebra-3mm.cpp:10]   --->   Operation 39 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface([64 x i32]* %G_V, [5 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)" [./linear-algebra-3mm.cpp:11]   --->   Operation 40 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [8 x i8]* @p_str3, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [./linear-algebra-3mm.cpp:12]   --->   Operation 41 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (1.76ns)   --->   "br label %1" [./linear-algebra-3mm.cpp:13]   --->   Operation 42 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 1.76>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%i_0 = phi i4 [ 0, %0 ], [ %i, %hls_label_0_end ]"   --->   Operation 43 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (1.30ns)   --->   "%icmp_ln13 = icmp eq i4 %i_0, -8" [./linear-algebra-3mm.cpp:13]   --->   Operation 44 'icmp' 'icmp_ln13' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)"   --->   Operation 45 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (1.73ns)   --->   "%i = add i4 %i_0, 1" [./linear-algebra-3mm.cpp:13]   --->   Operation 46 'add' 'i' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "br i1 %icmp_ln13, label %.preheader155.preheader, label %hls_label_0_begin" [./linear-algebra-3mm.cpp:13]   --->   Operation 47 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str4)" [./linear-algebra-3mm.cpp:13]   --->   Operation 48 'specregionbegin' 'tmp' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%tmp_6 = call i7 @_ssdm_op_BitConcatenate.i7.i4.i3(i4 %i_0, i3 0)" [./linear-algebra-3mm.cpp:19]   --->   Operation 49 'bitconcatenate' 'tmp_6' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%zext_ln16 = zext i7 %tmp_6 to i8" [./linear-algebra-3mm.cpp:16]   --->   Operation 50 'zext' 'zext_ln16' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (1.76ns)   --->   "br label %2" [./linear-algebra-3mm.cpp:16]   --->   Operation 51 'br' <Predicate = (!icmp_ln13)> <Delay = 1.76>
ST_2 : Operation 52 [1/1] (1.76ns)   --->   "br label %.preheader155" [./linear-algebra-3mm.cpp:30]   --->   Operation 52 'br' <Predicate = (icmp_ln13)> <Delay = 1.76>

State 3 <SV = 2> <Delay = 1.87>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%j_0 = phi i4 [ 0, %hls_label_0_begin ], [ %j, %hls_label_1_end ]"   --->   Operation 53 'phi' 'j_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (1.30ns)   --->   "%icmp_ln16 = icmp eq i4 %j_0, -8" [./linear-algebra-3mm.cpp:16]   --->   Operation 54 'icmp' 'icmp_ln16' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 55 [1/1] (0.00ns)   --->   "%empty_2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)"   --->   Operation 55 'speclooptripcount' 'empty_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 56 [1/1] (1.73ns)   --->   "%j = add i4 %j_0, 1" [./linear-algebra-3mm.cpp:16]   --->   Operation 56 'add' 'j' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 57 [1/1] (0.00ns)   --->   "br i1 %icmp_ln16, label %hls_label_0_end, label %hls_label_1_begin" [./linear-algebra-3mm.cpp:16]   --->   Operation 57 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 58 [1/1] (0.00ns)   --->   "%tmp_3 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str5)" [./linear-algebra-3mm.cpp:16]   --->   Operation 58 'specregionbegin' 'tmp_3' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_3 : Operation 59 [1/1] (0.00ns)   --->   "%zext_ln321 = zext i4 %j_0 to i8" [./linear-algebra-3mm.cpp:19]   --->   Operation 59 'zext' 'zext_ln321' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_3 : Operation 60 [1/1] (1.87ns)   --->   "%add_ln321 = add i8 %zext_ln16, %zext_ln321" [./linear-algebra-3mm.cpp:19]   --->   Operation 60 'add' 'add_ln321' <Predicate = (!icmp_ln16)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 61 [1/1] (0.00ns)   --->   "%zext_ln321_1 = zext i8 %add_ln321 to i64" [./linear-algebra-3mm.cpp:19]   --->   Operation 61 'zext' 'zext_ln321_1' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_3 : Operation 62 [1/1] (0.00ns)   --->   "%E_V_addr = getelementptr [64 x i32]* %E_V, i64 0, i64 %zext_ln321_1" [./linear-algebra-3mm.cpp:19]   --->   Operation 62 'getelementptr' 'E_V_addr' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_3 : Operation 63 [1/1] (1.76ns)   --->   "br label %3" [./linear-algebra-3mm.cpp:21]   --->   Operation 63 'br' <Predicate = (!icmp_ln16)> <Delay = 1.76>
ST_3 : Operation 64 [1/1] (0.00ns)   --->   "%empty_5 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str4, i32 %tmp)" [./linear-algebra-3mm.cpp:29]   --->   Operation 64 'specregionend' 'empty_5' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_3 : Operation 65 [1/1] (0.00ns)   --->   "br label %1" [./linear-algebra-3mm.cpp:13]   --->   Operation 65 'br' <Predicate = (icmp_ln16)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 5.12>
ST_4 : Operation 66 [1/1] (0.00ns)   --->   "%E_V_load = phi i32 [ 0, %hls_label_1_begin ], [ %add_ln700, %4 ]" [./linear-algebra-3mm.cpp:26]   --->   Operation 66 'phi' 'E_V_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 67 [1/1] (0.00ns)   --->   "%k_0 = phi i4 [ 0, %hls_label_1_begin ], [ %k, %4 ]"   --->   Operation 67 'phi' 'k_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 68 [1/1] (3.25ns)   --->   "store i32 %E_V_load, i32* %E_V_addr, align 4" [./linear-algebra-3mm.cpp:26]   --->   Operation 68 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_4 : Operation 69 [1/1] (1.30ns)   --->   "%icmp_ln21 = icmp eq i4 %k_0, -8" [./linear-algebra-3mm.cpp:21]   --->   Operation 69 'icmp' 'icmp_ln21' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 70 [1/1] (0.00ns)   --->   "%empty_3 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)"   --->   Operation 70 'speclooptripcount' 'empty_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 71 [1/1] (1.73ns)   --->   "%k = add i4 %k_0, 1" [./linear-algebra-3mm.cpp:21]   --->   Operation 71 'add' 'k' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 72 [1/1] (0.00ns)   --->   "br i1 %icmp_ln21, label %hls_label_1_end, label %4" [./linear-algebra-3mm.cpp:21]   --->   Operation 72 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 73 [1/1] (0.00ns)   --->   "%zext_ln215 = zext i4 %k_0 to i8" [./linear-algebra-3mm.cpp:24]   --->   Operation 73 'zext' 'zext_ln215' <Predicate = (!icmp_ln21)> <Delay = 0.00>
ST_4 : Operation 74 [1/1] (1.87ns)   --->   "%add_ln215 = add i8 %zext_ln215, %zext_ln16" [./linear-algebra-3mm.cpp:24]   --->   Operation 74 'add' 'add_ln215' <Predicate = (!icmp_ln21)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 75 [1/1] (0.00ns)   --->   "%zext_ln215_1 = zext i8 %add_ln215 to i64" [./linear-algebra-3mm.cpp:24]   --->   Operation 75 'zext' 'zext_ln215_1' <Predicate = (!icmp_ln21)> <Delay = 0.00>
ST_4 : Operation 76 [1/1] (0.00ns)   --->   "%A_V_addr = getelementptr [64 x i32]* %A_V, i64 0, i64 %zext_ln215_1" [./linear-algebra-3mm.cpp:24]   --->   Operation 76 'getelementptr' 'A_V_addr' <Predicate = (!icmp_ln21)> <Delay = 0.00>
ST_4 : Operation 77 [1/1] (0.00ns)   --->   "%tmp_9 = call i7 @_ssdm_op_BitConcatenate.i7.i4.i3(i4 %k_0, i3 0)" [./linear-algebra-3mm.cpp:24]   --->   Operation 77 'bitconcatenate' 'tmp_9' <Predicate = (!icmp_ln21)> <Delay = 0.00>
ST_4 : Operation 78 [1/1] (0.00ns)   --->   "%zext_ln215_2 = zext i7 %tmp_9 to i8" [./linear-algebra-3mm.cpp:24]   --->   Operation 78 'zext' 'zext_ln215_2' <Predicate = (!icmp_ln21)> <Delay = 0.00>
ST_4 : Operation 79 [1/1] (1.87ns)   --->   "%add_ln215_1 = add i8 %zext_ln321, %zext_ln215_2" [./linear-algebra-3mm.cpp:24]   --->   Operation 79 'add' 'add_ln215_1' <Predicate = (!icmp_ln21)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 80 [1/1] (0.00ns)   --->   "%zext_ln215_3 = zext i8 %add_ln215_1 to i64" [./linear-algebra-3mm.cpp:24]   --->   Operation 80 'zext' 'zext_ln215_3' <Predicate = (!icmp_ln21)> <Delay = 0.00>
ST_4 : Operation 81 [1/1] (0.00ns)   --->   "%B_V_addr = getelementptr [64 x i32]* %B_V, i64 0, i64 %zext_ln215_3" [./linear-algebra-3mm.cpp:24]   --->   Operation 81 'getelementptr' 'B_V_addr' <Predicate = (!icmp_ln21)> <Delay = 0.00>
ST_4 : Operation 82 [2/2] (3.25ns)   --->   "%A_V_load = load i32* %A_V_addr, align 4" [./linear-algebra-3mm.cpp:24]   --->   Operation 82 'load' 'A_V_load' <Predicate = (!icmp_ln21)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_4 : Operation 83 [2/2] (3.25ns)   --->   "%B_V_load = load i32* %B_V_addr, align 4" [./linear-algebra-3mm.cpp:24]   --->   Operation 83 'load' 'B_V_load' <Predicate = (!icmp_ln21)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_4 : Operation 84 [1/1] (0.00ns)   --->   "%empty_4 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str5, i32 %tmp_3)" [./linear-algebra-3mm.cpp:28]   --->   Operation 84 'specregionend' 'empty_4' <Predicate = (icmp_ln21)> <Delay = 0.00>
ST_4 : Operation 85 [1/1] (0.00ns)   --->   "br label %2" [./linear-algebra-3mm.cpp:16]   --->   Operation 85 'br' <Predicate = (icmp_ln21)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 3.25>
ST_5 : Operation 86 [1/2] (3.25ns)   --->   "%A_V_load = load i32* %A_V_addr, align 4" [./linear-algebra-3mm.cpp:24]   --->   Operation 86 'load' 'A_V_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_5 : Operation 87 [1/2] (3.25ns)   --->   "%B_V_load = load i32* %B_V_addr, align 4" [./linear-algebra-3mm.cpp:24]   --->   Operation 87 'load' 'B_V_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>

State 6 <SV = 5> <Delay = 5.74>
ST_6 : Operation 88 [3/3] (5.74ns)   --->   "%v_V = mul i32 %A_V_load, %B_V_load" [./linear-algebra-3mm.cpp:24]   --->   Operation 88 'mul' 'v_V' <Predicate = true> <Delay = 5.74> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 5.74> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 5.74>
ST_7 : Operation 89 [2/3] (5.74ns)   --->   "%v_V = mul i32 %A_V_load, %B_V_load" [./linear-algebra-3mm.cpp:24]   --->   Operation 89 'mul' 'v_V' <Predicate = true> <Delay = 5.74> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 5.74> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 5.74>
ST_8 : Operation 90 [1/3] (5.74ns)   --->   "%v_V = mul i32 %A_V_load, %B_V_load" [./linear-algebra-3mm.cpp:24]   --->   Operation 90 'mul' 'v_V' <Predicate = true> <Delay = 5.74> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 5.74> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 2.55>
ST_9 : Operation 91 [1/1] (2.55ns)   --->   "%add_ln700 = add i32 %E_V_load, %v_V" [./linear-algebra-3mm.cpp:26]   --->   Operation 91 'add' 'add_ln700' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 92 [1/1] (0.00ns)   --->   "br label %3" [./linear-algebra-3mm.cpp:21]   --->   Operation 92 'br' <Predicate = true> <Delay = 0.00>

State 10 <SV = 2> <Delay = 1.76>
ST_10 : Operation 93 [1/1] (0.00ns)   --->   "%i1_0 = phi i4 [ %i_1, %hls_label_3_end ], [ 0, %.preheader155.preheader ]"   --->   Operation 93 'phi' 'i1_0' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 94 [1/1] (1.30ns)   --->   "%icmp_ln30 = icmp eq i4 %i1_0, -8" [./linear-algebra-3mm.cpp:30]   --->   Operation 94 'icmp' 'icmp_ln30' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 95 [1/1] (0.00ns)   --->   "%empty_6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)"   --->   Operation 95 'speclooptripcount' 'empty_6' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 96 [1/1] (1.73ns)   --->   "%i_1 = add i4 %i1_0, 1" [./linear-algebra-3mm.cpp:30]   --->   Operation 96 'add' 'i_1' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 97 [1/1] (0.00ns)   --->   "br i1 %icmp_ln30, label %.preheader.preheader, label %hls_label_3_begin" [./linear-algebra-3mm.cpp:30]   --->   Operation 97 'br' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 98 [1/1] (0.00ns)   --->   "%tmp_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str7)" [./linear-algebra-3mm.cpp:30]   --->   Operation 98 'specregionbegin' 'tmp_1' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_10 : Operation 99 [1/1] (0.00ns)   --->   "%tmp_7 = call i7 @_ssdm_op_BitConcatenate.i7.i4.i3(i4 %i1_0, i3 0)" [./linear-algebra-3mm.cpp:36]   --->   Operation 99 'bitconcatenate' 'tmp_7' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_10 : Operation 100 [1/1] (0.00ns)   --->   "%zext_ln33 = zext i7 %tmp_7 to i8" [./linear-algebra-3mm.cpp:33]   --->   Operation 100 'zext' 'zext_ln33' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_10 : Operation 101 [1/1] (1.76ns)   --->   "br label %5" [./linear-algebra-3mm.cpp:33]   --->   Operation 101 'br' <Predicate = (!icmp_ln30)> <Delay = 1.76>
ST_10 : Operation 102 [1/1] (1.76ns)   --->   "br label %.preheader" [./linear-algebra-3mm.cpp:48]   --->   Operation 102 'br' <Predicate = (icmp_ln30)> <Delay = 1.76>

State 11 <SV = 3> <Delay = 1.87>
ST_11 : Operation 103 [1/1] (0.00ns)   --->   "%j2_0 = phi i4 [ 0, %hls_label_3_begin ], [ %j_1, %hls_label_4_end ]"   --->   Operation 103 'phi' 'j2_0' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 104 [1/1] (1.30ns)   --->   "%icmp_ln33 = icmp eq i4 %j2_0, -8" [./linear-algebra-3mm.cpp:33]   --->   Operation 104 'icmp' 'icmp_ln33' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 105 [1/1] (0.00ns)   --->   "%empty_7 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)"   --->   Operation 105 'speclooptripcount' 'empty_7' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 106 [1/1] (1.73ns)   --->   "%j_1 = add i4 %j2_0, 1" [./linear-algebra-3mm.cpp:33]   --->   Operation 106 'add' 'j_1' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 107 [1/1] (0.00ns)   --->   "br i1 %icmp_ln33, label %hls_label_3_end, label %hls_label_4_begin" [./linear-algebra-3mm.cpp:33]   --->   Operation 107 'br' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 108 [1/1] (0.00ns)   --->   "%tmp_4 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str8)" [./linear-algebra-3mm.cpp:33]   --->   Operation 108 'specregionbegin' 'tmp_4' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_11 : Operation 109 [1/1] (0.00ns)   --->   "%zext_ln321_2 = zext i4 %j2_0 to i8" [./linear-algebra-3mm.cpp:36]   --->   Operation 109 'zext' 'zext_ln321_2' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_11 : Operation 110 [1/1] (1.87ns)   --->   "%add_ln321_1 = add i8 %zext_ln33, %zext_ln321_2" [./linear-algebra-3mm.cpp:36]   --->   Operation 110 'add' 'add_ln321_1' <Predicate = (!icmp_ln33)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 111 [1/1] (0.00ns)   --->   "%zext_ln321_3 = zext i8 %add_ln321_1 to i64" [./linear-algebra-3mm.cpp:36]   --->   Operation 111 'zext' 'zext_ln321_3' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_11 : Operation 112 [1/1] (0.00ns)   --->   "%F_V_addr = getelementptr [64 x i32]* %F_V, i64 0, i64 %zext_ln321_3" [./linear-algebra-3mm.cpp:36]   --->   Operation 112 'getelementptr' 'F_V_addr' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_11 : Operation 113 [1/1] (1.76ns)   --->   "br label %6" [./linear-algebra-3mm.cpp:38]   --->   Operation 113 'br' <Predicate = (!icmp_ln33)> <Delay = 1.76>
ST_11 : Operation 114 [1/1] (0.00ns)   --->   "%empty_10 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str7, i32 %tmp_1)" [./linear-algebra-3mm.cpp:46]   --->   Operation 114 'specregionend' 'empty_10' <Predicate = (icmp_ln33)> <Delay = 0.00>
ST_11 : Operation 115 [1/1] (0.00ns)   --->   "br label %.preheader155" [./linear-algebra-3mm.cpp:30]   --->   Operation 115 'br' <Predicate = (icmp_ln33)> <Delay = 0.00>

State 12 <SV = 4> <Delay = 5.12>
ST_12 : Operation 116 [1/1] (0.00ns)   --->   "%F_V_load = phi i32 [ 0, %hls_label_4_begin ], [ %add_ln700_1, %7 ]" [./linear-algebra-3mm.cpp:43]   --->   Operation 116 'phi' 'F_V_load' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 117 [1/1] (0.00ns)   --->   "%k3_0 = phi i4 [ 0, %hls_label_4_begin ], [ %k_1, %7 ]"   --->   Operation 117 'phi' 'k3_0' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 118 [1/1] (3.25ns)   --->   "store i32 %F_V_load, i32* %F_V_addr, align 4" [./linear-algebra-3mm.cpp:43]   --->   Operation 118 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_12 : Operation 119 [1/1] (1.30ns)   --->   "%icmp_ln38 = icmp eq i4 %k3_0, -8" [./linear-algebra-3mm.cpp:38]   --->   Operation 119 'icmp' 'icmp_ln38' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 120 [1/1] (0.00ns)   --->   "%empty_8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)"   --->   Operation 120 'speclooptripcount' 'empty_8' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 121 [1/1] (1.73ns)   --->   "%k_1 = add i4 %k3_0, 1" [./linear-algebra-3mm.cpp:38]   --->   Operation 121 'add' 'k_1' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 122 [1/1] (0.00ns)   --->   "br i1 %icmp_ln38, label %hls_label_4_end, label %7" [./linear-algebra-3mm.cpp:38]   --->   Operation 122 'br' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 123 [1/1] (0.00ns)   --->   "%zext_ln215_4 = zext i4 %k3_0 to i8" [./linear-algebra-3mm.cpp:41]   --->   Operation 123 'zext' 'zext_ln215_4' <Predicate = (!icmp_ln38)> <Delay = 0.00>
ST_12 : Operation 124 [1/1] (1.87ns)   --->   "%add_ln215_2 = add i8 %zext_ln215_4, %zext_ln33" [./linear-algebra-3mm.cpp:41]   --->   Operation 124 'add' 'add_ln215_2' <Predicate = (!icmp_ln38)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 125 [1/1] (0.00ns)   --->   "%zext_ln215_5 = zext i8 %add_ln215_2 to i64" [./linear-algebra-3mm.cpp:41]   --->   Operation 125 'zext' 'zext_ln215_5' <Predicate = (!icmp_ln38)> <Delay = 0.00>
ST_12 : Operation 126 [1/1] (0.00ns)   --->   "%C_V_addr = getelementptr [64 x i32]* %C_V, i64 0, i64 %zext_ln215_5" [./linear-algebra-3mm.cpp:41]   --->   Operation 126 'getelementptr' 'C_V_addr' <Predicate = (!icmp_ln38)> <Delay = 0.00>
ST_12 : Operation 127 [1/1] (0.00ns)   --->   "%tmp_s = call i7 @_ssdm_op_BitConcatenate.i7.i4.i3(i4 %k3_0, i3 0)" [./linear-algebra-3mm.cpp:41]   --->   Operation 127 'bitconcatenate' 'tmp_s' <Predicate = (!icmp_ln38)> <Delay = 0.00>
ST_12 : Operation 128 [1/1] (0.00ns)   --->   "%zext_ln215_6 = zext i7 %tmp_s to i8" [./linear-algebra-3mm.cpp:41]   --->   Operation 128 'zext' 'zext_ln215_6' <Predicate = (!icmp_ln38)> <Delay = 0.00>
ST_12 : Operation 129 [1/1] (1.87ns)   --->   "%add_ln215_3 = add i8 %zext_ln321_2, %zext_ln215_6" [./linear-algebra-3mm.cpp:41]   --->   Operation 129 'add' 'add_ln215_3' <Predicate = (!icmp_ln38)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 130 [1/1] (0.00ns)   --->   "%zext_ln215_7 = zext i8 %add_ln215_3 to i64" [./linear-algebra-3mm.cpp:41]   --->   Operation 130 'zext' 'zext_ln215_7' <Predicate = (!icmp_ln38)> <Delay = 0.00>
ST_12 : Operation 131 [1/1] (0.00ns)   --->   "%D_V_addr = getelementptr [64 x i32]* %D_V, i64 0, i64 %zext_ln215_7" [./linear-algebra-3mm.cpp:41]   --->   Operation 131 'getelementptr' 'D_V_addr' <Predicate = (!icmp_ln38)> <Delay = 0.00>
ST_12 : Operation 132 [2/2] (3.25ns)   --->   "%C_V_load = load i32* %C_V_addr, align 4" [./linear-algebra-3mm.cpp:41]   --->   Operation 132 'load' 'C_V_load' <Predicate = (!icmp_ln38)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_12 : Operation 133 [2/2] (3.25ns)   --->   "%D_V_load = load i32* %D_V_addr, align 4" [./linear-algebra-3mm.cpp:41]   --->   Operation 133 'load' 'D_V_load' <Predicate = (!icmp_ln38)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_12 : Operation 134 [1/1] (0.00ns)   --->   "%empty_9 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str8, i32 %tmp_4)" [./linear-algebra-3mm.cpp:45]   --->   Operation 134 'specregionend' 'empty_9' <Predicate = (icmp_ln38)> <Delay = 0.00>
ST_12 : Operation 135 [1/1] (0.00ns)   --->   "br label %5" [./linear-algebra-3mm.cpp:33]   --->   Operation 135 'br' <Predicate = (icmp_ln38)> <Delay = 0.00>

State 13 <SV = 5> <Delay = 3.25>
ST_13 : Operation 136 [1/2] (3.25ns)   --->   "%C_V_load = load i32* %C_V_addr, align 4" [./linear-algebra-3mm.cpp:41]   --->   Operation 136 'load' 'C_V_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_13 : Operation 137 [1/2] (3.25ns)   --->   "%D_V_load = load i32* %D_V_addr, align 4" [./linear-algebra-3mm.cpp:41]   --->   Operation 137 'load' 'D_V_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>

State 14 <SV = 6> <Delay = 5.74>
ST_14 : Operation 138 [3/3] (5.74ns)   --->   "%v_V_1 = mul i32 %C_V_load, %D_V_load" [./linear-algebra-3mm.cpp:41]   --->   Operation 138 'mul' 'v_V_1' <Predicate = true> <Delay = 5.74> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 5.74> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 7> <Delay = 5.74>
ST_15 : Operation 139 [2/3] (5.74ns)   --->   "%v_V_1 = mul i32 %C_V_load, %D_V_load" [./linear-algebra-3mm.cpp:41]   --->   Operation 139 'mul' 'v_V_1' <Predicate = true> <Delay = 5.74> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 5.74> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 8> <Delay = 5.74>
ST_16 : Operation 140 [1/3] (5.74ns)   --->   "%v_V_1 = mul i32 %C_V_load, %D_V_load" [./linear-algebra-3mm.cpp:41]   --->   Operation 140 'mul' 'v_V_1' <Predicate = true> <Delay = 5.74> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 5.74> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 9> <Delay = 2.55>
ST_17 : Operation 141 [1/1] (2.55ns)   --->   "%add_ln700_1 = add i32 %F_V_load, %v_V_1" [./linear-algebra-3mm.cpp:43]   --->   Operation 141 'add' 'add_ln700_1' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 142 [1/1] (0.00ns)   --->   "br label %6" [./linear-algebra-3mm.cpp:38]   --->   Operation 142 'br' <Predicate = true> <Delay = 0.00>

State 18 <SV = 3> <Delay = 1.76>
ST_18 : Operation 143 [1/1] (0.00ns)   --->   "%i5_0 = phi i4 [ %i_2, %hls_label_6_end ], [ 0, %.preheader.preheader ]"   --->   Operation 143 'phi' 'i5_0' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 144 [1/1] (1.30ns)   --->   "%icmp_ln48 = icmp eq i4 %i5_0, -8" [./linear-algebra-3mm.cpp:48]   --->   Operation 144 'icmp' 'icmp_ln48' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 145 [1/1] (0.00ns)   --->   "%empty_11 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)"   --->   Operation 145 'speclooptripcount' 'empty_11' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 146 [1/1] (1.73ns)   --->   "%i_2 = add i4 %i5_0, 1" [./linear-algebra-3mm.cpp:48]   --->   Operation 146 'add' 'i_2' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 147 [1/1] (0.00ns)   --->   "br i1 %icmp_ln48, label %11, label %hls_label_6_begin" [./linear-algebra-3mm.cpp:48]   --->   Operation 147 'br' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 148 [1/1] (0.00ns)   --->   "%tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str10)" [./linear-algebra-3mm.cpp:48]   --->   Operation 148 'specregionbegin' 'tmp_2' <Predicate = (!icmp_ln48)> <Delay = 0.00>
ST_18 : Operation 149 [1/1] (0.00ns)   --->   "%tmp_8 = call i7 @_ssdm_op_BitConcatenate.i7.i4.i3(i4 %i5_0, i3 0)" [./linear-algebra-3mm.cpp:59]   --->   Operation 149 'bitconcatenate' 'tmp_8' <Predicate = (!icmp_ln48)> <Delay = 0.00>
ST_18 : Operation 150 [1/1] (0.00ns)   --->   "%zext_ln51 = zext i7 %tmp_8 to i8" [./linear-algebra-3mm.cpp:51]   --->   Operation 150 'zext' 'zext_ln51' <Predicate = (!icmp_ln48)> <Delay = 0.00>
ST_18 : Operation 151 [1/1] (1.76ns)   --->   "br label %8" [./linear-algebra-3mm.cpp:51]   --->   Operation 151 'br' <Predicate = (!icmp_ln48)> <Delay = 1.76>
ST_18 : Operation 152 [1/1] (0.00ns)   --->   "ret void" [./linear-algebra-3mm.cpp:65]   --->   Operation 152 'ret' <Predicate = (icmp_ln48)> <Delay = 0.00>

State 19 <SV = 4> <Delay = 1.87>
ST_19 : Operation 153 [1/1] (0.00ns)   --->   "%j6_0 = phi i4 [ 0, %hls_label_6_begin ], [ %j_2, %hls_label_7_end ]"   --->   Operation 153 'phi' 'j6_0' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 154 [1/1] (1.30ns)   --->   "%icmp_ln51 = icmp eq i4 %j6_0, -8" [./linear-algebra-3mm.cpp:51]   --->   Operation 154 'icmp' 'icmp_ln51' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 155 [1/1] (0.00ns)   --->   "%empty_12 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)"   --->   Operation 155 'speclooptripcount' 'empty_12' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 156 [1/1] (1.73ns)   --->   "%j_2 = add i4 %j6_0, 1" [./linear-algebra-3mm.cpp:51]   --->   Operation 156 'add' 'j_2' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 157 [1/1] (0.00ns)   --->   "br i1 %icmp_ln51, label %hls_label_6_end, label %hls_label_7_begin" [./linear-algebra-3mm.cpp:51]   --->   Operation 157 'br' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 158 [1/1] (0.00ns)   --->   "%tmp_5 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str11)" [./linear-algebra-3mm.cpp:51]   --->   Operation 158 'specregionbegin' 'tmp_5' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_19 : Operation 159 [1/1] (0.00ns)   --->   "%zext_ln321_4 = zext i4 %j6_0 to i8" [./linear-algebra-3mm.cpp:54]   --->   Operation 159 'zext' 'zext_ln321_4' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_19 : Operation 160 [1/1] (1.87ns)   --->   "%add_ln321_2 = add i8 %zext_ln51, %zext_ln321_4" [./linear-algebra-3mm.cpp:54]   --->   Operation 160 'add' 'add_ln321_2' <Predicate = (!icmp_ln51)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 161 [1/1] (0.00ns)   --->   "%zext_ln321_5 = zext i8 %add_ln321_2 to i64" [./linear-algebra-3mm.cpp:54]   --->   Operation 161 'zext' 'zext_ln321_5' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_19 : Operation 162 [1/1] (0.00ns)   --->   "%G_V_addr = getelementptr [64 x i32]* %G_V, i64 0, i64 %zext_ln321_5" [./linear-algebra-3mm.cpp:54]   --->   Operation 162 'getelementptr' 'G_V_addr' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_19 : Operation 163 [1/1] (1.76ns)   --->   "br label %9" [./linear-algebra-3mm.cpp:56]   --->   Operation 163 'br' <Predicate = (!icmp_ln51)> <Delay = 1.76>
ST_19 : Operation 164 [1/1] (0.00ns)   --->   "%empty_15 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str10, i32 %tmp_2)" [./linear-algebra-3mm.cpp:64]   --->   Operation 164 'specregionend' 'empty_15' <Predicate = (icmp_ln51)> <Delay = 0.00>
ST_19 : Operation 165 [1/1] (0.00ns)   --->   "br label %.preheader" [./linear-algebra-3mm.cpp:48]   --->   Operation 165 'br' <Predicate = (icmp_ln51)> <Delay = 0.00>

State 20 <SV = 5> <Delay = 5.12>
ST_20 : Operation 166 [1/1] (0.00ns)   --->   "%G_V_load = phi i32 [ 0, %hls_label_7_begin ], [ %add_ln700_2, %10 ]" [./linear-algebra-3mm.cpp:61]   --->   Operation 166 'phi' 'G_V_load' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 167 [1/1] (0.00ns)   --->   "%k7_0 = phi i4 [ 0, %hls_label_7_begin ], [ %k_2, %10 ]"   --->   Operation 167 'phi' 'k7_0' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 168 [1/1] (3.25ns)   --->   "store i32 %G_V_load, i32* %G_V_addr, align 4" [./linear-algebra-3mm.cpp:61]   --->   Operation 168 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_20 : Operation 169 [1/1] (1.30ns)   --->   "%icmp_ln56 = icmp eq i4 %k7_0, -8" [./linear-algebra-3mm.cpp:56]   --->   Operation 169 'icmp' 'icmp_ln56' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 170 [1/1] (0.00ns)   --->   "%empty_13 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)"   --->   Operation 170 'speclooptripcount' 'empty_13' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 171 [1/1] (1.73ns)   --->   "%k_2 = add i4 %k7_0, 1" [./linear-algebra-3mm.cpp:56]   --->   Operation 171 'add' 'k_2' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 172 [1/1] (0.00ns)   --->   "br i1 %icmp_ln56, label %hls_label_7_end, label %10" [./linear-algebra-3mm.cpp:56]   --->   Operation 172 'br' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 173 [1/1] (0.00ns)   --->   "%zext_ln215_8 = zext i4 %k7_0 to i8" [./linear-algebra-3mm.cpp:59]   --->   Operation 173 'zext' 'zext_ln215_8' <Predicate = (!icmp_ln56)> <Delay = 0.00>
ST_20 : Operation 174 [1/1] (1.87ns)   --->   "%add_ln215_4 = add i8 %zext_ln215_8, %zext_ln51" [./linear-algebra-3mm.cpp:59]   --->   Operation 174 'add' 'add_ln215_4' <Predicate = (!icmp_ln56)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 175 [1/1] (0.00ns)   --->   "%zext_ln215_9 = zext i8 %add_ln215_4 to i64" [./linear-algebra-3mm.cpp:59]   --->   Operation 175 'zext' 'zext_ln215_9' <Predicate = (!icmp_ln56)> <Delay = 0.00>
ST_20 : Operation 176 [1/1] (0.00ns)   --->   "%E_V_addr_1 = getelementptr [64 x i32]* %E_V, i64 0, i64 %zext_ln215_9" [./linear-algebra-3mm.cpp:59]   --->   Operation 176 'getelementptr' 'E_V_addr_1' <Predicate = (!icmp_ln56)> <Delay = 0.00>
ST_20 : Operation 177 [1/1] (0.00ns)   --->   "%tmp_10 = call i7 @_ssdm_op_BitConcatenate.i7.i4.i3(i4 %k7_0, i3 0)" [./linear-algebra-3mm.cpp:59]   --->   Operation 177 'bitconcatenate' 'tmp_10' <Predicate = (!icmp_ln56)> <Delay = 0.00>
ST_20 : Operation 178 [1/1] (0.00ns)   --->   "%zext_ln215_10 = zext i7 %tmp_10 to i8" [./linear-algebra-3mm.cpp:59]   --->   Operation 178 'zext' 'zext_ln215_10' <Predicate = (!icmp_ln56)> <Delay = 0.00>
ST_20 : Operation 179 [1/1] (1.87ns)   --->   "%add_ln215_5 = add i8 %zext_ln321_4, %zext_ln215_10" [./linear-algebra-3mm.cpp:59]   --->   Operation 179 'add' 'add_ln215_5' <Predicate = (!icmp_ln56)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 180 [1/1] (0.00ns)   --->   "%zext_ln215_11 = zext i8 %add_ln215_5 to i64" [./linear-algebra-3mm.cpp:59]   --->   Operation 180 'zext' 'zext_ln215_11' <Predicate = (!icmp_ln56)> <Delay = 0.00>
ST_20 : Operation 181 [1/1] (0.00ns)   --->   "%F_V_addr_1 = getelementptr [64 x i32]* %F_V, i64 0, i64 %zext_ln215_11" [./linear-algebra-3mm.cpp:59]   --->   Operation 181 'getelementptr' 'F_V_addr_1' <Predicate = (!icmp_ln56)> <Delay = 0.00>
ST_20 : Operation 182 [2/2] (3.25ns)   --->   "%E_V_load_1 = load i32* %E_V_addr_1, align 4" [./linear-algebra-3mm.cpp:59]   --->   Operation 182 'load' 'E_V_load_1' <Predicate = (!icmp_ln56)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_20 : Operation 183 [2/2] (3.25ns)   --->   "%F_V_load_1 = load i32* %F_V_addr_1, align 4" [./linear-algebra-3mm.cpp:59]   --->   Operation 183 'load' 'F_V_load_1' <Predicate = (!icmp_ln56)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_20 : Operation 184 [1/1] (0.00ns)   --->   "%empty_14 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str11, i32 %tmp_5)" [./linear-algebra-3mm.cpp:63]   --->   Operation 184 'specregionend' 'empty_14' <Predicate = (icmp_ln56)> <Delay = 0.00>
ST_20 : Operation 185 [1/1] (0.00ns)   --->   "br label %8" [./linear-algebra-3mm.cpp:51]   --->   Operation 185 'br' <Predicate = (icmp_ln56)> <Delay = 0.00>

State 21 <SV = 6> <Delay = 3.25>
ST_21 : Operation 186 [1/2] (3.25ns)   --->   "%E_V_load_1 = load i32* %E_V_addr_1, align 4" [./linear-algebra-3mm.cpp:59]   --->   Operation 186 'load' 'E_V_load_1' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_21 : Operation 187 [1/2] (3.25ns)   --->   "%F_V_load_1 = load i32* %F_V_addr_1, align 4" [./linear-algebra-3mm.cpp:59]   --->   Operation 187 'load' 'F_V_load_1' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>

State 22 <SV = 7> <Delay = 5.74>
ST_22 : Operation 188 [3/3] (5.74ns)   --->   "%v_V_2 = mul i32 %E_V_load_1, %F_V_load_1" [./linear-algebra-3mm.cpp:59]   --->   Operation 188 'mul' 'v_V_2' <Predicate = true> <Delay = 5.74> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 5.74> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 23 <SV = 8> <Delay = 5.74>
ST_23 : Operation 189 [2/3] (5.74ns)   --->   "%v_V_2 = mul i32 %E_V_load_1, %F_V_load_1" [./linear-algebra-3mm.cpp:59]   --->   Operation 189 'mul' 'v_V_2' <Predicate = true> <Delay = 5.74> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 5.74> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 9> <Delay = 5.74>
ST_24 : Operation 190 [1/3] (5.74ns)   --->   "%v_V_2 = mul i32 %E_V_load_1, %F_V_load_1" [./linear-algebra-3mm.cpp:59]   --->   Operation 190 'mul' 'v_V_2' <Predicate = true> <Delay = 5.74> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 5.74> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 25 <SV = 10> <Delay = 2.55>
ST_25 : Operation 191 [1/1] (2.55ns)   --->   "%add_ln700_2 = add i32 %G_V_load, %v_V_2" [./linear-algebra-3mm.cpp:61]   --->   Operation 191 'add' 'add_ln700_2' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 192 [1/1] (0.00ns)   --->   "br label %9" [./linear-algebra-3mm.cpp:56]   --->   Operation 192 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 7ns, clock uncertainty: 0.875ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', ./linear-algebra-3mm.cpp:13) [26]  (1.77 ns)

 <State 2>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('j') with incoming values : ('j', ./linear-algebra-3mm.cpp:16) [37]  (1.77 ns)

 <State 3>: 1.87ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', ./linear-algebra-3mm.cpp:16) [37]  (0 ns)
	'add' operation ('add_ln321', ./linear-algebra-3mm.cpp:19) [45]  (1.87 ns)

 <State 4>: 5.12ns
The critical path consists of the following:
	'phi' operation ('k') with incoming values : ('k', ./linear-algebra-3mm.cpp:21) [51]  (0 ns)
	'add' operation ('add_ln215', ./linear-algebra-3mm.cpp:24) [59]  (1.87 ns)
	'getelementptr' operation ('A_V_addr', ./linear-algebra-3mm.cpp:24) [61]  (0 ns)
	'load' operation ('A_V_load', ./linear-algebra-3mm.cpp:24) on array 'A_V' [67]  (3.25 ns)

 <State 5>: 3.25ns
The critical path consists of the following:
	'load' operation ('A_V_load', ./linear-algebra-3mm.cpp:24) on array 'A_V' [67]  (3.25 ns)

 <State 6>: 5.75ns
The critical path consists of the following:
	'mul' operation ('v.V', ./linear-algebra-3mm.cpp:24) [69]  (5.75 ns)

 <State 7>: 5.75ns
The critical path consists of the following:
	'mul' operation ('v.V', ./linear-algebra-3mm.cpp:24) [69]  (5.75 ns)

 <State 8>: 5.75ns
The critical path consists of the following:
	'mul' operation ('v.V', ./linear-algebra-3mm.cpp:24) [69]  (5.75 ns)

 <State 9>: 2.55ns
The critical path consists of the following:
	'add' operation ('add_ln700', ./linear-algebra-3mm.cpp:26) [70]  (2.55 ns)

 <State 10>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('j') with incoming values : ('j', ./linear-algebra-3mm.cpp:33) [92]  (1.77 ns)

 <State 11>: 1.87ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', ./linear-algebra-3mm.cpp:33) [92]  (0 ns)
	'add' operation ('add_ln321_1', ./linear-algebra-3mm.cpp:36) [100]  (1.87 ns)

 <State 12>: 5.12ns
The critical path consists of the following:
	'phi' operation ('k') with incoming values : ('k', ./linear-algebra-3mm.cpp:38) [106]  (0 ns)
	'add' operation ('add_ln215_2', ./linear-algebra-3mm.cpp:41) [114]  (1.87 ns)
	'getelementptr' operation ('C_V_addr', ./linear-algebra-3mm.cpp:41) [116]  (0 ns)
	'load' operation ('C_V_load', ./linear-algebra-3mm.cpp:41) on array 'C_V' [122]  (3.25 ns)

 <State 13>: 3.25ns
The critical path consists of the following:
	'load' operation ('C_V_load', ./linear-algebra-3mm.cpp:41) on array 'C_V' [122]  (3.25 ns)

 <State 14>: 5.75ns
The critical path consists of the following:
	'mul' operation ('v.V', ./linear-algebra-3mm.cpp:41) [124]  (5.75 ns)

 <State 15>: 5.75ns
The critical path consists of the following:
	'mul' operation ('v.V', ./linear-algebra-3mm.cpp:41) [124]  (5.75 ns)

 <State 16>: 5.75ns
The critical path consists of the following:
	'mul' operation ('v.V', ./linear-algebra-3mm.cpp:41) [124]  (5.75 ns)

 <State 17>: 2.55ns
The critical path consists of the following:
	'add' operation ('add_ln700_1', ./linear-algebra-3mm.cpp:43) [125]  (2.55 ns)

 <State 18>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('j') with incoming values : ('j', ./linear-algebra-3mm.cpp:51) [147]  (1.77 ns)

 <State 19>: 1.87ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', ./linear-algebra-3mm.cpp:51) [147]  (0 ns)
	'add' operation ('add_ln321_2', ./linear-algebra-3mm.cpp:54) [155]  (1.87 ns)

 <State 20>: 5.12ns
The critical path consists of the following:
	'phi' operation ('k') with incoming values : ('k', ./linear-algebra-3mm.cpp:56) [161]  (0 ns)
	'add' operation ('add_ln215_4', ./linear-algebra-3mm.cpp:59) [169]  (1.87 ns)
	'getelementptr' operation ('E_V_addr_1', ./linear-algebra-3mm.cpp:59) [171]  (0 ns)
	'load' operation ('E_V_load_1', ./linear-algebra-3mm.cpp:59) on array 'E_V' [177]  (3.25 ns)

 <State 21>: 3.25ns
The critical path consists of the following:
	'load' operation ('E_V_load_1', ./linear-algebra-3mm.cpp:59) on array 'E_V' [177]  (3.25 ns)

 <State 22>: 5.75ns
The critical path consists of the following:
	'mul' operation ('v.V', ./linear-algebra-3mm.cpp:59) [179]  (5.75 ns)

 <State 23>: 5.75ns
The critical path consists of the following:
	'mul' operation ('v.V', ./linear-algebra-3mm.cpp:59) [179]  (5.75 ns)

 <State 24>: 5.75ns
The critical path consists of the following:
	'mul' operation ('v.V', ./linear-algebra-3mm.cpp:59) [179]  (5.75 ns)

 <State 25>: 2.55ns
The critical path consists of the following:
	'add' operation ('add_ln700_2', ./linear-algebra-3mm.cpp:61) [180]  (2.55 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
