
import "primitives/std.lib";

component mac_pe(top: 32, left: 32) -> (down: 32, right: 32, out: 32) {
  cells {
    // Storage
    acc = prim std_reg(32);
    mul_reg = prim std_reg(32);
    // Computation
    add = prim std_add(32);
    mul = prim std_mult_pipe(32);
  }

  wires {

    group do_mul {
      mul.left = top;
      mul.right = left;
      mul.go = !mul.done ? 1'd1;
      mul_reg.in = mul.done ? mul.out;
      mul_reg.write_en = mul.done ? 1'd1;
      do_mul[done] = mul_reg.done;
    }

    group do_add {
      add.left = acc.out;
      add.right = mul_reg.out;
      acc.in = add.out;
      acc.write_en = 1'd1;
      do_add[done] = acc.done;
    }

    out = acc.out;
    down = top;
    right = left;
  }

  control {
    seq { do_mul; do_add; }
  }
}

component main() -> () {
    cells {
      t0_idx = prim std_reg(3);
      t0_add = prim std_add(3);
      t0 = prim std_mem_d1(32, 4, 3);
      t1_idx = prim std_reg(3);
      t1_add = prim std_add(3);
      t1 = prim std_mem_d1(32, 4, 3);
      t2_idx = prim std_reg(3);
      t2_add = prim std_add(3);
      t2 = prim std_mem_d1(32, 4, 3);
      t3_idx = prim std_reg(3);
      t3_add = prim std_add(3);
      t3 = prim std_mem_d1(32, 4, 3);
      l0_idx = prim std_reg(3);
      l0_add = prim std_add(3);
      l0 = prim std_mem_d1(32, 4, 3);
      l1_idx = prim std_reg(3);
      l1_add = prim std_add(3);
      l1 = prim std_mem_d1(32, 4, 3);
      l2_idx = prim std_reg(3);
      l2_add = prim std_add(3);
      l2 = prim std_mem_d1(32, 4, 3);
      l3_idx = prim std_reg(3);
      l3_add = prim std_add(3);
      l3 = prim std_mem_d1(32, 4, 3);
      out_mem = prim std_mem_d2_ext(32, 4, 4, 3, 3);
      pe_00 = mac_pe;
      top_00_read = prim std_reg(32);
      left_00_read = prim std_reg(32);
      right_00_write = prim std_reg(32);
      down_00_write = prim std_reg(32);
      pe_01 = mac_pe;
      top_01_read = prim std_reg(32);
      left_01_read = prim std_reg(32);
      right_01_write = prim std_reg(32);
      down_01_write = prim std_reg(32);
      pe_02 = mac_pe;
      top_02_read = prim std_reg(32);
      left_02_read = prim std_reg(32);
      right_02_write = prim std_reg(32);
      down_02_write = prim std_reg(32);
      pe_03 = mac_pe;
      top_03_read = prim std_reg(32);
      left_03_read = prim std_reg(32);
      down_03_write = prim std_reg(32);
      pe_10 = mac_pe;
      top_10_read = prim std_reg(32);
      left_10_read = prim std_reg(32);
      right_10_write = prim std_reg(32);
      down_10_write = prim std_reg(32);
      pe_11 = mac_pe;
      top_11_read = prim std_reg(32);
      left_11_read = prim std_reg(32);
      right_11_write = prim std_reg(32);
      down_11_write = prim std_reg(32);
      pe_12 = mac_pe;
      top_12_read = prim std_reg(32);
      left_12_read = prim std_reg(32);
      right_12_write = prim std_reg(32);
      down_12_write = prim std_reg(32);
      pe_13 = mac_pe;
      top_13_read = prim std_reg(32);
      left_13_read = prim std_reg(32);
      down_13_write = prim std_reg(32);
      pe_20 = mac_pe;
      top_20_read = prim std_reg(32);
      left_20_read = prim std_reg(32);
      right_20_write = prim std_reg(32);
      down_20_write = prim std_reg(32);
      pe_21 = mac_pe;
      top_21_read = prim std_reg(32);
      left_21_read = prim std_reg(32);
      right_21_write = prim std_reg(32);
      down_21_write = prim std_reg(32);
      pe_22 = mac_pe;
      top_22_read = prim std_reg(32);
      left_22_read = prim std_reg(32);
      right_22_write = prim std_reg(32);
      down_22_write = prim std_reg(32);
      pe_23 = mac_pe;
      top_23_read = prim std_reg(32);
      left_23_read = prim std_reg(32);
      down_23_write = prim std_reg(32);
      pe_30 = mac_pe;
      top_30_read = prim std_reg(32);
      left_30_read = prim std_reg(32);
      right_30_write = prim std_reg(32);
      pe_31 = mac_pe;
      top_31_read = prim std_reg(32);
      left_31_read = prim std_reg(32);
      right_31_write = prim std_reg(32);
      pe_32 = mac_pe;
      top_32_read = prim std_reg(32);
      left_32_read = prim std_reg(32);
      right_32_write = prim std_reg(32);
      pe_33 = mac_pe;
      top_33_read = prim std_reg(32);
      left_33_read = prim std_reg(32);
    }
    wires {

      group t0_idx_init {
          t0_idx.in = 3'd7;
          t0_idx.write_en = 1'd1;
          t0_idx_init[done] = t0_idx.done;
      }

      group t0_idx_update {
          t0_add.left = 3'd1;
          t0_add.right = t0_idx.out;
          t0_idx.in = t0_add.out;
          t0_idx.write_en = 1'd1;
          t0_idx_update[done] = t0_idx.done;
      }

      group t0_move {
          t0.addr0 = t0_idx.out;
          top_00_read.in = t0.read_data;
          top_00_read.write_en = 1'd1;
          t0_move[done] = top_00_read.done;
      }

      group t1_idx_init {
          t1_idx.in = 3'd7;
          t1_idx.write_en = 1'd1;
          t1_idx_init[done] = t1_idx.done;
      }

      group t1_idx_update {
          t1_add.left = 3'd1;
          t1_add.right = t1_idx.out;
          t1_idx.in = t1_add.out;
          t1_idx.write_en = 1'd1;
          t1_idx_update[done] = t1_idx.done;
      }

      group t1_move {
          t1.addr0 = t1_idx.out;
          top_01_read.in = t1.read_data;
          top_01_read.write_en = 1'd1;
          t1_move[done] = top_01_read.done;
      }

      group t2_idx_init {
          t2_idx.in = 3'd7;
          t2_idx.write_en = 1'd1;
          t2_idx_init[done] = t2_idx.done;
      }

      group t2_idx_update {
          t2_add.left = 3'd1;
          t2_add.right = t2_idx.out;
          t2_idx.in = t2_add.out;
          t2_idx.write_en = 1'd1;
          t2_idx_update[done] = t2_idx.done;
      }

      group t2_move {
          t2.addr0 = t2_idx.out;
          top_02_read.in = t2.read_data;
          top_02_read.write_en = 1'd1;
          t2_move[done] = top_02_read.done;
      }

      group t3_idx_init {
          t3_idx.in = 3'd7;
          t3_idx.write_en = 1'd1;
          t3_idx_init[done] = t3_idx.done;
      }

      group t3_idx_update {
          t3_add.left = 3'd1;
          t3_add.right = t3_idx.out;
          t3_idx.in = t3_add.out;
          t3_idx.write_en = 1'd1;
          t3_idx_update[done] = t3_idx.done;
      }

      group t3_move {
          t3.addr0 = t3_idx.out;
          top_03_read.in = t3.read_data;
          top_03_read.write_en = 1'd1;
          t3_move[done] = top_03_read.done;
      }

      group l0_idx_init {
          l0_idx.in = 3'd7;
          l0_idx.write_en = 1'd1;
          l0_idx_init[done] = l0_idx.done;
      }

      group l0_idx_update {
          l0_add.left = 3'd1;
          l0_add.right = l0_idx.out;
          l0_idx.in = l0_add.out;
          l0_idx.write_en = 1'd1;
          l0_idx_update[done] = l0_idx.done;
      }

      group l0_move {
          l0.addr0 = l0_idx.out;
          left_00_read.in = l0.read_data;
          left_00_read.write_en = 1'd1;
          l0_move[done] = left_00_read.done;
      }

      group l1_idx_init {
          l1_idx.in = 3'd7;
          l1_idx.write_en = 1'd1;
          l1_idx_init[done] = l1_idx.done;
      }

      group l1_idx_update {
          l1_add.left = 3'd1;
          l1_add.right = l1_idx.out;
          l1_idx.in = l1_add.out;
          l1_idx.write_en = 1'd1;
          l1_idx_update[done] = l1_idx.done;
      }

      group l1_move {
          l1.addr0 = l1_idx.out;
          left_10_read.in = l1.read_data;
          left_10_read.write_en = 1'd1;
          l1_move[done] = left_10_read.done;
      }

      group l2_idx_init {
          l2_idx.in = 3'd7;
          l2_idx.write_en = 1'd1;
          l2_idx_init[done] = l2_idx.done;
      }

      group l2_idx_update {
          l2_add.left = 3'd1;
          l2_add.right = l2_idx.out;
          l2_idx.in = l2_add.out;
          l2_idx.write_en = 1'd1;
          l2_idx_update[done] = l2_idx.done;
      }

      group l2_move {
          l2.addr0 = l2_idx.out;
          left_20_read.in = l2.read_data;
          left_20_read.write_en = 1'd1;
          l2_move[done] = left_20_read.done;
      }

      group l3_idx_init {
          l3_idx.in = 3'd7;
          l3_idx.write_en = 1'd1;
          l3_idx_init[done] = l3_idx.done;
      }

      group l3_idx_update {
          l3_add.left = 3'd1;
          l3_add.right = l3_idx.out;
          l3_idx.in = l3_add.out;
          l3_idx.write_en = 1'd1;
          l3_idx_update[done] = l3_idx.done;
      }

      group l3_move {
          l3.addr0 = l3_idx.out;
          left_30_read.in = l3.read_data;
          left_30_read.write_en = 1'd1;
          l3_move[done] = left_30_read.done;
      }

      group pe_00_compute {

        pe_00.go = !pe_00.done ? 1'd1;
        pe_00.top = top_00_read.out;
        pe_00.left = left_00_read.out;

        right_00_write.in = pe_00.done ? pe_00.right;
        right_00_write.write_en = pe_00.done ? 1'd1;

        down_00_write.in = pe_00.done ? pe_00.down;
        down_00_write.write_en = pe_00.done ? 1'd1;

        pe_00_compute[done] = right_00_write.done & down_00_write.done ? 1'd1;
      }

      group pe_00_right_move {
          left_01_read.in = right_00_write.out;
          left_01_read.write_en = 1'd1;
          pe_00_right_move[done] = left_01_read.done;
      }

      group pe_00_down_move {
          top_10_read.in = down_00_write.out;
          top_10_read.write_en = 1'd1;
          pe_00_down_move[done] = top_10_read.done;
      }

      group pe_00_out_write {
          out_mem.addr0 = 3'd0;
          out_mem.addr1 = 3'd0;
          out_mem.write_data = pe_00.out;
          out_mem.write_en = 1'd1;
          pe_00_out_write[done] = out_mem.done;
      }

      group pe_01_compute {

        pe_01.go = !pe_01.done ? 1'd1;
        pe_01.top = top_01_read.out;
        pe_01.left = left_01_read.out;

        right_01_write.in = pe_01.done ? pe_01.right;
        right_01_write.write_en = pe_01.done ? 1'd1;

        down_01_write.in = pe_01.done ? pe_01.down;
        down_01_write.write_en = pe_01.done ? 1'd1;

        pe_01_compute[done] = right_01_write.done & down_01_write.done ? 1'd1;
      }

      group pe_01_right_move {
          left_02_read.in = right_01_write.out;
          left_02_read.write_en = 1'd1;
          pe_01_right_move[done] = left_02_read.done;
      }

      group pe_01_down_move {
          top_11_read.in = down_01_write.out;
          top_11_read.write_en = 1'd1;
          pe_01_down_move[done] = top_11_read.done;
      }

      group pe_01_out_write {
          out_mem.addr0 = 3'd0;
          out_mem.addr1 = 3'd1;
          out_mem.write_data = pe_01.out;
          out_mem.write_en = 1'd1;
          pe_01_out_write[done] = out_mem.done;
      }

      group pe_02_compute {

        pe_02.go = !pe_02.done ? 1'd1;
        pe_02.top = top_02_read.out;
        pe_02.left = left_02_read.out;

        right_02_write.in = pe_02.done ? pe_02.right;
        right_02_write.write_en = pe_02.done ? 1'd1;

        down_02_write.in = pe_02.done ? pe_02.down;
        down_02_write.write_en = pe_02.done ? 1'd1;

        pe_02_compute[done] = right_02_write.done & down_02_write.done ? 1'd1;
      }

      group pe_02_right_move {
          left_03_read.in = right_02_write.out;
          left_03_read.write_en = 1'd1;
          pe_02_right_move[done] = left_03_read.done;
      }

      group pe_02_down_move {
          top_12_read.in = down_02_write.out;
          top_12_read.write_en = 1'd1;
          pe_02_down_move[done] = top_12_read.done;
      }

      group pe_02_out_write {
          out_mem.addr0 = 3'd0;
          out_mem.addr1 = 3'd2;
          out_mem.write_data = pe_02.out;
          out_mem.write_en = 1'd1;
          pe_02_out_write[done] = out_mem.done;
      }

      group pe_03_compute {

        pe_03.go = !pe_03.done ? 1'd1;
        pe_03.top = top_03_read.out;
        pe_03.left = left_03_read.out;

        down_03_write.in = pe_03.done ? pe_03.down;
        down_03_write.write_en = pe_03.done ? 1'd1;

        pe_03_compute[done] = down_03_write.done ? 1'd1;
      }

      group pe_03_down_move {
          top_13_read.in = down_03_write.out;
          top_13_read.write_en = 1'd1;
          pe_03_down_move[done] = top_13_read.done;
      }

      group pe_03_out_write {
          out_mem.addr0 = 3'd0;
          out_mem.addr1 = 3'd3;
          out_mem.write_data = pe_03.out;
          out_mem.write_en = 1'd1;
          pe_03_out_write[done] = out_mem.done;
      }

      group pe_10_compute {

        pe_10.go = !pe_10.done ? 1'd1;
        pe_10.top = top_10_read.out;
        pe_10.left = left_10_read.out;

        right_10_write.in = pe_10.done ? pe_10.right;
        right_10_write.write_en = pe_10.done ? 1'd1;

        down_10_write.in = pe_10.done ? pe_10.down;
        down_10_write.write_en = pe_10.done ? 1'd1;

        pe_10_compute[done] = right_10_write.done & down_10_write.done ? 1'd1;
      }

      group pe_10_right_move {
          left_11_read.in = right_10_write.out;
          left_11_read.write_en = 1'd1;
          pe_10_right_move[done] = left_11_read.done;
      }

      group pe_10_down_move {
          top_20_read.in = down_10_write.out;
          top_20_read.write_en = 1'd1;
          pe_10_down_move[done] = top_20_read.done;
      }

      group pe_10_out_write {
          out_mem.addr0 = 3'd1;
          out_mem.addr1 = 3'd0;
          out_mem.write_data = pe_10.out;
          out_mem.write_en = 1'd1;
          pe_10_out_write[done] = out_mem.done;
      }

      group pe_11_compute {

        pe_11.go = !pe_11.done ? 1'd1;
        pe_11.top = top_11_read.out;
        pe_11.left = left_11_read.out;

        right_11_write.in = pe_11.done ? pe_11.right;
        right_11_write.write_en = pe_11.done ? 1'd1;

        down_11_write.in = pe_11.done ? pe_11.down;
        down_11_write.write_en = pe_11.done ? 1'd1;

        pe_11_compute[done] = right_11_write.done & down_11_write.done ? 1'd1;
      }

      group pe_11_right_move {
          left_12_read.in = right_11_write.out;
          left_12_read.write_en = 1'd1;
          pe_11_right_move[done] = left_12_read.done;
      }

      group pe_11_down_move {
          top_21_read.in = down_11_write.out;
          top_21_read.write_en = 1'd1;
          pe_11_down_move[done] = top_21_read.done;
      }

      group pe_11_out_write {
          out_mem.addr0 = 3'd1;
          out_mem.addr1 = 3'd1;
          out_mem.write_data = pe_11.out;
          out_mem.write_en = 1'd1;
          pe_11_out_write[done] = out_mem.done;
      }

      group pe_12_compute {

        pe_12.go = !pe_12.done ? 1'd1;
        pe_12.top = top_12_read.out;
        pe_12.left = left_12_read.out;

        right_12_write.in = pe_12.done ? pe_12.right;
        right_12_write.write_en = pe_12.done ? 1'd1;

        down_12_write.in = pe_12.done ? pe_12.down;
        down_12_write.write_en = pe_12.done ? 1'd1;

        pe_12_compute[done] = right_12_write.done & down_12_write.done ? 1'd1;
      }

      group pe_12_right_move {
          left_13_read.in = right_12_write.out;
          left_13_read.write_en = 1'd1;
          pe_12_right_move[done] = left_13_read.done;
      }

      group pe_12_down_move {
          top_22_read.in = down_12_write.out;
          top_22_read.write_en = 1'd1;
          pe_12_down_move[done] = top_22_read.done;
      }

      group pe_12_out_write {
          out_mem.addr0 = 3'd1;
          out_mem.addr1 = 3'd2;
          out_mem.write_data = pe_12.out;
          out_mem.write_en = 1'd1;
          pe_12_out_write[done] = out_mem.done;
      }

      group pe_13_compute {

        pe_13.go = !pe_13.done ? 1'd1;
        pe_13.top = top_13_read.out;
        pe_13.left = left_13_read.out;

        down_13_write.in = pe_13.done ? pe_13.down;
        down_13_write.write_en = pe_13.done ? 1'd1;

        pe_13_compute[done] = down_13_write.done ? 1'd1;
      }

      group pe_13_down_move {
          top_23_read.in = down_13_write.out;
          top_23_read.write_en = 1'd1;
          pe_13_down_move[done] = top_23_read.done;
      }

      group pe_13_out_write {
          out_mem.addr0 = 3'd1;
          out_mem.addr1 = 3'd3;
          out_mem.write_data = pe_13.out;
          out_mem.write_en = 1'd1;
          pe_13_out_write[done] = out_mem.done;
      }

      group pe_20_compute {

        pe_20.go = !pe_20.done ? 1'd1;
        pe_20.top = top_20_read.out;
        pe_20.left = left_20_read.out;

        right_20_write.in = pe_20.done ? pe_20.right;
        right_20_write.write_en = pe_20.done ? 1'd1;

        down_20_write.in = pe_20.done ? pe_20.down;
        down_20_write.write_en = pe_20.done ? 1'd1;

        pe_20_compute[done] = right_20_write.done & down_20_write.done ? 1'd1;
      }

      group pe_20_right_move {
          left_21_read.in = right_20_write.out;
          left_21_read.write_en = 1'd1;
          pe_20_right_move[done] = left_21_read.done;
      }

      group pe_20_down_move {
          top_30_read.in = down_20_write.out;
          top_30_read.write_en = 1'd1;
          pe_20_down_move[done] = top_30_read.done;
      }

      group pe_20_out_write {
          out_mem.addr0 = 3'd2;
          out_mem.addr1 = 3'd0;
          out_mem.write_data = pe_20.out;
          out_mem.write_en = 1'd1;
          pe_20_out_write[done] = out_mem.done;
      }

      group pe_21_compute {

        pe_21.go = !pe_21.done ? 1'd1;
        pe_21.top = top_21_read.out;
        pe_21.left = left_21_read.out;

        right_21_write.in = pe_21.done ? pe_21.right;
        right_21_write.write_en = pe_21.done ? 1'd1;

        down_21_write.in = pe_21.done ? pe_21.down;
        down_21_write.write_en = pe_21.done ? 1'd1;

        pe_21_compute[done] = right_21_write.done & down_21_write.done ? 1'd1;
      }

      group pe_21_right_move {
          left_22_read.in = right_21_write.out;
          left_22_read.write_en = 1'd1;
          pe_21_right_move[done] = left_22_read.done;
      }

      group pe_21_down_move {
          top_31_read.in = down_21_write.out;
          top_31_read.write_en = 1'd1;
          pe_21_down_move[done] = top_31_read.done;
      }

      group pe_21_out_write {
          out_mem.addr0 = 3'd2;
          out_mem.addr1 = 3'd1;
          out_mem.write_data = pe_21.out;
          out_mem.write_en = 1'd1;
          pe_21_out_write[done] = out_mem.done;
      }

      group pe_22_compute {

        pe_22.go = !pe_22.done ? 1'd1;
        pe_22.top = top_22_read.out;
        pe_22.left = left_22_read.out;

        right_22_write.in = pe_22.done ? pe_22.right;
        right_22_write.write_en = pe_22.done ? 1'd1;

        down_22_write.in = pe_22.done ? pe_22.down;
        down_22_write.write_en = pe_22.done ? 1'd1;

        pe_22_compute[done] = right_22_write.done & down_22_write.done ? 1'd1;
      }

      group pe_22_right_move {
          left_23_read.in = right_22_write.out;
          left_23_read.write_en = 1'd1;
          pe_22_right_move[done] = left_23_read.done;
      }

      group pe_22_down_move {
          top_32_read.in = down_22_write.out;
          top_32_read.write_en = 1'd1;
          pe_22_down_move[done] = top_32_read.done;
      }

      group pe_22_out_write {
          out_mem.addr0 = 3'd2;
          out_mem.addr1 = 3'd2;
          out_mem.write_data = pe_22.out;
          out_mem.write_en = 1'd1;
          pe_22_out_write[done] = out_mem.done;
      }

      group pe_23_compute {

        pe_23.go = !pe_23.done ? 1'd1;
        pe_23.top = top_23_read.out;
        pe_23.left = left_23_read.out;

        down_23_write.in = pe_23.done ? pe_23.down;
        down_23_write.write_en = pe_23.done ? 1'd1;

        pe_23_compute[done] = down_23_write.done ? 1'd1;
      }

      group pe_23_down_move {
          top_33_read.in = down_23_write.out;
          top_33_read.write_en = 1'd1;
          pe_23_down_move[done] = top_33_read.done;
      }

      group pe_23_out_write {
          out_mem.addr0 = 3'd2;
          out_mem.addr1 = 3'd3;
          out_mem.write_data = pe_23.out;
          out_mem.write_en = 1'd1;
          pe_23_out_write[done] = out_mem.done;
      }

      group pe_30_compute {

        pe_30.go = !pe_30.done ? 1'd1;
        pe_30.top = top_30_read.out;
        pe_30.left = left_30_read.out;

        right_30_write.in = pe_30.done ? pe_30.right;
        right_30_write.write_en = pe_30.done ? 1'd1;

        pe_30_compute[done] = right_30_write.done ? 1'd1;
      }

      group pe_30_right_move {
          left_31_read.in = right_30_write.out;
          left_31_read.write_en = 1'd1;
          pe_30_right_move[done] = left_31_read.done;
      }

      group pe_30_out_write {
          out_mem.addr0 = 3'd3;
          out_mem.addr1 = 3'd0;
          out_mem.write_data = pe_30.out;
          out_mem.write_en = 1'd1;
          pe_30_out_write[done] = out_mem.done;
      }

      group pe_31_compute {

        pe_31.go = !pe_31.done ? 1'd1;
        pe_31.top = top_31_read.out;
        pe_31.left = left_31_read.out;

        right_31_write.in = pe_31.done ? pe_31.right;
        right_31_write.write_en = pe_31.done ? 1'd1;

        pe_31_compute[done] = right_31_write.done ? 1'd1;
      }

      group pe_31_right_move {
          left_32_read.in = right_31_write.out;
          left_32_read.write_en = 1'd1;
          pe_31_right_move[done] = left_32_read.done;
      }

      group pe_31_out_write {
          out_mem.addr0 = 3'd3;
          out_mem.addr1 = 3'd1;
          out_mem.write_data = pe_31.out;
          out_mem.write_en = 1'd1;
          pe_31_out_write[done] = out_mem.done;
      }

      group pe_32_compute {

        pe_32.go = !pe_32.done ? 1'd1;
        pe_32.top = top_32_read.out;
        pe_32.left = left_32_read.out;

        right_32_write.in = pe_32.done ? pe_32.right;
        right_32_write.write_en = pe_32.done ? 1'd1;

        pe_32_compute[done] = right_32_write.done ? 1'd1;
      }

      group pe_32_right_move {
          left_33_read.in = right_32_write.out;
          left_33_read.write_en = 1'd1;
          pe_32_right_move[done] = left_33_read.done;
      }

      group pe_32_out_write {
          out_mem.addr0 = 3'd3;
          out_mem.addr1 = 3'd2;
          out_mem.write_data = pe_32.out;
          out_mem.write_en = 1'd1;
          pe_32_out_write[done] = out_mem.done;
      }

      group pe_33_compute {

        pe_33.go = !pe_33.done ? 1'd1;
        pe_33.top = top_33_read.out;
        pe_33.left = left_33_read.out;

        pe_33_compute[done] = pe_33.done ? 1'd1;
      }


      group pe_33_out_write {
          out_mem.addr0 = 3'd3;
          out_mem.addr1 = 3'd3;
          out_mem.write_data = pe_33.out;
          out_mem.write_en = 1'd1;
          pe_33_out_write[done] = out_mem.done;
      }
    }
    control {

      seq {

        par {
            t0_idx_init; t1_idx_init; t2_idx_init; t3_idx_init; l0_idx_init; l1_idx_init; l2_idx_init; l3_idx_init;
        }
        par {
            t0_idx_update; l0_idx_update;
        }
        par {
            t0_move; l0_move;
        }
        par {
            t0_idx_update; l0_idx_update; t1_idx_update; l1_idx_update; pe_00_compute;
        }
        par {
            t0_move; t1_move; pe_00_down_move; l0_move; pe_00_right_move; l1_move;
        }
        par {
            t0_idx_update; l0_idx_update; t1_idx_update; t2_idx_update; l1_idx_update; l2_idx_update; pe_00_compute; pe_01_compute; pe_10_compute;
        }
        par {
            t0_move; t1_move; t2_move; pe_00_down_move; pe_01_down_move; pe_10_down_move; l0_move; pe_00_right_move; pe_01_right_move; l1_move; pe_10_right_move; l2_move;
        }
        par {
            t0_idx_update; l0_idx_update; t1_idx_update; t2_idx_update; t3_idx_update; l1_idx_update; l2_idx_update; l3_idx_update; pe_00_compute; pe_01_compute; pe_02_compute; pe_10_compute; pe_11_compute; pe_20_compute;
        }
        par {
            t0_move; t1_move; t2_move; t3_move; pe_00_down_move; pe_01_down_move; pe_02_down_move; pe_10_down_move; pe_11_down_move; pe_20_down_move; l0_move; pe_00_right_move; pe_01_right_move; pe_02_right_move; l1_move; pe_10_right_move; pe_11_right_move; l2_move; pe_20_right_move; l3_move;
        }
        par {
            t1_idx_update; t2_idx_update; t3_idx_update; l1_idx_update; l2_idx_update; l3_idx_update; pe_00_compute; pe_01_compute; pe_02_compute; pe_03_compute; pe_10_compute; pe_11_compute; pe_12_compute; pe_20_compute; pe_21_compute; pe_30_compute;
        }
        par {
            t1_move; t2_move; t3_move; pe_00_down_move; pe_01_down_move; pe_02_down_move; pe_03_down_move; pe_10_down_move; pe_11_down_move; pe_12_down_move; pe_20_down_move; pe_21_down_move; pe_00_right_move; pe_01_right_move; pe_02_right_move; l1_move; pe_10_right_move; pe_11_right_move; pe_12_right_move; l2_move; pe_20_right_move; pe_21_right_move; l3_move; pe_30_right_move;
        }
        par {
            t2_idx_update; t3_idx_update; l2_idx_update; l3_idx_update; pe_01_compute; pe_02_compute; pe_03_compute; pe_10_compute; pe_11_compute; pe_12_compute; pe_13_compute; pe_20_compute; pe_21_compute; pe_22_compute; pe_30_compute; pe_31_compute;
        }
        par {
            t2_move; t3_move; pe_01_down_move; pe_02_down_move; pe_03_down_move; pe_10_down_move; pe_11_down_move; pe_12_down_move; pe_13_down_move; pe_20_down_move; pe_21_down_move; pe_22_down_move; pe_01_right_move; pe_02_right_move; pe_10_right_move; pe_11_right_move; pe_12_right_move; l2_move; pe_20_right_move; pe_21_right_move; pe_22_right_move; l3_move; pe_30_right_move; pe_31_right_move;
        }
        par {
            t3_idx_update; l3_idx_update; pe_02_compute; pe_03_compute; pe_11_compute; pe_12_compute; pe_13_compute; pe_20_compute; pe_21_compute; pe_22_compute; pe_23_compute; pe_30_compute; pe_31_compute; pe_32_compute;
        }
        par {
            t3_move; pe_02_down_move; pe_03_down_move; pe_11_down_move; pe_12_down_move; pe_13_down_move; pe_20_down_move; pe_21_down_move; pe_22_down_move; pe_23_down_move; pe_02_right_move; pe_11_right_move; pe_12_right_move; pe_20_right_move; pe_21_right_move; pe_22_right_move; l3_move; pe_30_right_move; pe_31_right_move; pe_32_right_move;
        }
        par {
            pe_03_compute; pe_12_compute; pe_13_compute; pe_21_compute; pe_22_compute; pe_23_compute; pe_30_compute; pe_31_compute; pe_32_compute; pe_33_compute;
        }
        par {
            pe_03_down_move; pe_12_down_move; pe_13_down_move; pe_21_down_move; pe_22_down_move; pe_23_down_move; pe_12_right_move; pe_21_right_move; pe_22_right_move; pe_30_right_move; pe_31_right_move; pe_32_right_move;
        }
        par {
            pe_13_compute; pe_22_compute; pe_23_compute; pe_31_compute; pe_32_compute; pe_33_compute;
        }
        par {
            pe_13_down_move; pe_22_down_move; pe_23_down_move; pe_22_right_move; pe_31_right_move; pe_32_right_move;
        }
        par {
            pe_23_compute; pe_32_compute; pe_33_compute;
        }
        par {
            pe_23_down_move; pe_32_right_move;
        }
        par {
            pe_33_compute;
        }
        seq {
            pe_00_out_write; pe_01_out_write; pe_02_out_write; pe_03_out_write; pe_10_out_write; pe_11_out_write; pe_12_out_write; pe_13_out_write; pe_20_out_write; pe_21_out_write; pe_22_out_write; pe_23_out_write; pe_30_out_write; pe_31_out_write; pe_32_out_write; pe_33_out_write;
        }
      }
    }
}


